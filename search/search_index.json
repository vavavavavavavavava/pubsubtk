{"config":{"lang":["ja"],"separator":"[\\s\\-\u3000\u3001\u3002\uff0c\uff0e]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"PubSubTk","text":"<p>PubSubTk\u306f\u3001Python\u3067\u300c\u578b\u5b89\u5168\u300d\u300c\u758e\u7d50\u5408\u300d\u300c\u5ba3\u8a00\u7684UI\u300d\u3092\u5b9f\u73fe\u3059\u308b\u8efd\u91cfGUI\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002</p>"},{"location":"#_1","title":"\u2728 \u7279\u9577","text":"<ul> <li>Pub/Sub\u30d1\u30bf\u30fc\u30f3\u306b\u3088\u308b\u90e8\u54c1\u9593\u306e\u758e\u7d50\u5408\u30fb\u30c6\u30b9\u30bf\u30d6\u30eb\u8a2d\u8a08</li> <li>Pydantic\u30e2\u30c7\u30eb\u3067\u578b\u5b89\u5168\u306a\u72b6\u614b\u7ba1\u7406\u3068\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3</li> <li>3\u5c64\u5206\u96e2\uff08Container / Presentational / Processor\uff09\u306b\u3088\u308b\u4fdd\u5b88\u6027\u30fb\u518d\u5229\u7528\u6027</li> <li>\u30ea\u30a2\u30af\u30c6\u30a3\u30d6UI\u3068\u67d4\u8edf\u306a\u753b\u9762\u9077\u79fb</li> <li>StateProxy\u306b\u3088\u308bIDE\u9023\u643a\uff08\u88dc\u5b8c\u30fb\u5b9a\u7fa9\u30b8\u30e3\u30f3\u30d7\u30fb\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u25ce\uff09</li> <li>Storybook\u306b\u3088\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u958b\u767a\u74b0\u5883\uff08\u5206\u96e2\u958b\u767a\u30fb\u52d5\u7684Knob\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\uff09</li> </ul>"},{"location":"#_2","title":"\ud83d\ude80 \u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8","text":"<pre><code>pip install git+https://github.com/vavavavavavavavava/pubsubtk\n</code></pre> <pre><code>from pubsubtk import TkApplication, ContainerComponentTk\nfrom pydantic import BaseModel\n\nclass AppState(BaseModel):\n    count: int = 0\n\nclass Main(ContainerComponentTk[AppState]):\n    def setup_ui(self):\n        import tkinter as tk\n        self.label = tk.Label(self, text=\"0\")\n        self.label.pack()\n        tk.Button(self, text=\"\u5897\u3084\u3059\", command=self.inc).pack()\n    def setup_subscriptions(self):\n        self.sub_state_changed(self.store.state.count, self.on_count)\n    def on_count(self, _, new): self.label.config(text=str(new))\n    def inc(self):\n        state = self.store.get_current_state()\n        self.pub_update_state(self.store.state.count, state.count + 1)\n\nif __name__ == \"__main__\":\n    app = TkApplication(AppState, title=\"Demo\")\n    app.switch_container(Main)\n    app.run()\n</code></pre>"},{"location":"#_3","title":"\ud83c\udfd7\ufe0f \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3","text":"<pre><code>graph LR\n    Store[Store&lt;br/&gt;\u72b6\u614b\u7ba1\u7406] --&gt; Container[Container&lt;br/&gt;\u72b6\u614b\u9023\u643aUI]\n    Container --&gt; Presentational[Presentational&lt;br/&gt;\u7d14\u7c8b\u8868\u793a]\n    Container --&gt; Processor[Processor&lt;br/&gt;\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af]\n    Processor --&gt; Store\n\n    style Store fill:#e1f5fe\n    style Container fill:#f3e5f5\n    style Presentational fill:#e8f5e8\n    style Processor fill:#fff3e0</code></pre>"},{"location":"#storybook","title":"\ud83c\udfa8 Storybook \u30b5\u30dd\u30fc\u30c8","text":"<p>PubSubTk\u306b\u306f\u3001UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u72ec\u7acb\u3057\u3066\u958b\u767a\u30fb\u30c6\u30b9\u30c8\u3067\u304d\u308bStorybook\u304c\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\uff1a</p> <pre><code>from pubsubtk.storybook import story, StorybookApplication\n\n@story(\"Button.Primary\")\ndef primary_button_story(ctx):\n    import tkinter as tk\n\n    # \u52d5\u7684\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\n    text = ctx.knob(\"text\", str, \"Click me!\")\n    size = ctx.knob(\"size\", int, 12, range_=(8, 24))\n\n    btn = tk.Button(ctx.parent, text=text.value, font=(\"\", size.value))\n    btn.pack(padx=20, pady=20)\n    return btn\n\nif __name__ == \"__main__\":\n    app = StorybookApplication()\n    app.run()\n</code></pre>"},{"location":"#_4","title":"\ud83d\udcda \u307e\u305a\u8aad\u3080","text":"<ul> <li>\u306f\u3058\u3081\u306b</li> <li>\u30ec\u30b7\u30d4\u96c6</li> <li>\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb</li> <li>Storybook\u30ac\u30a4\u30c9</li> <li>FAQ</li> </ul>"},{"location":"cookbook/","title":"\u5b9f\u88c5\u30ec\u30b7\u30d4\u96c6\uff08Cookbook\uff09","text":"<p>PubSubTk\u3067\u3088\u304f\u4f7f\u3046\u300c\u3061\u3087\u3044\u30cd\u30bf\u300d\u3084\u5b9f\u8df5Tips\u3092\u307e\u3068\u3081\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"cookbook/#_1","title":"\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3078\u30c7\u30fc\u30bf\u3092\u6e21\u3059","text":"<pre><code># \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u8868\u793a\napp.pub_open_subwindow(DialogContainer, kwargs={\"item_id\": 123})\n\n# DialogContainer\u5074\nclass DialogContainer(ContainerComponentTk[AppState]):\n    def setup_ui(self):\n        item_id = self.kwargs.get(\"item_id\")\n        ...\n</code></pre>"},{"location":"cookbook/#undoredo","title":"Undo/Redo\u306e\u57fa\u672c\u5b9f\u88c5\uff08\u72b6\u614b\u5168\u4f53\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u65b9\u5f0f\uff09","text":"<p>\u30dd\u30a4\u30f3\u30c8: \u30a2\u30d7\u30ea\u306e\u72b6\u614b\u5168\u4f53\u3092<code>model_dump()</code>\u3067\u5c65\u6b74\u3068\u3057\u3066\u4fdd\u6301\u3057\u3001<code>pub_replace_state()</code>\u3067\u5fa9\u5143\u3057\u307e\u3059\u3002</p> <pre><code>from pydantic import BaseModel, Field\nfrom typing import Any, List\n\nclass AppState(BaseModel):\n    value: int = 0\n    past: List[Any] = Field(default_factory=list)\n    future: List[Any] = Field(default_factory=list)\n\n# \u72b6\u614b\u3092\u5909\u66f4\u3059\u308b\u524d\u306b\u300c\u73fe\u72b6\u614b\u300d\u3092past\u306b\u8ffd\u52a0\u3059\u308b\ndef set_value(self, new_value):\n    state = self.store.get_current_state()\n    # \u73fe\u5728\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3092\u5c65\u6b74\u306b\u7a4d\u3080\n    past = state.past + [state.model_dump()]\n    self.pub_update_state(self.store.state.past, past)\n    self.pub_update_state(self.store.state.future, [])\n    self.pub_update_state(self.store.state.value, new_value)\n\ndef undo(self):\n    state = self.store.get_current_state()\n    if state.past:\n        prev = state.past[-1]\n        self.pub_update_state(self.store.state.future, [state.model_dump()] + state.future)\n        self.pub_replace_state(AppState(**prev))\n        self.pub_update_state(self.store.state.past, state.past[:-1])\n\ndef redo(self):\n    state = self.store.get_current_state()\n    if state.future:\n        next_state = state.future[0]\n        self.pub_update_state(self.store.state.past, state.past + [state.model_dump()])\n        self.pub_replace_state(AppState(**next_state))\n        self.pub_update_state(self.store.state.future, state.future[1:])\n</code></pre> <ul> <li>\u72b6\u614b\u5909\u66f4\u524d\u306b<code>past</code>\u306b\u73fe\u5728\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3092<code>model_dump()</code>\u3067\u8ffd\u52a0</li> <li><code>undo</code>\u306f<code>past</code>\u304b\u3089\u5fa9\u5143\u3001<code>redo</code>\u306f<code>future</code>\u304b\u3089\u5fa9\u5143</li> </ul>"},{"location":"cookbook/#_2","title":"\u30b0\u30ed\u30fc\u30d0\u30eb\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8","text":"<pre><code># tkinter\u306ebind\u3067\u5bfe\u5fdc\u53ef\u80fd\nroot.bind('&lt;Control-s&gt;', lambda e: app.publish(SaveEvents.SAVE))\n</code></pre>"},{"location":"cookbook/#json","title":"JSON\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58/\u8aad\u8fbc","text":"<pre><code>import json\nfrom tkinter import filedialog\n\ndef save_to_json(state):\n    path = filedialog.asksaveasfilename(defaultextension=\".json\")\n    if path:\n        with open(path, \"w\") as f:\n            json.dump(state.model_dump(), f, indent=2)\n\ndef load_from_json():\n    path = filedialog.askopenfilename(filetypes=[(\"JSON files\", \"*.json\")])\n    if path:\n        with open(path, \"r\") as f:\n            data = json.load(f)\n        # Pydantic\u30e2\u30c7\u30eb\u3067\u691c\u8a3c\n        return AppState.model_validate(data)\n</code></pre>"},{"location":"cookbook/#pubsub","title":"\u4efb\u610fPubSub\u30a4\u30d9\u30f3\u30c8\u306e\u767a\u884c","text":"<pre><code>from pubsubtk import AutoNamedTopic\nfrom enum import auto\n\nclass MyEvents(AutoNamedTopic):\n    EXPORT = auto()\n\n# \u767a\u884c\nself.publish(MyEvents.EXPORT, filepath=\"output.csv\")\n\n# \u8cfc\u8aad\nself.subscribe(MyEvents.EXPORT, self.on_export)\n</code></pre>"},{"location":"cookbook/#_3","title":"\u30ab\u30b9\u30bf\u30e0\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4f5c\u308a\u65b9","text":"<pre><code>from pubsubtk import PresentationalComponentTk\n\nclass MyButton(PresentationalComponentTk):\n    def setup_ui(self):\n        import tkinter as tk\n        self.button = tk.Button(self, text=\"\u62bc\u3057\u3066\uff01\", command=self.on_click)\n        self.button.pack()\n    def on_click(self):\n        self.trigger_event(\"clicked\")\n</code></pre>"},{"location":"cookbook/#storybook","title":"Storybook \u3067\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u958b\u767a","text":""},{"location":"cookbook/#_4","title":"\u57fa\u672c\u7684\u306a\u30b9\u30c8\u30fc\u30ea\u30fc\u5b9a\u7fa9","text":"<pre><code>from pubsubtk.storybook import story\n\n@story(\"Components.Button\")\ndef button_story(ctx):\n    import tkinter as tk\n    btn = tk.Button(ctx.parent, text=\"Click me!\")\n    btn.pack()\n    return btn\n</code></pre>"},{"location":"cookbook/#knob","title":"Knob\u3092\u4f7f\u3063\u305f\u52d5\u7684\u30d7\u30ed\u30d1\u30c6\u30a3","text":"<pre><code>@story(\"Components.Label\")\ndef label_story(ctx):\n    import tkinter as tk\n\n    # \u30c6\u30ad\u30b9\u30c8\u3092\u52d5\u7684\u306b\u5909\u66f4\n    text = ctx.knob(\"text\", str, \"Hello World\")\n    font_size = ctx.knob(\"fontSize\", int, 12, range_=(8, 48))\n    color = ctx.knob(\"color\", str, \"black\", choices=[\"black\", \"red\", \"blue\", \"green\"])\n\n    label = tk.Label(\n        ctx.parent,\n        text=text.value,\n        font=(\"Arial\", font_size.value),\n        fg=color.value\n    )\n    label.pack(padx=20, pady=20)\n    return label\n</code></pre>"},{"location":"cookbook/#pubsub_1","title":"PubSub\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30b9\u30c8\u30fc\u30ea\u30fc","text":"<pre><code>from pubsubtk import PresentationalComponentTk\n\nclass MyCard(PresentationalComponentTk):\n    def setup_ui(self):\n        import tkinter as tk\n        self.title_label = tk.Label(self, font=(\"Arial\", 14, \"bold\"))\n        self.title_label.pack()\n        self.content_label = tk.Label(self)\n        self.content_label.pack()\n\n    def update_data(self, title: str, content: str):\n        self.title_label.config(text=title)\n        self.content_label.config(text=content)\n\n@story(\"Components.Card\")\ndef card_story(ctx):\n    # Knob\u3067\u52d5\u7684\u306b\u30c7\u30fc\u30bf\u3092\u8a2d\u5b9a\n    title = ctx.knob(\"title\", str, \"Card Title\")\n    content = ctx.knob(\"content\", str, \"This is the card content.\", multiline=True)\n\n    card = MyCard(ctx.parent)\n    card.update_data(title.value, content.value)\n    card.pack(fill=\"both\", expand=True, padx=20, pady=20)\n\n    # Knob\u306e\u5024\u304c\u5909\u66f4\u3055\u308c\u305f\u3089\u81ea\u52d5\u66f4\u65b0\n    title.add_change_callback(lambda v: card.update_data(v, content.value))\n    content.add_change_callback(lambda v: card.update_data(title.value, v))\n\n    return card\n</code></pre>"},{"location":"cookbook/#_5","title":"\u30b9\u30c8\u30fc\u30ea\u30fc\u306e\u81ea\u52d5\u691c\u51fa","text":"<pre><code># run_storybook.py\nfrom pubsubtk.storybook import StorybookApplication\nfrom pubsubtk.storybook.core.auto_discover import discover_stories\n\nif __name__ == \"__main__\":\n    # src/\u4ee5\u4e0b\u306e@story\u3092\u81ea\u52d5\u691c\u51fa\n    discover_stories(\"src\")\n\n    app = StorybookApplication()\n    app.run()\n</code></pre> <p>\u4ed6\u306b\u3082\u300cTips\u8ffd\u52a0\u300d\u6b53\u8fce\uff01\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u3084Issue\u3067\u63d0\u6848\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"dev/","title":"\u958b\u767a\u8005\u5411\u3051\u30ac\u30a4\u30c9","text":"<p>\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3078\u306e\u8ca2\u732e\u3092\u6b53\u8fce\u3057\u307e\u3059\uff01</p>"},{"location":"dev/#_2","title":"\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u30ac\u30a4\u30c9","text":""},{"location":"dev/#_3","title":"\u30d0\u30b0\u5831\u544a\u30fb\u6a5f\u80fd\u8981\u671b","text":"<ul> <li>\u30d0\u30b0\u3084\u6a5f\u80fd\u8ffd\u52a0\u306e\u8981\u671b\u306f GitHub Issue \u3078</li> <li>\u518d\u73fe\u624b\u9806\u3084\u671f\u5f85\u3059\u308b\u52d5\u4f5c\u3092\u66f8\u3044\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u52a9\u304b\u308a\u307e\u3059</li> </ul>"},{"location":"dev/#_4","title":"\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8","text":"<ul> <li>Draft\u3067\u3082\u6b53\u8fce\u3057\u307e\u3059\uff08\u4f5c\u696d\u9014\u4e2d\u3067\u3082OK\uff09</li> <li>\u30b3\u30fc\u30c9\u306fPEP8/black\u306b\u6e96\u62e0\u3057\u3001\u578b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u30fbdocstring\u3092\u63a8\u5968</li> <li>\u65e2\u5b58\u306e\u30b5\u30f3\u30d7\u30eb\u30fb\u30c6\u30b9\u30c8\u304c\u843d\u3061\u3066\u3044\u306a\u3044\u304b\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044</li> </ul>"},{"location":"dev/#_5","title":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30fb\u30ec\u30b7\u30d4\u306e\u8ffd\u52a0","text":"<ul> <li>Cookbook\u3084FAQ\u306a\u3069\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u6539\u5584\u3082\u5927\u6b53\u8fce</li> <li>Tips\u3084\u30b5\u30f3\u30d7\u30eb\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306fPR\u307e\u305f\u306fIssue\u3067\u3054\u63d0\u6848\u304f\u3060\u3055\u3044</li> </ul>"},{"location":"dev/#_6","title":"\u30b3\u30df\u30e5\u30cb\u30c6\u30a3","text":"<ul> <li>\u8cea\u554f\u3084\u96d1\u8ac7\u3001\u8b70\u8ad6\u306f GitHub Discussions \u3067</li> <li>\u65e5\u672c\u8a9e\u30fb\u82f1\u8a9e\u3069\u3061\u3089\u3067\u3082OK</li> </ul>"},{"location":"dev/#_7","title":"\u30e9\u30a4\u30bb\u30f3\u30b9","text":"<p>\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f \u3053\u3061\u3089\u306e\u30e9\u30a4\u30bb\u30f3\u30b9 \u306e\u3082\u3068\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"examples/","title":"\u30b5\u30f3\u30d7\u30eb\u96c6","text":"<p>PubSubTk\u3092\u4f7f\u3063\u305f\u73fe\u5b9f\u7684\u306aGUI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002</p>"},{"location":"examples/#1-todo","title":"1. Todo\u30a2\u30d7\u30ea\uff08\u72b6\u614b\u7ba1\u7406\u30fb\u30ea\u30b9\u30c8\u64cd\u4f5c\u30fb\u753b\u9762\u9077\u79fb\uff09","text":"<p>\u72b6\u614b\u5b9a\u7fa9\u30fb\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u30fbUI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e3\u5c64\u5206\u96e2\u3092\u6d3b\u7528\u3057\u305f\u5178\u578b\u7684\u306a\u4f8b\u3067\u3059\u3002</p> <pre><code>from pydantic import BaseModel\nfrom typing import List\nfrom pubsubtk import TkApplication, ContainerComponentTk, ProcessorBase, AutoNamedTopic\nfrom enum import auto\n\nclass TodoItem(BaseModel):\n    id: int\n    text: str\n    done: bool = False\n\nclass AppState(BaseModel):\n    todos: List[TodoItem] = []\n    next_id: int = 1\n\nclass Events(AutoNamedTopic):\n    ADD = auto()\n    TOGGLE = auto()\n    DELETE = auto()\n\nclass MainProcessor(ProcessorBase[AppState]):\n    def setup_subscriptions(self):\n        self.subscribe(Events.ADD, self.add)\n        self.subscribe(Events.TOGGLE, self.toggle)\n        self.subscribe(Events.DELETE, self.delete)\n    def add(self, text: str):\n        state = self.store.get_current_state()\n        todo = TodoItem(id=state.next_id, text=text)\n        self.pub_add_to_list(self.store.state.todos, todo)\n        self.pub_update_state(self.store.state.next_id, state.next_id + 1)\n    def toggle(self, todo_id: int):\n        state = self.store.get_current_state()\n        new_todos = [\n            TodoItem(**dict(t), done=not t.done) if t.id == todo_id else t\n            for t in state.todos\n        ]\n        self.pub_update_state(self.store.state.todos, new_todos)\n    def delete(self, todo_id: int):\n        state = self.store.get_current_state()\n        new_todos = [t for t in state.todos if t.id != todo_id]\n        self.pub_update_state(self.store.state.todos, new_todos)\n\nclass TodoContainer(ContainerComponentTk[AppState]):\n    def setup_ui(self):\n        import tkinter as tk\n        self.entry = tk.Entry(self)\n        self.entry.pack(fill=tk.X, padx=5, pady=5)\n        self.entry.bind(\"&lt;Return&gt;\", lambda e: self.on_add())\n        tk.Button(self, text=\"\u8ffd\u52a0\", command=self.on_add).pack()\n        self.list_frame = tk.Frame(self)\n        self.list_frame.pack(fill=tk.BOTH, expand=True)\n        self.todo_widgets = {}\n    def setup_subscriptions(self):\n        self.sub_for_refresh(self.store.state.todos, self.refresh_list)\n    def refresh_from_state(self):\n        self.refresh_list()\n    def refresh_list(self):\n        for w in self.todo_widgets.values():\n            w.destroy()\n        self.todo_widgets.clear()\n        state = self.store.get_current_state()\n        for todo in state.todos:\n            self.add_todo_widget(todo)\n    def add_todo_widget(self, todo):\n        import tkinter as tk\n        f = tk.Frame(self.list_frame)\n        f.pack(fill=tk.X, pady=2)\n        var = tk.BooleanVar(value=todo.done)\n        chk = tk.Checkbutton(f, variable=var, command=lambda: self.on_toggle(todo.id))\n        chk.pack(side=tk.LEFT)\n        lbl = tk.Label(f, text=todo.text)\n        lbl.pack(side=tk.LEFT, padx=5)\n        btn = tk.Button(f, text=\"\u524a\u9664\", command=lambda: self.on_delete(todo.id))\n        btn.pack(side=tk.RIGHT)\n        self.todo_widgets[todo.id] = f\n    def on_add(self):\n        text = self.entry.get().strip()\n        if text:\n            self.publish(Events.ADD, text=text)\n            self.entry.delete(0, 'end')\n    def on_toggle(self, todo_id: int):\n        self.publish(Events.TOGGLE, todo_id=todo_id)\n    def on_delete(self, todo_id: int):\n        self.publish(Events.DELETE, todo_id=todo_id)\n\nif __name__ == \"__main__\":\n    app = TkApplication(AppState, title=\"Todo App\")\n    app.pub_register_processor(MainProcessor)\n    app.switch_container(TodoContainer)\n    app.run()\n</code></pre>"},{"location":"examples/#2-csvjson","title":"2. \u30c7\u30fc\u30bf\u30d3\u30e5\u30fc\u30a2\uff08CSV/JSON\u8868\u793a\uff09","text":"<p>CSV\u3084JSON\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30c6\u30fc\u30d6\u30eb\u8868\u793a\u30fb\u7de8\u96c6\u3059\u308b\u30a2\u30d7\u30ea\u4f8b\uff08\u8a73\u7d30\u306fCookbook\u3084GitHub\u53c2\u7167\uff09\u3002</p>"},{"location":"examples/#3-pubsubdefaulttopicbase","title":"3. PubSubDefaultTopicBase\u306e\u5168\u30e1\u30bd\u30c3\u30c9\u30c7\u30e2","text":"<p>PubSubDefaultTopicBase\u306e\u5168\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u305f\u30b3\u30f3\u30d1\u30af\u30c8\u306a\u30c7\u30e2\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u5404\u7a2e\u753b\u9762\u9077\u79fb\u30fb\u72b6\u614b\u5909\u66f4\u30fb\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u30fbProcessor\u52d5\u7684\u767b\u9332\u306a\u3069\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u4f7f\u3044\u65b9\u3092\u7dcf\u5408\u7684\u306b\u78ba\u8a8d\u3057\u305f\u3044\u65b9\u306f\u3053\u3061\u3089\u306e\u30c7\u30e2\u30b3\u30fc\u30c9\u3082\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"examples/#4-storybook","title":"4. Storybook\u3092\u4f7f\u3063\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30ab\u30bf\u30ed\u30b0","text":"<p>UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u3092Storybook\u3067\u958b\u767a\u30fb\u78ba\u8a8d\u3059\u308b\u5b8c\u5168\u306a\u4f8b\u3067\u3059\u3002</p> <pre><code># components/buttons.py\nfrom pubsubtk import PresentationalComponentTk\nfrom pubsubtk.storybook import story\nimport tkinter as tk\n\nclass PrimaryButton(PresentationalComponentTk):\n    def setup_ui(self):\n        self.button = tk.Button(\n            self,\n            bg=\"#007bff\",\n            fg=\"white\",\n            font=(\"Arial\", 10, \"bold\"),\n            relief=tk.FLAT,\n            padx=20,\n            pady=10\n        )\n        self.button.pack()\n\n    def set_text(self, text: str):\n        self.button.config(text=text)\n\n    def set_command(self, command):\n        self.button.config(command=command)\n\n@story(\"Buttons.Primary\")\ndef primary_button_story(ctx):\n    text = ctx.knob(\"text\", str, \"Primary Button\")\n    enabled = ctx.knob(\"enabled\", bool, True)\n\n    btn = PrimaryButton(ctx.parent)\n    btn.set_text(text.value)\n    btn.button.config(state=\"normal\" if enabled.value else \"disabled\")\n\n    # Knob\u5909\u66f4\u6642\u306e\u66f4\u65b0\n    text.add_change_callback(lambda v: btn.set_text(v))\n    enabled.add_change_callback(\n        lambda v: btn.button.config(state=\"normal\" if v else \"disabled\")\n    )\n\n    btn.pack(padx=20, pady=20)\n    return btn\n\n# components/forms.py\nfrom tkinter import ttk\n\nclass FormField(PresentationalComponentTk):\n    def setup_ui(self):\n        self.label = ttk.Label(self)\n        self.label.pack(anchor=\"w\")\n\n        self.entry = ttk.Entry(self, width=40)\n        self.entry.pack(fill=\"x\", pady=(5, 0))\n\n        self.error_label = ttk.Label(self, foreground=\"red\", font=(\"Arial\", 8))\n        self.error_label.pack(anchor=\"w\")\n\n    def set_label(self, text: str):\n        self.label.config(text=text)\n\n    def set_error(self, error: str):\n        self.error_label.config(text=error)\n\n    def get_value(self):\n        return self.entry.get()\n\n@story(\"Forms.TextField\")\ndef text_field_story(ctx):\n    label = ctx.knob(\"label\", str, \"Email Address\")\n    placeholder = ctx.knob(\"placeholder\", str, \"user@example.com\")\n    required = ctx.knob(\"required\", bool, True)\n    error = ctx.knob(\"error\", str, \"\", desc=\"Error message to display\")\n\n    field = FormField(ctx.parent)\n    field.set_label(label.value + (\" *\" if required.value else \"\"))\n    field.entry.insert(0, placeholder.value)\n    field.set_error(error.value)\n\n    # \u52d5\u7684\u66f4\u65b0\n    label.add_change_callback(\n        lambda v: field.set_label(v + (\" *\" if required.value else \"\"))\n    )\n    error.add_change_callback(lambda v: field.set_error(v))\n\n    field.pack(padx=20, pady=20, fill=\"x\")\n    return field\n\n# run_storybook.py\nfrom pubsubtk.storybook import StorybookApplication\nfrom pubsubtk.storybook.core.auto_discover import discover_stories\n\nif __name__ == \"__main__\":\n    # components/\u4ee5\u4e0b\u306e\u5168\u30b9\u30c8\u30fc\u30ea\u30fc\u3092\u81ea\u52d5\u691c\u51fa\n    discover_stories(\"components\")\n\n    app = StorybookApplication(\n        theme=\"arc\",\n        title=\"My Component Library\",\n        geometry=\"1400x900\"\n    )\n    app.run()\n</code></pre>"},{"location":"examples/#5-storybook","title":"5. \u8907\u5408\u7684\u306aStorybook\u30b5\u30f3\u30d7\u30eb\uff08\u72b6\u614b\u4ed8\u304d\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\uff09","text":"<pre><code># components/counter_widget.py\nfrom pubsubtk import ContainerComponentTk\nfrom pubsubtk.storybook import story, StoryContext\nfrom pydantic import BaseModel\nimport tkinter as tk\n\nclass CounterState(BaseModel):\n    count: int = 0\n\nclass CounterWidget(ContainerComponentTk[CounterState]):\n    def setup_ui(self):\n        self.label = tk.Label(self, font=(\"Arial\", 24))\n        self.label.pack(pady=10)\n\n        button_frame = tk.Frame(self)\n        button_frame.pack()\n\n        tk.Button(button_frame, text=\"-\", command=self.decrement).pack(side=\"left\", padx=5)\n        tk.Button(button_frame, text=\"+\", command=self.increment).pack(side=\"left\", padx=5)\n        tk.Button(button_frame, text=\"Reset\", command=self.reset).pack(side=\"left\", padx=5)\n\n    def setup_subscriptions(self):\n        self.sub_for_refresh(self.store.state.count, self.update_display)\n\n    def refresh_from_state(self):\n        self.update_display()\n\n    def update_display(self):\n        count = self.store.get_current_state().count\n        self.label.config(text=str(count))\n\n    def increment(self):\n        state = self.store.get_current_state()\n        self.pub_update_state(self.store.state.count, state.count + 1)\n\n    def decrement(self):\n        state = self.store.get_current_state()\n        self.pub_update_state(self.store.state.count, state.count - 1)\n\n    def reset(self):\n        self.pub_update_state(self.store.state.count, 0)\n\n@story(\"Widgets.Counter\")\ndef counter_story(ctx: StoryContext):\n    # Knob\u3067\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\n    initial_value = ctx.knob(\"initialValue\", int, 0, range_=(-100, 100))\n    step = ctx.knob(\"step\", int, 1, range_=(1, 10))\n\n    # \u30ed\u30fc\u30ab\u30eb\u30b9\u30c8\u30a2\u3092\u4f5c\u6210\n    from pubsubtk import get_store\n    store = get_store(CounterState)\n\n    # \u521d\u671f\u5024\u3092\u8a2d\u5b9a\n    store.update_state(\"count\", initial_value.value)\n\n    # \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3092\u4f5c\u6210\n    counter = CounterWidget(ctx.parent, store=store)\n\n    # step\u306b\u5fdc\u3058\u3066increment/decrement\u3092\u8abf\u6574\n    original_increment = counter.increment\n    original_decrement = counter.decrement\n\n    def custom_increment():\n        state = store.get_current_state()\n        store.update_state(\"count\", state.count + step.value)\n\n    def custom_decrement():\n        state = store.get_current_state()\n        store.update_state(\"count\", state.count - step.value)\n\n    counter.increment = custom_increment\n    counter.decrement = custom_decrement\n\n    counter.pack(padx=40, pady=40)\n    return counter\n</code></pre>"},{"location":"examples/#6","title":"6. \u4ed6\u306b\u3082\u2026","text":"<ul> <li>\u8a2d\u5b9a\u30c0\u30a4\u30a2\u30ed\u30b0\u4ed8\u304d\u30c4\u30fc\u30eb</li> <li>\u30de\u30eb\u30c1\u753b\u9762\u30a6\u30a3\u30b6\u30fc\u30c9</li> <li>\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u7cfb\u30a2\u30d7\u30ea</li> </ul> <p>\u8a73\u7d30\u3084\u5c0f\u6280\u306f \u30ec\u30b7\u30d4\u96c6 \u3082\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"faq/","title":"FAQ","text":"<p>Q. tkinter\u4ee5\u5916\u306eGUI\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u4f7f\u3048\u307e\u3059\u304b\uff1f A. \u73fe\u5728\u306fTkinter/ttk\u5c02\u7528\u3067\u3059\u3002PySide\u3084PyQt\u306a\u3069\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002</p> <p>Q. \u72b6\u614b\u304c\u8907\u96d1\u5316\u3057\u305f\u5834\u5408\u306f\u3069\u3046\u3059\u308c\u3070\u3088\u3044\u3067\u3059\u304b\uff1f A. Pydantic\u30e2\u30c7\u30eb\u3092\u5165\u308c\u5b50\u69cb\u9020\u3067\u5206\u5272\u3057\u305f\u308a\u3001\u7528\u9014\u3054\u3068\u306bStore\u3092\u5206\u5272\u3067\u304d\u307e\u3059\u3002</p> <p>Q. \u30b0\u30ed\u30fc\u30d0\u30eb\u72b6\u614b\u3068\u30ed\u30fc\u30ab\u30eb\u72b6\u614b\u306e\u4f7f\u3044\u5206\u3051\u306f\uff1f A. \u30a2\u30d7\u30ea\u5168\u4f53\u306e\u72b6\u614b\u306fStore\u3001Component\u5358\u4f4d\u3067\u9589\u3058\u305f\u30ed\u30fc\u30ab\u30eb\u72b6\u614b\u306f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5c5e\u6027\u3084\u72ec\u81eaPydantic\u30e2\u30c7\u30eb\u3067\u7ba1\u7406\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>Q. \u753b\u9762\u9077\u79fb\u3084\u30a6\u30a3\u30f3\u30c9\u30a6\u7ba1\u7406\u306f\u3069\u3046\u3084\u308b\u306e\uff1f A. <code>pub_switch_slot()</code>\u3067\u753b\u9762\u5207\u308a\u66ff\u3048\u3001<code>pub_open_subwindow()</code>\u3067\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u7ba1\u7406\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>Q. \u30c7\u30d0\u30c3\u30b0\u30fb\u52d5\u4f5c\u78ba\u8a8d\u306e\u30b3\u30c4\u306f\uff1f A. <code>enable_pubsub_debug_logging()</code>\u3092\u4f7f\u3046\u3068\u3001PubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6d41\u308c\u3092\u30c7\u30d0\u30c3\u30b0\u3067\u304d\u307e\u3059\u3002</p> <p>Q. \u30aa\u30fc\u30c8\u30bb\u30fc\u30d6\u3084Undo/Redo\u306f\u3069\u3046\u5b9f\u88c5\u3057\u307e\u3059\u304b\uff1f A. \u30ec\u30b7\u30d4\u96c6\u306b\u4f8b\u304c\u3042\u308a\u307e\u3059\u3002\u72b6\u614b\u5168\u4f53\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3092\u5c65\u6b74\u306b\u3057\u3066<code>pub_replace_state()</code>\u3067\u5fa9\u5143\u3059\u308b\u65b9\u5f0f\u304c\u7c21\u5358\u3067\u3059\u3002</p> <p>Q. Processor\u3084Container\u3092\u52d5\u7684\u306b\u5207\u308a\u66ff\u3048\u308b\u65b9\u6cd5\u306f\uff1f A. <code>pub_switch_container()</code>\u3084<code>pub_register_processor()</code>\u3092\u6d3b\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>Q. Issue\u30fb\u8cea\u554f\u306f\u3069\u3053\u3067\u3067\u304d\u307e\u3059\u304b\uff1f A. GitHub\u306eIssue\u3084Discussions\u3067\u304a\u6c17\u8efd\u306b\u3069\u3046\u305e\u3002</p> <p>\u4ed6\u306b\u3082\u8cea\u554f\u304c\u3042\u308c\u3070 Issue \u304b PR \u3067\u304a\u77e5\u3089\u305b\u304f\u3060\u3055\u3044\uff01</p>"},{"location":"getting-started/","title":"\u306f\u3058\u3081\u306b","text":"<p>PubSubTk\u3067\u3001\u578b\u5b89\u5168\u304b\u3064\u758e\u7d50\u5408\u306aGUI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7d20\u65e9\u304f\u958b\u767a\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"getting-started/#1","title":"1. \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<pre><code>pip install git+https://github.com/vavavavavavavavava/pubsubtk\n</code></pre>"},{"location":"getting-started/#2","title":"2. \u57fa\u672c\u8a2d\u8a08\u3068\u4e3b\u8981\u30d1\u30fc\u30c4","text":""},{"location":"getting-started/#store","title":"Store\uff08\u72b6\u614b\u7ba1\u7406\uff09","text":"<p>Pydantic\u30e2\u30c7\u30eb\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u614b\u3092\u578b\u5b89\u5168\u306b\u7ba1\u7406\u3057\u307e\u3059\u3002</p> <pre><code>from pydantic import BaseModel\n\nclass AppState(BaseModel):\n    counter: int = 0\n</code></pre>"},{"location":"getting-started/#containerui","title":"Container\uff08\u72b6\u614b\u9023\u643aUI\uff09","text":"<p>\u72b6\u614b\u3092\u8cfc\u8aad\u3057UI\u3092\u81ea\u52d5\u66f4\u65b0\u3059\u308b\u30b9\u30de\u30fc\u30c8\u90e8\u54c1\u3067\u3059\u3002</p> <pre><code>from pubsubtk import ContainerComponentTk\n\nclass Main(ContainerComponentTk[AppState]):\n    def setup_ui(self):\n        ...\n    def setup_subscriptions(self):\n        self.sub_state_changed(self.store.state.counter, self.on_counter_changed)\n    def on_counter_changed(self, _, new):\n        ...\n</code></pre>"},{"location":"getting-started/#presentational","title":"Presentational\uff08\u7d14\u7c8b\u8868\u793a\u90e8\u54c1\uff09","text":"<p>\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u3063\u3066\u8868\u793a\u3059\u308b\u3060\u3051\u306e\u30c0\u30e0\u90e8\u54c1\u3067\u3059\u3002</p> <pre><code>from pubsubtk import PresentationalComponentTk\n\nclass CounterView(PresentationalComponentTk):\n    def setup_ui(self):\n        ...\n    def update_data(self, value: int):\n        ...\n</code></pre>"},{"location":"getting-started/#processor","title":"Processor\uff08\u30ed\u30b8\u30c3\u30af\u5206\u96e2\u30fb\u72b6\u614b\u64cd\u4f5c\uff09","text":"<p>\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3084\u8907\u96d1\u306a\u72b6\u614b\u5909\u5316\u306fProcessor\u306b\u96c6\u7d04\u3067\u304d\u307e\u3059\u3002</p> <pre><code>from pubsubtk import ProcessorBase, AutoNamedTopic\nfrom enum import auto\n\nclass Events(AutoNamedTopic):\n    INCREMENT = auto()\n\nclass MainProcessor(ProcessorBase[AppState]):\n    def setup_subscriptions(self):\n        self.subscribe(Events.INCREMENT, self.inc)\n    def inc(self):\n        ...\n</code></pre>"},{"location":"getting-started/#3","title":"3. \u6700\u5c0f\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u307f\u308b","text":"<pre><code>from pubsubtk import TkApplication, ContainerComponentTk\nfrom pydantic import BaseModel\n\nclass AppState(BaseModel):\n    count: int = 0\n\nclass Main(ContainerComponentTk[AppState]):\n    def setup_ui(self):\n        import tkinter as tk\n        self.label = tk.Label(self, text=\"0\")\n        self.label.pack()\n        tk.Button(self, text=\"\u5897\u3084\u3059\", command=self.inc).pack()\n    def setup_subscriptions(self):\n        self.sub_state_changed(self.store.state.count, self.on_count)\n    def on_count(self, _, new): self.label.config(text=str(new))\n    def inc(self):\n        state = self.store.get_current_state()\n        self.pub_update_state(self.store.state.count, state.count + 1)\n\nif __name__ == \"__main__\":\n    app = TkApplication(AppState, title=\"Demo\")\n    app.switch_container(Main)\n    app.run()\n</code></pre>"},{"location":"getting-started/#4","title":"4. \u8907\u6570\u753b\u9762\uff0f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\uff0f\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6","text":"<ul> <li>\u8907\u6570\u753b\u9762: <code>TemplateComponentTk</code> \u3068 <code>pub_switch_slot</code></li> <li>\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6: <code>pub_open_subwindow</code></li> </ul>"},{"location":"getting-started/#5-storybook","title":"5. Storybook \u3067\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u958b\u767a","text":"<p>PubSubTk\u306b\u306f\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u72ec\u7acb\u3057\u3066\u958b\u767a\u30fb\u30c6\u30b9\u30c8\u3067\u304d\u308bStorybook\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"getting-started/#_2","title":"\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9","text":"<pre><code>from pubsubtk.storybook import story, StorybookApplication\n\n# \u30b9\u30c8\u30fc\u30ea\u30fc\u3092\u5b9a\u7fa9\n@story(\"Button.Primary\")\ndef primary_button(ctx):\n    import tkinter as tk\n    button = tk.Button(ctx.parent, text=\"Primary Button\")\n    button.pack(padx=20, pady=20)\n    return button\n\n# Storybook\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\nif __name__ == \"__main__\":\n    app = StorybookApplication()\n    app.run()\n</code></pre>"},{"location":"getting-started/#knob","title":"Knob\u306b\u3088\u308b\u52d5\u7684\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb","text":"<pre><code>@story(\"Forms.Input\")\ndef input_field(ctx):\n    import tkinter as tk\n\n    # Knob\u3067\u52d5\u7684\u306b\u5024\u3092\u5909\u66f4\n    placeholder = ctx.knob(\"placeholder\", str, \"Enter text...\")\n    width = ctx.knob(\"width\", int, 30, range_=(10, 50))\n    readonly = ctx.knob(\"readonly\", bool, False)\n\n    entry = tk.Entry(\n        ctx.parent, \n        width=width.value,\n        state=\"readonly\" if readonly.value else \"normal\"\n    )\n    entry.insert(0, placeholder.value)\n    entry.pack(padx=20, pady=20)\n\n    return entry\n</code></pre> <p>\u8a73\u7d30\u306fStorybook\u30ac\u30a4\u30c9\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"getting-started/#6-tips","title":"6. \u3088\u304f\u3042\u308b\u958b\u767aTips","text":"<ul> <li>\u30c6\u30fc\u30de\u5207\u308a\u66ff\u3048\uff08<code>ThemedApplication</code>\u3092\u5229\u7528\uff09</li> <li>\u72b6\u614b\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3</li> <li>\u30a4\u30d9\u30f3\u30c8\u99c6\u52d5\u3068UI\u5206\u96e2\u30d1\u30bf\u30fc\u30f3</li> <li>\u30c7\u30d0\u30c3\u30b0: <code>enable_pubsub_debug_logging()</code> \u3067PubSub\u306e\u52d5\u4f5c\u3092\u53ef\u8996\u5316</li> </ul>"},{"location":"storybook-guide/","title":"Storybook\u30ac\u30a4\u30c9","text":"<p>PubSubTk Storybook\u306f\u3001UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u72ec\u7acb\u3057\u3066\u958b\u767a\u30fb\u30c6\u30b9\u30c8\u3067\u304d\u308b\u958b\u767a\u74b0\u5883\u3067\u3059\u3002React Storybook\u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u3055\u308c\u3001Tkinter\u5411\u3051\u306b\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"storybook-guide/#storybook_1","title":"\ud83d\udcda Storybook\u3068\u306f","text":"<p>Storybook\u3092\u4f7f\u3046\u3068\uff1a</p> <ul> <li>\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u72ec\u7acb\u3057\u305f\u74b0\u5883\u3067\u958b\u767a</li> <li>\u52d5\u7684\u306aKnob\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3067\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5909\u66f4</li> <li>\u518d\u5229\u7528\u53ef\u80fd\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u69cb\u7bc9</li> <li>\u30c7\u30b6\u30a4\u30ca\u30fc\u3068\u306e\u5354\u696d\u304c\u30b9\u30e0\u30fc\u30ba\u306b</li> </ul>"},{"location":"storybook-guide/#_1","title":"\ud83d\ude80 \u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8","text":""},{"location":"storybook-guide/#storybook_2","title":"\u6700\u5c0f\u9650\u306eStorybook","text":"<pre><code>from pubsubtk.storybook import story, StorybookApplication\n\n@story(\"Hello.World\")\ndef hello_world(ctx):\n    import tkinter as tk\n    label = tk.Label(ctx.parent, text=\"Hello, Storybook!\")\n    label.pack()\n    return label\n\nif __name__ == \"__main__\":\n    app = StorybookApplication()\n    app.run()\n</code></pre>"},{"location":"storybook-guide/#knob","title":"Knob\u3092\u4f7f\u3063\u305f\u52d5\u7684\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb","text":"<pre><code>@story(\"Button.Dynamic\")\ndef dynamic_button(ctx):\n    import tkinter as tk\n\n    # Knob\u3067\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u52d5\u7684\u306b\u5236\u5fa1\n    text = ctx.knob(\"text\", str, \"Click me!\")\n    bg_color = ctx.knob(\"bgColor\", str, \"#007bff\", \n                        choices=[\"#007bff\", \"#28a745\", \"#dc3545\", \"#ffc107\"])\n    enabled = ctx.knob(\"enabled\", bool, True)\n\n    btn = tk.Button(\n        ctx.parent,\n        text=text.value,\n        bg=bg_color.value,\n        fg=\"white\",\n        state=\"normal\" if enabled.value else \"disabled\"\n    )\n    btn.pack(padx=20, pady=20)\n\n    # Knob\u5909\u66f4\u6642\u306e\u81ea\u52d5\u66f4\u65b0\n    text.add_change_callback(lambda v: btn.config(text=v))\n    bg_color.add_change_callback(lambda v: btn.config(bg=v))\n    enabled.add_change_callback(\n        lambda v: btn.config(state=\"normal\" if v else \"disabled\")\n    )\n\n    return btn\n</code></pre>"},{"location":"storybook-guide/#_2","title":"\ud83d\udcdd \u30b9\u30c8\u30fc\u30ea\u30fc\u306e\u5b9a\u7fa9","text":""},{"location":"storybook-guide/#story","title":"@story\u30c7\u30b3\u30ec\u30fc\u30bf","text":"<pre><code>@story(path=\"Category.Subcategory\", title=\"My Component\")\ndef my_story(ctx: StoryContext):\n    # \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u3066\u8fd4\u3059\n    pass\n</code></pre> <ul> <li><code>path</code>: \u30c9\u30c3\u30c8\u533a\u5207\u308a\u306e\u968e\u5c64\u30d1\u30b9\uff08\u7701\u7565\u6642\u306f\u95a2\u6570\u540d\u304b\u3089\u81ea\u52d5\u751f\u6210\uff09</li> <li><code>title</code>: \u8868\u793a\u540d\uff08\u7701\u7565\u6642\u306f\u30d1\u30b9\u306e\u6700\u5f8c\u306e\u8981\u7d20\uff09</li> <li><code>ctx</code>: StoryContext\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08\u89aaWidget\u3001Knob\u6a5f\u80fd\u3092\u63d0\u4f9b\uff09</li> </ul>"},{"location":"storybook-guide/#_3","title":"\u968e\u5c64\u69cb\u9020\u306e\u4f5c\u6210","text":"<pre><code># Buttons \u30ab\u30c6\u30b4\u30ea\n@story(\"Buttons.Primary\")\ndef primary_button(ctx): ...\n\n@story(\"Buttons.Secondary\")\ndef secondary_button(ctx): ...\n\n@story(\"Buttons.Danger\")\ndef danger_button(ctx): ...\n\n# Forms \u30ab\u30c6\u30b4\u30ea\n@story(\"Forms.TextField\")\ndef text_field(ctx): ...\n\n@story(\"Forms.Checkbox\")\ndef checkbox(ctx): ...\n</code></pre>"},{"location":"storybook-guide/#knob_1","title":"\ud83c\udf9b\ufe0f Knob\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb","text":""},{"location":"storybook-guide/#knob_2","title":"\u57fa\u672c\u7684\u306aKnob","text":"<pre><code># \u30c6\u30ad\u30b9\u30c8\ntext = ctx.knob(\"label\", str, \"Default Text\")\n\n# \u6570\u5024\nsize = ctx.knob(\"size\", int, 12, range_=(8, 48))\n\n# \u30d6\u30fc\u30eb\u5024\nenabled = ctx.knob(\"enabled\", bool, True)\n\n# \u9078\u629e\u80a2\ncolor = ctx.knob(\"color\", str, \"blue\", \n                choices=[\"red\", \"green\", \"blue\", \"yellow\"])\n\n# \u8907\u6570\u884c\u30c6\u30ad\u30b9\u30c8\ncontent = ctx.knob(\"content\", str, \"Line 1\\nLine 2\", multiline=True)\n</code></pre>"},{"location":"storybook-guide/#knob_3","title":"Knob\u30d1\u30e9\u30e1\u30fc\u30bf","text":"<ul> <li><code>name</code>: Knob\u306e\u540d\u524d\uff08\u4e00\u610f\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff09</li> <li><code>type_</code>: \u5024\u306e\u578b\uff08str, int, float, bool\uff09</li> <li><code>default</code>: \u30c7\u30d5\u30a9\u30eb\u30c8\u5024</li> <li><code>desc</code>: \u8aac\u660e\u6587\uff08\u7701\u7565\u53ef\uff09</li> <li><code>range_</code>: \u6570\u5024\u306e\u7bc4\u56f2\uff08tuple\uff09</li> <li><code>choices</code>: \u9078\u629e\u80a2\u306e\u30ea\u30b9\u30c8</li> <li><code>multiline</code>: \u8907\u6570\u884c\u5165\u529b\uff08str\u306e\u307f\uff09</li> </ul>"},{"location":"storybook-guide/#_4","title":"\u5024\u306e\u6c38\u7d9a\u5316","text":"<p>Knob\u306e\u5024\u306f\u81ea\u52d5\u7684\u306b\u4fdd\u5b58\u3055\u308c\u3001\u540c\u3058\u30b9\u30c8\u30fc\u30ea\u30fc\u3092\u518d\u5ea6\u958b\u3044\u305f\u3068\u304d\u306b\u5fa9\u5143\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"storybook-guide/#pubsubtk","title":"\ud83d\udd27 PubSubTk\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4f7f\u7528","text":""},{"location":"storybook-guide/#presentational","title":"Presentational\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8","text":"<pre><code>from pubsubtk import PresentationalComponentTk\n\nclass Card(PresentationalComponentTk):\n    def setup_ui(self):\n        import tkinter as tk\n        self.title_label = tk.Label(self, font=(\"Arial\", 14, \"bold\"))\n        self.title_label.pack()\n        self.content_label = tk.Label(self)\n        self.content_label.pack()\n\n    def set_data(self, title: str, content: str):\n        self.title_label.config(text=title)\n        self.content_label.config(text=content)\n\n@story(\"Components.Card\")\ndef card_story(ctx):\n    title = ctx.knob(\"title\", str, \"Card Title\")\n    content = ctx.knob(\"content\", str, \"Card content goes here\")\n\n    card = Card(ctx.parent)\n    card.set_data(title.value, content.value)\n    card.pack(fill=\"both\", expand=True, padx=20, pady=20)\n\n    # Knob\u5909\u66f4\u6642\u306e\u66f4\u65b0\n    title.add_change_callback(\n        lambda v: card.set_data(v, content.value)\n    )\n    content.add_change_callback(\n        lambda v: card.set_data(title.value, v)\n    )\n\n    return card\n</code></pre>"},{"location":"storybook-guide/#container","title":"Container\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\uff08\u72b6\u614b\u4ed8\u304d\uff09","text":"<pre><code>from pubsubtk import ContainerComponentTk, get_store\nfrom pydantic import BaseModel\n\nclass CounterState(BaseModel):\n    count: int = 0\n\nclass Counter(ContainerComponentTk[CounterState]):\n    def setup_ui(self):\n        import tkinter as tk\n        self.label = tk.Label(self, font=(\"Arial\", 24))\n        self.label.pack()\n        tk.Button(self, text=\"Increment\", command=self.increment).pack()\n\n    def setup_subscriptions(self):\n        self.sub_for_refresh(self.store.state.count, self.update_display)\n\n    def refresh_from_state(self):\n        self.update_display()\n\n    def update_display(self):\n        self.label.config(text=str(self.store.get_current_state().count))\n\n    def increment(self):\n        state = self.store.get_current_state()\n        self.pub_update_state(self.store.state.count, state.count + 1)\n\n@story(\"Components.Counter\")\ndef counter_story(ctx):\n    initial = ctx.knob(\"initial\", int, 0, range_=(-10, 10))\n\n    # \u30ed\u30fc\u30ab\u30eb\u30b9\u30c8\u30a2\u3092\u4f5c\u6210\n    store = get_store(CounterState)\n    store.update_state(\"count\", initial.value)\n\n    counter = Counter(ctx.parent, store=store)\n    counter.pack(padx=40, pady=40)\n\n    return counter\n</code></pre>"},{"location":"storybook-guide/#_5","title":"\ud83d\uddc2\ufe0f \u30b9\u30c8\u30fc\u30ea\u30fc\u306e\u81ea\u52d5\u691c\u51fa","text":"<p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u5927\u304d\u304f\u306a\u308b\u3068\u3001\u30b9\u30c8\u30fc\u30ea\u30fc\u3092\u624b\u52d5\u3067\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u306e\u306f\u5927\u5909\u3067\u3059\u3002<code>auto_discover</code>\u3092\u4f7f\u3046\u3068\u81ea\u52d5\u691c\u51fa\u3067\u304d\u307e\u3059\uff1a</p> <pre><code># run_storybook.py\nfrom pubsubtk.storybook import StorybookApplication\nfrom pubsubtk.storybook.core.auto_discover import discover_stories\n\nif __name__ == \"__main__\":\n    # src/\u4ee5\u4e0b\u306e\u5168\u3066\u306e@story\u3092\u81ea\u52d5\u691c\u51fa\n    discover_stories(\"src\")\n\n    app = StorybookApplication(\n        theme=\"arc\",\n        title=\"My Component Library\"\n    )\n    app.run()\n</code></pre>"},{"location":"storybook-guide/#_6","title":"\ud83c\udfa8 \u30ab\u30b9\u30bf\u30de\u30a4\u30ba","text":""},{"location":"storybook-guide/#_7","title":"\u30c6\u30fc\u30de\u306e\u5909\u66f4","text":"<pre><code>app = StorybookApplication(theme=\"clam\")  # arc, clam, alt, default, classic\n</code></pre>"},{"location":"storybook-guide/#_8","title":"\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba","text":"<pre><code>app = StorybookApplication(geometry=\"1600x1000\")\n</code></pre>"},{"location":"storybook-guide/#_9","title":"\u624b\u52d5\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7","text":"<pre><code>app = StorybookApplication(auto_setup=False)\n# \u30ab\u30b9\u30bf\u30e0\u521d\u671f\u5316\u51e6\u7406\napp.switch_container(CustomStorybookContainer)\napp.run()\n</code></pre>"},{"location":"storybook-guide/#_10","title":"\ud83d\udca1 \u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":""},{"location":"storybook-guide/#1","title":"1. \u30b9\u30c8\u30fc\u30ea\u30fc\u306e\u6574\u7406","text":"<pre><code>components/\n\u251c\u2500\u2500 buttons/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 primary_button.py    # \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u5b9a\u7fa9\n\u2502   \u2514\u2500\u2500 stories.py           # @story\u5b9a\u7fa9\n\u251c\u2500\u2500 forms/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 text_field.py\n\u2502   \u2514\u2500\u2500 stories.py\n\u2514\u2500\u2500 run_storybook.py\n</code></pre>"},{"location":"storybook-guide/#2-knob","title":"2. Knob\u306e\u9069\u5207\u306a\u4f7f\u7528","text":"<pre><code>@story(\"Forms.Input\")\ndef input_story(ctx):\n    # \u2705 \u826f\u3044\u4f8b\uff1a\u95a2\u9023\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092Knob\u306b\n    placeholder = ctx.knob(\"placeholder\", str, \"Enter text...\")\n    max_length = ctx.knob(\"maxLength\", int, 100, range_=(10, 500))\n\n    # \u274c \u60aa\u3044\u4f8b\uff1a\u5185\u90e8\u72b6\u614b\u3092Knob\u306b\u3057\u306a\u3044\n    # current_text = ctx.knob(\"currentText\", str, \"\")  # \u3053\u308c\u306f\u907f\u3051\u308b\n</code></pre>"},{"location":"storybook-guide/#3","title":"3. \u30b9\u30c8\u30fc\u30ea\u30fc\u306e\u5206\u96e2","text":"<pre><code># \u2705 \u5404\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u3092\u5225\u30b9\u30c8\u30fc\u30ea\u30fc\u306b\n@story(\"Button.Primary.Normal\")\ndef primary_normal(ctx): ...\n\n@story(\"Button.Primary.Disabled\")\ndef primary_disabled(ctx): ...\n\n@story(\"Button.Primary.Loading\")\ndef primary_loading(ctx): ...\n</code></pre>"},{"location":"storybook-guide/#_11","title":"\ud83d\udd0d \u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0","text":""},{"location":"storybook-guide/#knob_4","title":"Knob\u306e\u5024\u304c\u4fdd\u6301\u3055\u308c\u306a\u3044","text":"<ul> <li>\u540c\u3058<code>name</code>\u306eKnob\u304c\u8907\u6570\u3042\u308b\u5834\u5408\u3001\u5024\u304c\u6df7\u5728\u3057\u307e\u3059</li> <li>\u30b9\u30c8\u30fc\u30ea\u30fc\u3054\u3068\u306b\u4e00\u610f\u306e\u540d\u524d\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044</li> </ul>"},{"location":"storybook-guide/#_12","title":"\u30b9\u30c8\u30fc\u30ea\u30fc\u304c\u8868\u793a\u3055\u308c\u306a\u3044","text":"<ul> <li><code>@story</code>\u30c7\u30b3\u30ec\u30fc\u30bf\u304c\u6b63\u3057\u304f\u9069\u7528\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d</li> <li><code>auto_discover</code>\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u30d1\u30b9\u304c\u6b63\u3057\u3044\u304b\u78ba\u8a8d</li> <li>\u30d5\u30a1\u30a4\u30eb\u306b\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30a8\u30e9\u30fc\u304c\u306a\u3044\u304b\u78ba\u8a8d</li> </ul>"},{"location":"storybook-guide/#_13","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u554f\u984c","text":"<ul> <li>Knob\u306e<code>add_change_callback</code>\u3067\u91cd\u3044\u51e6\u7406\u3092\u907f\u3051\u308b</li> <li>\u30c7\u30d0\u30a6\u30f3\u30b9\u51e6\u7406\u3092\u691c\u8a0e\uff08Knob\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u306b\u306f\u7d44\u307f\u8fbc\u307f\u306e\u30c7\u30d0\u30a6\u30f3\u30b9\u304c\u3042\u308a\u307e\u3059\uff09</li> </ul>"},{"location":"storybook-guide/#_14","title":"\ud83d\udcd6 \u95a2\u9023\u30ea\u30f3\u30af","text":"<ul> <li>\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u958b\u767a\u30ec\u30b7\u30d4</li> <li>Storybook\u30b5\u30f3\u30d7\u30eb</li> <li>API\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 - Storybook</li> </ul>"},{"location":"ai-reference/REFERENCE_FULL/","title":"REFERENCE_FULL","text":"<p>\u3053\u306e\u30da\u30fc\u30b8\u306eMarkdown\u3092\u898b\u308b</p>"},{"location":"ai-reference/REFERENCE_FULL/#pubsubtk-","title":"PubSubTk \u30e9\u30a4\u30d6\u30e9\u30ea - \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30ac\u30a4\u30c9","text":""},{"location":"ai-reference/REFERENCE_FULL/#_1","title":"\u6982\u8981","text":"<p>PubSubTk \u306f\u3001Pydantic \u3092\u7528\u3044\u305f\u578b\u5b89\u5168\u306a\u72b6\u614b\u7ba1\u7406\u3068\u3001Publish-Subscribe \u30d1\u30bf\u30fc\u30f3\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001Tkinter/ttk \u3092\u4f7f\u3063\u305f GUI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u69cb\u7bc9\u3067\u304d\u308b Python \u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002</p>"},{"location":"ai-reference/REFERENCE_FULL/#_2","title":"\u4e3b\u306a\u7279\u5fb4","text":"<ul> <li>UI\u3068\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u306e\u758e\u7d50\u5408 \u2015 Publish/Subscribe\uff08Pub/Sub\uff09\u3067\u90e8\u54c1\u9593\u3092\u975e\u540c\u671f\u30e1\u30c3\u30bb\u30fc\u30b8\u9023\u643a</li> <li>Pydantic\u30e2\u30c7\u30eb \u306b\u3088\u308b\u578b\u5b89\u5168\u306a\u72b6\u614b\u7ba1\u7406\u3002\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3084 JSON Schema \u51fa\u529b\u3082\u7c21\u5358</li> <li>Container / Presentational / Processor 3\u5c64\u5206\u96e2\u30d1\u30bf\u30fc\u30f3\u3092\u6a19\u6e96\u5316\uff08React\u30b9\u30bf\u30a4\u30eb\u306e\u8a2d\u8a08\u3092Tkinter\u3067\u3082\uff09</li> <li>Pub/Sub\u306b\u3088\u308b\u753b\u9762\u9077\u79fb\u30fb\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u7ba1\u7406\u3068\u30ea\u30a2\u30af\u30c6\u30a3\u30d6UI\u66f4\u65b0\u3092\u30b5\u30dd\u30fc\u30c8</li> <li>\u4f9d\u5b58\u306f\u7d14\u6b63Python\u306e\u307f\uff08<code>tkinter</code>, <code>pypubsub</code>, <code>pydantic</code>\uff09\u3002Tk\u30c6\u30fc\u30de\u5909\u66f4\u7528\u306b <code>ttkthemes</code> \u3082\u5229\u7528\u53ef\u80fd</li> </ul>"},{"location":"ai-reference/REFERENCE_FULL/#_3","title":"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u6982\u8981","text":""},{"location":"ai-reference/REFERENCE_FULL/#_4","title":"\u69cb\u9020\u30a4\u30e1\u30fc\u30b8","text":"<pre><code>graph LR\n  Store[Store]\n  Processor[Processor]\n  Container[Container]\n  View[Presentational View]\n\n  Processor -- state\u5909\u66f4\u767a\u884c --&gt; Store\n  Store -- state\u5909\u66f4\u901a\u77e5 --&gt; Container\n  Container -- UI\u66f4\u65b0 --&gt; View\n  View -- trigger_event --&gt; Container\n  Container -- action/\u30a4\u30d9\u30f3\u30c8 --&gt; Processor</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#_5","title":"\u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5f79\u5272","text":"<ul> <li>Store: Pydantic\u30e2\u30c7\u30eb\u3067\u30a2\u30d7\u30ea\u306e\u72b6\u614b\u3092\u4e00\u5143\u7ba1\u7406\u3002\u578b\u5b89\u5168\u306a\u30a2\u30af\u30bb\u30b9\uff06\u66f4\u65b0\u901a\u77e5\u304c\u5f97\u3089\u308c\u307e\u3059\u3002</li> <li>Container: \u72b6\u614b\u3092\u8cfc\u8aad\u3057\u3001UI\u3068\u9023\u52d5\u3002\u30e6\u30fc\u30b6\u30fc\u64cd\u4f5c\u304b\u3089 Processor \u3078\u306e\u6a4b\u6e21\u3057\u3082\u62c5\u3046\u3002</li> <li>Presentational: \u53d7\u3051\u53d6\u3063\u305f\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u3060\u3051\u306e\u7d14\u7c8bView\u3002\u72b6\u614b\u7ba1\u7406\u30fb\u30ed\u30b8\u30c3\u30af\u306f\u4e00\u5207\u6301\u305f\u306a\u3044\u3002</li> <li>Processor: \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af/\u72b6\u614b\u5909\u66f4\u3092\u96c6\u4e2d\u7ba1\u7406\u3002PubSub\u7d4c\u7531\u3067Container/Store\u3068\u901a\u4fe1\u3002</li> </ul>"},{"location":"ai-reference/REFERENCE_FULL/#_6","title":"\ud83c\udfaf \u63a8\u5968\u30a4\u30f3\u30dd\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3","text":"<pre><code>from pubsubtk import (\n    TkApplication, ThemedApplication,           # \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n    ContainerComponentTk, ContainerComponentTtk, # \u30b3\u30f3\u30c6\u30ca\n    PresentationalComponentTk, PresentationalComponentTtk, # \u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\n    ProcessorBase,                              # \u30d7\u30ed\u30bb\u30c3\u30b5\n)\nfrom pydantic import BaseModel\nfrom typing import List, Optional, Dict, Any\nimport tkinter as tk\nfrom tkinter import ttk\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#_7","title":"\u4e3b\u8981\u30e1\u30bd\u30c3\u30c9\u4e00\u89a7","text":"\u30e1\u30bd\u30c3\u30c9 \u8aac\u660e\u30fb\u7528\u9014 \u4e3b\u306a\u5229\u7528\u5c64 <code>pub_switch_container(cls, kwargs)</code> \u30e1\u30a4\u30f3\u753b\u9762\uff08Container\uff09\u3092\u5207\u308a\u66ff\u3048\u308b Container / Processor <code>pub_switch_slot(slot_name, cls, kwargs)</code> \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5185\u306e\u4efb\u610f\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5207\u308a\u66ff\u3048 Container / Processor <code>pub_open_subwindow(cls, win_id, kwargs)</code> \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304f Container / Processor <code>pub_close_subwindow(win_id)</code> \u6307\u5b9a ID \u306e\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b Container / Processor <code>pub_close_all_subwindows()</code> \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u3059\u3079\u3066\u9589\u3058\u308b Container / Processor <code>pub_replace_state(new_state)</code> \u72b6\u614b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5168\u4f53\u3092\u7f6e\u304d\u63db\u3048\u308b Processor / Container <code>pub_update_state(state_path, new_value)</code> \u4efb\u610f\u30d1\u30b9\u306e\u72b6\u614b\u3092\u578b\u5b89\u5168\u306b\u66f4\u65b0 Processor / Container <code>pub_add_to_list(state_path, item)</code> \u30ea\u30b9\u30c8\u8981\u7d20\u3092\u578b\u5b89\u5168\u306b\u8ffd\u52a0 Processor / Container <code>pub_add_to_dict(state_path, key, value)</code> \u8f9e\u66f8\u8981\u7d20\u3092\u578b\u5b89\u5168\u306b\u8ffd\u52a0 Processor / Container <code>pub_register_processor(proc, name)</code> Processor \u3092\u52d5\u7684\u306b\u767b\u9332 Processor <code>pub_delete_processor(name)</code> Processor \u3092\u524a\u9664 Processor <code>pub_enable_undo_redo(state_path, max_history)</code> Undo/Redo \u5c65\u6b74\u3092\u6709\u52b9\u5316 Processor / Container <code>pub_disable_undo_redo(state_path)</code> Undo/Redo \u5c65\u6b74\u3092\u7121\u52b9\u5316 Processor / Container <code>pub_undo(state_path)</code> 1\u3064\u524d\u306e\u5024\u306b\u623b\u3059 Processor / Container <code>pub_redo(state_path)</code> Undo \u3092\u53d6\u308a\u6d88\u3059 Processor / Container <code>sub_undo_status(state_path, handler)</code> Undo/Redo \u72b6\u614b\u5909\u5316\u3092\u8cfc\u8aad Container <code>sub_state_changed(state_path, handler)</code> \u6307\u5b9a\u30d1\u30b9\u306e\u5024\u5909\u66f4\u3092\u8cfc\u8aad\uff08old_value, new_value\u53d7\u4fe1\uff09 Container <code>sub_for_refresh(state_path, handler)</code> \u72b6\u614b\u66f4\u65b0\u6642\u306eUI\u518d\u63cf\u753b\u7528\u30b7\u30f3\u30d7\u30eb\u901a\u77e5\u3092\u8cfc\u8aad\uff08\u5f15\u6570\u306a\u3057\uff09 Container <code>sub_state_added(state_path, handler)</code> \u30ea\u30b9\u30c8\u3078\u306e\u8981\u7d20\u8ffd\u52a0\u3092\u8cfc\u8aad\uff08item, index\u53d7\u4fe1\uff09 Container <code>sub_dict_item_added(state_path, handler)</code> \u8f9e\u66f8\u3078\u306e\u8981\u7d20\u8ffd\u52a0\u3092\u8cfc\u8aad\uff08key, value\u53d7\u4fe1\uff09 Container <code>register_handler(event, cb)</code> Presentational\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067View\u30a4\u30d9\u30f3\u30c8\u306e\u30cf\u30f3\u30c9\u30e9\u767b\u9332 Container <code>trigger_event(event, **kwargs)</code> View\u2192Container\u3078\u4efb\u610f\u30a4\u30d9\u30f3\u30c8\u9001\u51fa Presentational"},{"location":"ai-reference/REFERENCE_FULL/#_8","title":"\u958b\u767a\u306e\u30dd\u30a4\u30f3\u30c8","text":""},{"location":"ai-reference/REFERENCE_FULL/#stateproxyide","title":"StateProxy\u306b\u3088\u308bIDE\u9023\u643a","text":"<p>PubSubTk\u306e\u6700\u5927\u306e\u4fa1\u5024\u306f\u3001StateProxy\u306b\u3088\u308b\u5f37\u529b\u306aIDE\u9023\u643a\u3067\u3059\u3002</p> <pre><code># VSCode/PyCharm\u3067\u4ee5\u4e0b\u304c\u5168\u3066\u52b9\u304f\uff1a\nself.store.state.user.name\n#            \u2191     \u2191\n#    Ctrl+Click   Ctrl+Click\n#    \u3067\u5b9a\u7fa9\u3078     \u3067\u5b9a\u7fa9\u3078\n\n# \u2705 F12: \u5b9a\u7fa9\u3078\u79fb\u52d5\n# \u2705 Shift+F12: \u3059\u3079\u3066\u306e\u53c2\u7167\u3092\u691c\u7d22  \n# \u2705 F2: \u5b89\u5168\u306a\u30ea\u30cd\u30fc\u30e0\n# \u2705 Ctrl+Space: \u81ea\u52d5\u88dc\u5b8c\n</code></pre> <p>str()\u304c\u5fc5\u8981\u306a\u30bf\u30a4\u30df\u30f3\u30b0\uff1a</p> <pre><code># \u2705 \u57fa\u672c\u7684\u306a\u4f7f\u7528\uff08str()\u4e0d\u8981\uff09\nself.pub_update_state(self.store.state.counter, 42)\nself.sub_state_changed(self.store.state.todos, self.on_todos_changed)\n\n# \u2705 \u6587\u5b57\u5217\u64cd\u4f5c\u304c\u5fc5\u8981\u306a\u5834\u5408\u306e\u307fstr()\u3092\u4f7f\u7528\npath = str(self.store.state.user.name) + \"_backup\"\nself.pub_update_state(f\"todos.{index}\", updated_todo)\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#_9","title":"\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u8a2d\u8a08\u6307\u91dd","text":"<p>Container - \u72b6\u614b\u306b\u4f9d\u5b58\u3059\u308b\u51e6\u7406\u3001\u30e6\u30fc\u30b6\u30fc\u64cd\u4f5c\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0</p> <pre><code>class TodoContainer(ContainerComponentTk[AppState]):\n    def setup_subscriptions(self):\n        self.sub_state_changed(self.store.state.todos, self.on_todos_changed)\n\n    def add_todo(self):\n        # \u72b6\u614b\u66f4\u65b0\n        self.pub_add_to_list(self.store.state.todos, new_todo)\n</code></pre> <p>\u5099\u8003: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e <code>__init__</code> \u3067\u306f\u4e0e\u3048\u3089\u308c\u305f <code>*args</code> \u3068 <code>**kwargs</code> \u304c <code>self.args</code> / <code>self.kwargs</code> \u3068\u3057\u3066\u4fdd\u6301\u3055\u308c\u307e\u3059\u3002\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092 <code>open_subwindow</code> \u3067\u958b\u304f\u5834\u5408\u306f <code>win_id</code> \u304c <code>self.kwargs</code> \u306b\u81ea\u52d5\u8ffd\u52a0\u3055\u308c\u3001 <code>pub_close_subwindow(self.kwargs[\"win_id\"])</code> \u3067\u81ea\u8eab\u3092\u9589\u3058\u3089\u308c\u307e\u3059\u3002\u4eca\u5f8c\u3082\u540c\u69d8\u306e \u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u304c\u8ffd\u52a0\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>Presentational - \u7d14\u7c8b\u306a\u8868\u793a\u3001\u518d\u5229\u7528\u53ef\u80fd\u306a\u90e8\u54c1</p> <pre><code>class TodoItemView(PresentationalComponentTk):\n    def update_data(self, todo_item: TodoItem):\n        self.label.config(text=todo_item.text)\n\n    def on_click(self):\n        # Container\u5074\u306b\u30a4\u30d9\u30f3\u30c8\u901a\u77e5\n        self.trigger_event(\"toggle\", todo_id=self.todo_item.id)\n</code></pre> <p>Template - \u30ec\u30a4\u30a2\u30a6\u30c8\u69cb\u9020\u306e\u5b9a\u7fa9\u3001\u30b9\u30ed\u30c3\u30c8\u30d9\u30fc\u30b9\u306e\u753b\u9762\u69cb\u6210</p> <pre><code>class AppTemplate(TemplateComponentTk[AppState]):\n    def define_slots(self):\n        # \u5404\u9818\u57df\u3092\u5b9a\u7fa9\u30fb\u914d\u7f6e\n        self.header = tk.Frame(self, height=60)\n        self.header.pack(fill=tk.X)\n\n        self.main = tk.Frame(self)\n        self.main.pack(fill=tk.BOTH, expand=True)\n\n        self.sidebar = tk.Frame(self, width=200)\n        self.sidebar.pack(side=tk.RIGHT, fill=tk.Y)\n\n        return {\n            \"header\": self.header,\n            \"main\": self.main,\n            \"sidebar\": self.sidebar\n        }\n\n# \u4f7f\u7528\u4f8b\napp.set_template(AppTemplate)\napp.pub_switch_slot(\"header\", HeaderView)\napp.pub_switch_slot(\"sidebar\", NavigationPanel)\n</code></pre> <p>Processor - \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3001\u8907\u96d1\u306a\u72b6\u614b\u64cd\u4f5c</p> <pre><code>class TodoProcessor(ProcessorBase[AppState]):\n    def setup_subscriptions(self):\n        self.subscribe(\"todo.bulk_update\", self.handle_bulk_update)\n\n    def handle_bulk_update(self, todo_ids: List[int]):\n        # \u8907\u96d1\u306a\u30ed\u30b8\u30c3\u30af\u51e6\u7406\n        pass\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#undoredo","title":"Undo/Redo \u6a5f\u80fd","text":"<p>PubSubTk \u3067\u306f\u3001\u4efb\u610f\u306e\u72b6\u614b\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u3066 Undo/Redo \u5c65\u6b74\u3092\u7ba1\u7406\u3067\u304d\u307e\u3059\u3002 <code>pub_enable_undo_redo()</code> \u3067\u5c65\u6b74\u3092\u6709\u52b9\u5316\u3059\u308b\u3068\u81ea\u52d5\u7684\u306b\u5909\u66f4\u304c\u8ffd\u8de1\u3055\u308c\u3001 <code>pub_undo()</code> \u3068 <code>pub_redo()</code> \u3067\u5024\u3092\u623b\u3057\u305f\u308a\u3084\u308a\u76f4\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002\u5c65\u6b74\u6570\u306f <code>max_history</code> \u5f15\u6570\u3067\u8abf\u6574\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code># Undo/Redo \u306e\u6709\u52b9\u5316\nself.pub_enable_undo_redo(str(self.store.state.counter), max_history=20)\n\n# \u64cd\u4f5c\nself.pub_undo(str(self.store.state.counter))\nself.pub_redo(str(self.store.state.counter))\n\n# \u5c65\u6b74\u8ffd\u8de1\u306e\u505c\u6b62\nself.pub_disable_undo_redo(str(self.store.state.counter))\n</code></pre> <p><code>sub_undo_status()</code> \u3092\u4f7f\u3046\u3068\u3001Undo/Redo \u53ef\u80fd\u304b\u3069\u3046\u304b\u3084\u5c65\u6b74\u6570\u3092\u8cfc\u8aad\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ai-reference/REFERENCE_FULL/#pubsub","title":"\u30ab\u30b9\u30bf\u30e0\u30c8\u30d4\u30c3\u30af\u30fbPubSub\u62e1\u5f35","text":"<p>AutoNamedTopic\u306b\u3088\u308b\u30ab\u30b9\u30bf\u30e0\u30c8\u30d4\u30c3\u30af\u4f5c\u6210:</p> <pre><code>from pubsubtk import AutoNamedTopic\nfrom enum import auto\n\nclass MyAppTopic(AutoNamedTopic):\n    USER_LOGIN = auto()        # -&gt; \"MyAppTopic.user_login\"\n    DATA_LOADED = auto()       # -&gt; \"MyAppTopic.data_loaded\"\n    ERROR_OCCURRED = auto()    # -&gt; \"MyAppTopic.error_occurred\"\n    FILE_EXPORT = auto()       # -&gt; \"MyAppTopic.file_export\"\n\n# \u4f7f\u7528\u4f8b\nclass MyProcessor(ProcessorBase[AppState]):\n    def setup_subscriptions(self):\n        self.subscribe(MyAppTopic.USER_LOGIN, self.handle_user_login)\n        self.subscribe(MyAppTopic.DATA_LOADED, self.handle_data_loaded)\n\n    def some_action(self):\n        # \u30ab\u30b9\u30bf\u30e0\u30c8\u30d4\u30c3\u30af\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\n        self.publish(MyAppTopic.FILE_EXPORT, format=\"csv\", filename=\"data.csv\")\n</code></pre> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u30c8\u30d4\u30c3\u30af vs \u30ab\u30b9\u30bf\u30e0\u30c8\u30d4\u30c3\u30af\u306e\u4f7f\u3044\u5206\u3051:</p> <pre><code># \u2705 \u30c7\u30d5\u30a9\u30eb\u30c8\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\uff08\u63a8\u5968\uff09\nself.pub_update_state(self.store.state.count, 42)      # \u72b6\u614b\u66f4\u65b0\nself.pub_switch_container(NewContainer)                # \u753b\u9762\u5207\u308a\u66ff\u3048\nself.pub_open_subwindow(DialogContainer)               # \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\nself.pub_enable_undo_redo(str(self.store.state.count))               # Undo\u5c65\u6b74\u3092\u958b\u59cb\nself.pub_undo(str(self.store.state.count))                    # Undo\nself.pub_redo(str(self.store.state.count))                    # Redo\nself.pub_disable_undo_redo(str(self.store.state.count))      # \u5c65\u6b74\u505c\u6b62\n\n# \u2705 \u30ab\u30b9\u30bf\u30e0\u30c8\u30d4\u30c3\u30af\u3092\u4f7f\u7528\uff08\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u7279\u6709\u306e\u901a\u4fe1\uff09\nself.publish(MyAppTopic.USER_LOGIN, user_id=123)       # \u30a2\u30d7\u30ea\u56fa\u6709\u306e\u30a4\u30d9\u30f3\u30c8\nself.subscribe(MyAppTopic.DATA_LOADED, self.on_data)   # \u8907\u96d1\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#_10","title":"\u3088\u304f\u3042\u308b\u554f\u984c\u3068\u89e3\u6c7a\u6cd5","text":"<p>StateProxy\u4f7f\u7528\u6642\u306e\u30a8\u30e9\u30fc:</p> <pre><code># \u274c \u30a8\u30e9\u30fc\u306b\u306a\u308b\u4f8b\npath = self.store.state.user.name.replace(\"old\", \"new\")  # AttributeError\n\n# \u2705 \u6b63\u3057\u3044\u4f7f\u3044\u65b9\npath = str(self.store.state.user.name).replace(\"old\", \"new\")\n</code></pre> <p>\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u306e\u6d3b\u7528:</p> <pre><code># \u2705 \u63a8\u5968: \u7d44\u307f\u8fbc\u307f\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\nself.pub_update_state(self.store.state.count, 42)\nself.pub_switch_container(OtherContainer)\nself.pub_enable_undo_redo(str(self.store.state.count))\nself.pub_undo(str(self.store.state.count))\nself.pub_redo(str(self.store.state.count))\nself.pub_disable_undo_redo(str(self.store.state.count))\n\n# \u274c \u975e\u63a8\u5968: \u624b\u52d5\u3067\u30c8\u30d4\u30c3\u30af\u64cd\u4f5c\nself.publish(DefaultUpdateTopic.UPDATE_STATE, state_path=\"count\", new_value=42)\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#_11","title":"\u5b9f\u8df5\u4f8b","text":""},{"location":"ai-reference/REFERENCE_FULL/#_12","title":"\u5168\u6a5f\u80fd\u3092\u6d3b\u7528\u3057\u305f\u30b7\u30f3\u30d7\u30eb\u306a\u30ab\u30a6\u30f3\u30bf\u30fc\u30a2\u30d7\u30ea","text":"<p>PubSubDefaultTopicBase\u306e\u5168\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u305f\u5c0f\u898f\u6a21\u306a\u30c7\u30e2\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3</p> <pre><code>\"\"\"\nPubSubTk \u5168\u6a5f\u80fd\u30b3\u30f3\u30d1\u30af\u30c8\u30c7\u30e2\n\nPubSubDefaultTopicBase\u306e\u5168\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u305f\u5c0f\u898f\u6a21\u306a\u30c7\u30e2\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\"\"\"\n\nimport asyncio\nimport json\nimport tkinter as tk\nfrom enum import auto\nfrom tkinter import filedialog, messagebox, simpledialog\nfrom typing import List\n\nfrom pydantic import BaseModel\n\nfrom pubsubtk import (\n    AutoNamedTopic,\n    ContainerComponentTk,\n    PresentationalComponentTk,\n    ProcessorBase,\n    TemplateComponentTk,\n    TkApplication,\n    make_async_task,\n)\n\n\n# \u30ab\u30b9\u30bf\u30e0\u30c8\u30d4\u30c3\u30af\nclass AppTopic(AutoNamedTopic):\n    INCREMENT = auto()\n    RESET = auto()\n    MILESTONE = auto()\n\n\n# \u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\nclass TodoItem(BaseModel):\n    id: int\n    text: str\n    completed: bool = False\n\n\nclass AppState(BaseModel):\n    counter: int = 0\n    total_clicks: int = 0\n    todos: List[TodoItem] = []\n    next_todo_id: int = 1\n    settings: dict = {\"theme\": \"default\", \"auto_save\": \"true\"}\n    current_view: str = \"main\"\n\n\n# =============================================================================\n# \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\uff083\u30b9\u30ed\u30c3\u30c8\u69cb\u6210\uff09\n# =============================================================================\n\n\nclass AppTemplate(TemplateComponentTk[AppState]):\n    def define_slots(self):\n        # \u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\n        self.navbar = tk.Frame(self, height=40, bg=\"navy\")\n        self.navbar.pack(fill=tk.X)\n        self.navbar.pack_propagate(False)\n\n        # \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30f3\u30c4\n        self.main_area = tk.Frame(self)\n        self.main_area.pack(fill=tk.BOTH, expand=True, side=tk.LEFT)\n\n        # \u30b5\u30a4\u30c9\u30d0\u30fc\n        self.sidebar = tk.Frame(self, width=200, bg=\"lightgray\")\n        self.sidebar.pack(fill=tk.Y, side=tk.RIGHT)\n        self.sidebar.pack_propagate(False)\n\n        return {\n            \"navbar\": self.navbar,\n            \"main\": self.main_area,\n            \"sidebar\": self.sidebar,\n        }\n\n\n# =============================================================================\n# Presentational\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\uff08\u7d14\u7c8b\u8868\u793a\uff09\n# =============================================================================\n\n\nclass UndoRedoControlView(PresentationalComponentTk):\n    \"\"\"Undo/Redo\u64cd\u4f5c\u7528\u306ePresentational\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\"\"\"\n\n    def setup_ui(self):\n        self.configure(relief=tk.RIDGE, borderwidth=1, bg=\"lightyellow\")\n\n        # \u30bf\u30a4\u30c8\u30eb\n        title_label = tk.Label(\n            self, text=\"\ud83d\udd04 \u5c65\u6b74\u64cd\u4f5c\", font=(\"Arial\", 10, \"bold\"), bg=\"lightyellow\"\n        )\n        title_label.pack(pady=2)\n\n        # \u30dc\u30bf\u30f3\u30d5\u30ec\u30fc\u30e0\n        btn_frame = tk.Frame(self, bg=\"lightyellow\")\n        btn_frame.pack(pady=2)\n\n        self.undo_btn = tk.Button(btn_frame, text=\"\u2190 Undo\", state=\"disabled\", width=8)\n        self.undo_btn.pack(side=tk.LEFT, padx=2)\n\n        self.redo_btn = tk.Button(btn_frame, text=\"Redo \u2192\", state=\"disabled\", width=8)\n        self.redo_btn.pack(side=tk.LEFT, padx=2)\n\n        # \u30b9\u30c6\u30fc\u30bf\u30b9\u8868\u793a\n        self.status_label = tk.Label(\n            self, text=\"\u7121\u52b9\", font=(\"Arial\", 8), bg=\"lightyellow\", fg=\"gray\"\n        )\n        self.status_label.pack(pady=1)\n\n    def setup_handlers(self, undo_handler, redo_handler):\n        \"\"\"Undo/Redo\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u8a2d\u5b9a\"\"\"\n        self.undo_btn.config(command=undo_handler)\n        self.redo_btn.config(command=redo_handler)\n\n    def update_status(\n        self, can_undo: bool, can_redo: bool, undo_count: int, redo_count: int\n    ):\n        \"\"\"Undo/Redo\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u66f4\u65b0\"\"\"\n        # \u30dc\u30bf\u30f3\u306e\u6709\u52b9/\u7121\u52b9\u72b6\u614b\n        self.undo_btn.config(\n            state=\"normal\" if can_undo else \"disabled\",\n            text=f\"\u2190 Undo ({undo_count})\" if undo_count &gt; 0 else \"\u2190 Undo\",\n        )\n        self.redo_btn.config(\n            state=\"normal\" if can_redo else \"disabled\",\n            text=f\"Redo ({redo_count}) \u2192\" if redo_count &gt; 0 else \"Redo \u2192\",\n        )\n\n        # \u30b9\u30c6\u30fc\u30bf\u30b9\u30c6\u30ad\u30b9\u30c8\n        if can_undo or can_redo:\n            status = f\"Undo:{undo_count} Redo:{redo_count}\"\n            self.status_label.config(text=status, fg=\"black\")\n        else:\n            self.status_label.config(text=\"\u5c65\u6b74\u306a\u3057\", fg=\"gray\")\n\n\nclass TodoItemView(PresentationalComponentTk):\n    def setup_ui(self):\n        self.configure(relief=tk.RAISED, borderwidth=1, padx=5, pady=3)\n\n        self.var = tk.BooleanVar()\n        self.checkbox = tk.Checkbutton(self, variable=self.var, command=self.on_toggle)\n        self.checkbox.pack(side=tk.LEFT)\n\n        self.label = tk.Label(self, text=\"\", anchor=\"w\")\n        self.label.pack(side=tk.LEFT, fill=tk.X, expand=True)\n\n        self.delete_btn = tk.Button(self, text=\"\u00d7\", width=3, command=self.on_delete)\n        self.delete_btn.pack(side=tk.RIGHT)\n\n    def update_data(self, todo: TodoItem):\n        self.todo = todo\n        self.var.set(todo.completed)\n        text = f\"\u2713 {todo.text}\" if todo.completed else todo.text\n        self.label.config(text=text, fg=\"gray\" if todo.completed else \"black\")\n\n    def on_toggle(self):\n        self.trigger_event(\"toggle\", todo_id=self.todo.id)\n\n    def on_delete(self):\n        self.trigger_event(\"delete\", todo_id=self.todo.id)\n\n\nclass StatsView(PresentationalComponentTk):\n    def setup_ui(self):\n        self.configure(bg=\"lightblue\", relief=tk.SUNKEN, borderwidth=2)\n\n        tk.Label(self, text=\"\ud83d\udcca \u7d71\u8a08\", font=(\"Arial\", 12, \"bold\"), bg=\"lightblue\").pack(\n            pady=5\n        )\n\n        self.stats_label = tk.Label(self, text=\"\", bg=\"lightblue\", justify=tk.LEFT)\n        self.stats_label.pack(padx=10, pady=5, fill=tk.BOTH, expand=True)\n\n    def update_stats(\n        self,\n        counter: int,\n        total_clicks: int,\n        total_todos: int,\n        completed_todos: int,\n        settings_count: int,\n        current_view: str,\n        counter_undo_status: dict = None,\n        todos_undo_status: dict = None,\n    ):\n        \"\"\"\u7d14\u7c8b\u306a\u8868\u793a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 - \u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u306e\u307f\u3092\u500b\u5225\u306b\u53d7\u3051\u53d6\u308b\"\"\"\n        uncompleted = total_todos - completed_todos\n\n        # \u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u8a2d\u5b9a\n        counter_undo_status = counter_undo_status or {\n            \"can_undo\": False,\n            \"can_redo\": False,\n            \"undo_count\": 0,\n            \"redo_count\": 0,\n        }\n        todos_undo_status = todos_undo_status or {\n            \"can_undo\": False,\n            \"can_redo\": False,\n            \"undo_count\": 0,\n            \"redo_count\": 0,\n        }\n\n        stats = f\"\"\"\u30ab\u30a6\u30f3\u30bf\u30fc: {counter}\n\u7dcf\u30af\u30ea\u30c3\u30af: {total_clicks}\n\nTodo\u7d71\u8a08:\n\u30fb\u7dcf\u6570: {total_todos}\n\u30fb\u5b8c\u4e86: {completed_todos}\n\u30fb\u672a\u5b8c\u4e86: {uncompleted}\n\n\u8a2d\u5b9a\u6570: {settings_count}\n\u73fe\u5728\u753b\u9762: {current_view}\n\n\ud83d\udd04 \u5c65\u6b74\u72b6\u6cc1:\n\u30ab\u30a6\u30f3\u30bf\u30fc\u5c65\u6b74:\n\u30fbUndo: {counter_undo_status[\"undo_count\"]}\u56de\n\u30fbRedo: {counter_undo_status[\"redo_count\"]}\u56de\n\nTodo\u5c65\u6b74:\n\u30fbUndo: {todos_undo_status[\"undo_count\"]}\u56de\n\u30fbRedo: {todos_undo_status[\"redo_count\"]}\u56de\"\"\"\n\n        self.stats_label.config(text=stats)\n\n\n# =============================================================================\n# Container\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\uff08\u72b6\u614b\u9023\u643a\uff09\n# =============================================================================\n\n\nclass NavbarContainer(ContainerComponentTk[AppState]):\n    def setup_ui(self):\n        self.configure(bg=\"navy\")\n\n        tk.Label(\n            self,\n            text=\"\ud83c\udfaf PubSubTk Demo (w/ Undo/Redo)\",\n            fg=\"white\",\n            bg=\"navy\",\n            font=(\"Arial\", 14, \"bold\"),\n        ).pack(side=tk.LEFT, padx=10, pady=5)\n\n        nav_frame = tk.Frame(self, bg=\"navy\")\n        nav_frame.pack(side=tk.RIGHT, padx=10)\n\n        self.main_btn = tk.Button(nav_frame, text=\"\u30e1\u30a4\u30f3\", command=self.switch_to_main)\n        self.main_btn.pack(side=tk.LEFT, padx=2)\n\n        self.todo_btn = tk.Button(nav_frame, text=\"Todo\", command=self.switch_to_todo)\n        self.todo_btn.pack(side=tk.LEFT, padx=2)\n\n    def setup_subscriptions(self):\n        self.sub_state_changed(self.store.state.current_view, self.on_view_changed)\n\n    def refresh_from_state(self):\n        state = self.store.get_current_state()\n        self.update_buttons(state.current_view)\n\n    def on_view_changed(self, old_value, new_value):\n        self.update_buttons(new_value)\n\n    def update_buttons(self, current_view: str):\n        self.main_btn.config(\n            bg=\"lightblue\" if current_view == \"main\" else \"SystemButtonFace\"\n        )\n        self.todo_btn.config(\n            bg=\"lightblue\" if current_view == \"todo\" else \"SystemButtonFace\"\n        )\n\n    def switch_to_main(self):\n        self.pub_update_state(self.store.state.current_view, \"main\")\n        self.pub_switch_slot(\"main\", MainContainer)\n\n    def switch_to_todo(self):\n        self.pub_update_state(self.store.state.current_view, \"todo\")\n        self.pub_switch_slot(\"main\", TodoContainer)\n\n\nclass MainContainer(ContainerComponentTk[AppState]):\n    def setup_ui(self):\n        tk.Label(self, text=\"\ud83c\udfe0 \u30e1\u30a4\u30f3\u30d3\u30e5\u30fc\", font=(\"Arial\", 16, \"bold\")).pack(pady=10)\n\n        # \u30ab\u30a6\u30f3\u30bf\u30fc\n        self.counter_label = tk.Label(self, text=\"0\", font=(\"Arial\", 32))\n        self.counter_label.pack(pady=20)\n\n        # Undo/Redo\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\uff08\u30ab\u30a6\u30f3\u30bf\u30fc\u7528\uff09\n        self.counter_undo_control = UndoRedoControlView(self)\n        self.counter_undo_control.pack(pady=5)\n        self.counter_undo_control.setup_handlers(\n            undo_handler=self.undo_counter, redo_handler=self.redo_counter\n        )\n\n        # \u30dc\u30bf\u30f3\u7fa4\n        btn_frame = tk.Frame(self)\n        btn_frame.pack(pady=10)\n\n        tk.Button(btn_frame, text=\"\u30ab\u30a6\u30f3\u30c8\", command=self.increment).pack(\n            side=tk.LEFT, padx=5\n        )\n        tk.Button(btn_frame, text=\"\u30ea\u30bb\u30c3\u30c8\", command=self.reset).pack(\n            side=tk.LEFT, padx=5\n        )\n        tk.Button(btn_frame, text=\"\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\", command=self.open_sub).pack(\n            side=tk.LEFT, padx=5\n        )\n\n        # Undo/Redo\u5236\u5fa1\u30dc\u30bf\u30f3\n        undo_control_frame = tk.Frame(self)\n        undo_control_frame.pack(pady=5)\n\n        self.enable_undo_btn = tk.Button(\n            undo_control_frame,\n            text=\"\u5c65\u6b74\u8a18\u9332ON\",\n            command=self.enable_counter_undo,\n            bg=\"lightgreen\",\n        )\n        self.enable_undo_btn.pack(side=tk.LEFT, padx=5)\n\n        self.disable_undo_btn = tk.Button(\n            undo_control_frame,\n            text=\"\u5c65\u6b74\u8a18\u9332OFF\",\n            command=self.disable_counter_undo,\n            bg=\"lightcoral\",\n            state=\"disabled\",\n        )\n        self.disable_undo_btn.pack(side=tk.LEFT, padx=5)\n\n        # \u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\n        file_frame = tk.Frame(self)\n        file_frame.pack(pady=10)\n\n        tk.Button(file_frame, text=\"\u4fdd\u5b58\", command=self.save_data).pack(\n            side=tk.LEFT, padx=5\n        )\n        tk.Button(file_frame, text=\"\u8aad\u8fbc\", command=self.load_data).pack(\n            side=tk.LEFT, padx=5\n        )\n\n        # \u8a2d\u5b9a\u64cd\u4f5c\uff08\u8f9e\u66f8\u6a5f\u80fd\u30c6\u30b9\u30c8\uff09\n        setting_frame = tk.Frame(self)\n        setting_frame.pack(pady=10)\n\n        tk.Button(setting_frame, text=\"\u8a2d\u5b9a\u8ffd\u52a0\", command=self.add_setting).pack(\n            side=tk.LEFT, padx=5\n        )\n        tk.Button(\n            setting_frame, text=\"\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u8ffd\u52a0\", command=self.add_processor\n        ).pack(side=tk.LEFT, padx=5)\n\n        # \u5371\u967a\u306a\u64cd\u4f5c\n        tk.Button(\n            self, text=\"\u5168\u72b6\u614b\u30ea\u30bb\u30c3\u30c8\", command=self.reset_all, bg=\"red\", fg=\"white\"\n        ).pack(pady=10)\n\n    def setup_subscriptions(self):\n        self.sub_state_changed(self.store.state.counter, self.on_counter_changed)\n        self.subscribe(AppTopic.MILESTONE, self.on_milestone)\n\n        # \u30ab\u30a6\u30f3\u30bf\u30fc\u306eUndo/Redo\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u5316\u3092\u8cfc\u8aad\n        self.sub_undo_status(str(self.store.state.counter), self.on_counter_undo_status)\n\n    def refresh_from_state(self):\n        state = self.store.get_current_state()\n        self.counter_label.config(text=str(state.counter))\n\n    def on_counter_changed(self, old_value, new_value):\n        self.counter_label.config(text=str(new_value))\n\n    def on_counter_undo_status(\n        self, can_undo: bool, can_redo: bool, undo_count: int, redo_count: int\n    ):\n        \"\"\"\u30ab\u30a6\u30f3\u30bf\u30fc\u306eUndo/Redo\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u5316\u30cf\u30f3\u30c9\u30e9\u30fc\"\"\"\n        self.counter_undo_control.update_status(\n            can_undo, can_redo, undo_count, redo_count\n        )\n\n    def enable_counter_undo(self):\n        \"\"\"\u30ab\u30a6\u30f3\u30bf\u30fc\u306eUndo/Redo\u6a5f\u80fd\u3092\u6709\u52b9\u5316\"\"\"\n        self.pub_enable_undo_redo(str(self.store.state.counter), max_history=20)\n        self.enable_undo_btn.config(state=\"disabled\")\n        self.disable_undo_btn.config(state=\"normal\")\n\n    def disable_counter_undo(self):\n        \"\"\"\u30ab\u30a6\u30f3\u30bf\u30fc\u306eUndo/Redo\u6a5f\u80fd\u3092\u7121\u52b9\u5316\"\"\"\n        self.pub_disable_undo_redo(str(self.store.state.counter))\n        self.enable_undo_btn.config(state=\"normal\")\n        self.disable_undo_btn.config(state=\"disabled\")\n\n    def undo_counter(self):\n        \"\"\"\u30ab\u30a6\u30f3\u30bf\u30fc\u3092Undo\"\"\"\n        self.pub_undo(str(self.store.state.counter))\n\n    def redo_counter(self):\n        \"\"\"\u30ab\u30a6\u30f3\u30bf\u30fc\u3092Redo\"\"\"\n        self.pub_redo(str(self.store.state.counter))\n\n    def increment(self):\n        self.publish(AppTopic.INCREMENT)\n\n    def reset(self):\n        self.publish(AppTopic.RESET)\n\n    def open_sub(self):\n        self.pub_open_subwindow(SubWindow)\n\n    @make_async_task\n    async def save_data(self):\n        filename = filedialog.asksaveasfilename(defaultextension=\".json\")\n        if filename:\n            await asyncio.sleep(0.3)  # \u4fdd\u5b58\u51e6\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n            state = self.store.get_current_state()\n            with open(filename, \"w\") as f:\n                json.dump(state.model_dump(), f, indent=2)\n            messagebox.showinfo(\"\u5b8c\u4e86\", \"\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f\")\n\n    @make_async_task\n    async def load_data(self):\n        filename = filedialog.askopenfilename(filetypes=[(\"JSON files\", \"*.json\")])\n        if filename:\n            await asyncio.sleep(0.3)  # \u8aad\u8fbc\u51e6\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n            with open(filename, \"r\") as f:\n                data = json.load(f)\n            new_state = AppState.model_validate(data)\n            self.pub_replace_state(new_state)\n            # \u72b6\u614b\u30ea\u30bb\u30c3\u30c8\u5f8c\u306f\u753b\u9762\u3082\u9069\u5207\u306b\u5207\u308a\u66ff\u3048\u308b\n            self.pub_switch_slot(\"main\", MainContainer)\n            messagebox.showinfo(\"\u5b8c\u4e86\", \"\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3057\u305f\")\n\n    def add_setting(self):\n        key = simpledialog.askstring(\"\u8a2d\u5b9a\u8ffd\u52a0\", \"\u30ad\u30fc\u3092\u5165\u529b:\")\n        if key:\n            value = simpledialog.askstring(\"\u8a2d\u5b9a\u8ffd\u52a0\", \"\u5024\u3092\u5165\u529b:\")\n            if value:\n                # pub_add_to_dict\u4f7f\u7528\n                self.pub_add_to_dict(self.store.state.settings, key, value)\n\n    @make_async_task\n    async def add_processor(self):\n        await asyncio.sleep(0.5)  # \u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u521d\u671f\u5316\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n        try:\n            # pub_register_processor\u4f7f\u7528\n            self.pub_register_processor(DummyProcessor, \"dummy\")\n            messagebox.showinfo(\"\u6210\u529f\", \"\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\")\n        except Exception as e:\n            messagebox.showerror(\"\u30a8\u30e9\u30fc\", str(e))\n\n    @make_async_task\n    async def reset_all(self):\n        if messagebox.askyesno(\"\u78ba\u8a8d\", \"\u5168\u72b6\u614b\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3059\u304b\uff1f\"):\n            await asyncio.sleep(1.0)  # \u91cd\u3044\u51e6\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n            # pub_replace_state\u4f7f\u7528\n            self.pub_replace_state(AppState())\n            # \u30ea\u30bb\u30c3\u30c8\u5f8c\u306f\u30e1\u30a4\u30f3\u753b\u9762\u306b\u623b\u308b\n            self.pub_switch_slot(\"main\", MainContainer)\n            messagebox.showinfo(\"\u5b8c\u4e86\", \"\u72b6\u614b\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3057\u305f\")\n\n    def on_milestone(self, value: int):\n        messagebox.showinfo(\"\u30de\u30a4\u30eb\u30b9\u30c8\u30fc\u30f3!\", f\"{value}\u306b\u5230\u9054\uff01\")\n\n\nclass TodoContainer(ContainerComponentTk[AppState]):\n    def setup_ui(self):\n        tk.Label(self, text=\"\ud83d\udcdd Todo\u7ba1\u7406\", font=(\"Arial\", 16, \"bold\")).pack(pady=10)\n\n        # Todo\u7528Undo/Redo\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\n        self.todo_undo_control = UndoRedoControlView(self)\n        self.todo_undo_control.pack(pady=5)\n        self.todo_undo_control.setup_handlers(\n            undo_handler=self.undo_todos, redo_handler=self.redo_todos\n        )\n\n        # Undo/Redo\u5236\u5fa1\n        undo_control_frame = tk.Frame(self)\n        undo_control_frame.pack(pady=5)\n\n        self.enable_todo_undo_btn = tk.Button(\n            undo_control_frame,\n            text=\"Todo\u5c65\u6b74ON\",\n            command=self.enable_todo_undo,\n            bg=\"lightgreen\",\n        )\n        self.enable_todo_undo_btn.pack(side=tk.LEFT, padx=5)\n\n        self.disable_todo_undo_btn = tk.Button(\n            undo_control_frame,\n            text=\"Todo\u5c65\u6b74OFF\",\n            command=self.disable_todo_undo,\n            bg=\"lightcoral\",\n            state=\"disabled\",\n        )\n        self.disable_todo_undo_btn.pack(side=tk.LEFT, padx=5)\n\n        # Todo\u8ffd\u52a0\n        add_frame = tk.Frame(self)\n        add_frame.pack(fill=tk.X, padx=10, pady=5)\n\n        self.entry = tk.Entry(add_frame)\n        self.entry.pack(side=tk.LEFT, fill=tk.X, expand=True, padx=5)\n        self.entry.bind(\"&lt;Return&gt;\", lambda e: self.add_todo())\n\n        tk.Button(add_frame, text=\"\u8ffd\u52a0\", command=self.add_todo).pack(side=tk.RIGHT)\n\n        # Todo\u30ea\u30b9\u30c8\n        list_frame = tk.Frame(self, relief=tk.SUNKEN, borderwidth=2)\n        list_frame.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)\n\n        # \u30b9\u30af\u30ed\u30fc\u30eb\u53ef\u80fd\u30d5\u30ec\u30fc\u30e0\n        canvas = tk.Canvas(list_frame)\n        scrollbar = tk.Scrollbar(list_frame, orient=\"vertical\", command=canvas.yview)\n        self.scrollable_frame = tk.Frame(canvas)\n\n        self.scrollable_frame.bind(\n            \"&lt;Configure&gt;\", lambda e: canvas.configure(scrollregion=canvas.bbox(\"all\"))\n        )\n\n        canvas.create_window((0, 0), window=self.scrollable_frame, anchor=\"nw\")\n        canvas.configure(yscrollcommand=scrollbar.set)\n\n        canvas.pack(side=\"left\", fill=\"both\", expand=True)\n        scrollbar.pack(side=\"right\", fill=\"y\")\n\n        self.todo_widgets = {}\n\n    def setup_subscriptions(self):\n        # sub_state_added\u3068sub_for_refresh\u4f7f\u7528\n        self.sub_state_added(self.store.state.todos, self.on_todo_added)\n        self.sub_for_refresh(self.store.state.todos, self.refresh_todo_list)\n\n        # Todo\u30ea\u30b9\u30c8\u306eUndo/Redo\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u5316\u3092\u8cfc\u8aad\n        self.sub_undo_status(str(self.store.state.todos), self.on_todo_undo_status)\n\n    def refresh_from_state(self):\n        self.refresh_todo_list()\n\n    def on_todo_undo_status(\n        self, can_undo: bool, can_redo: bool, undo_count: int, redo_count: int\n    ):\n        \"\"\"Todo\u30ea\u30b9\u30c8\u306eUndo/Redo\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u5316\u30cf\u30f3\u30c9\u30e9\u30fc\"\"\"\n        self.todo_undo_control.update_status(can_undo, can_redo, undo_count, redo_count)\n\n    def enable_todo_undo(self):\n        \"\"\"Todo\u30ea\u30b9\u30c8\u306eUndo/Redo\u6a5f\u80fd\u3092\u6709\u52b9\u5316\"\"\"\n        self.pub_enable_undo_redo(str(self.store.state.todos), max_history=15)\n        self.enable_todo_undo_btn.config(state=\"disabled\")\n        self.disable_todo_undo_btn.config(state=\"normal\")\n\n    def disable_todo_undo(self):\n        \"\"\"Todo\u30ea\u30b9\u30c8\u306eUndo/Redo\u6a5f\u80fd\u3092\u7121\u52b9\u5316\"\"\"\n        self.pub_disable_undo_redo(str(self.store.state.todos))\n        self.enable_todo_undo_btn.config(state=\"normal\")\n        self.disable_todo_undo_btn.config(state=\"disabled\")\n\n    def undo_todos(self):\n        \"\"\"Todo\u30ea\u30b9\u30c8\u3092Undo\"\"\"\n        self.pub_undo(str(self.store.state.todos))\n\n    def redo_todos(self):\n        \"\"\"Todo\u30ea\u30b9\u30c8\u3092Redo\"\"\"\n        self.pub_redo(str(self.store.state.todos))\n\n    def refresh_todo_list(self):\n        # \u65e2\u5b58\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u30af\u30ea\u30a2\n        for widget in self.todo_widgets.values():\n            widget.destroy()\n        self.todo_widgets.clear()\n\n        # \u65b0\u3057\u3044\u30ea\u30b9\u30c8\u3092\u63cf\u753b\n        state = self.store.get_current_state()\n        for todo in state.todos:\n            todo_widget = TodoItemView(self.scrollable_frame)\n            todo_widget.pack(fill=tk.X, padx=5, pady=2)\n            todo_widget.update_data(todo)\n\n            # \u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u767b\u9332\n            todo_widget.register_handler(\"toggle\", self.toggle_todo)\n            todo_widget.register_handler(\"delete\", self.delete_todo)\n\n            self.todo_widgets[todo.id] = todo_widget\n\n    def on_todo_added(self, item: TodoItem, index: int):\n        # \u65b0\u898f\u8ffd\u52a0\u6642\u306f\u5168\u4f53\u518d\u63cf\u753b\n        self.refresh_todo_list()\n\n    def add_todo(self):\n        text = self.entry.get().strip()\n        if not text:\n            return\n\n        state = self.store.get_current_state()\n        new_todo = TodoItem(id=state.next_todo_id, text=text)\n\n        # pub_add_to_list\u4f7f\u7528\n        self.pub_add_to_list(self.store.state.todos, new_todo)\n        self.pub_update_state(self.store.state.next_todo_id, state.next_todo_id + 1)\n\n        self.entry.delete(0, tk.END)\n\n    def toggle_todo(self, todo_id: int):\n        state = self.store.get_current_state()\n        updated_todos = []\n        for todo in state.todos:\n            if todo.id == todo_id:\n                updated = todo.model_copy()\n                updated.completed = not updated.completed\n                updated_todos.append(updated)\n            else:\n                updated_todos.append(todo)\n\n        self.pub_update_state(self.store.state.todos, updated_todos)\n\n    @make_async_task\n    async def delete_todo(self, todo_id: int):\n        if messagebox.askyesno(\"\u78ba\u8a8d\", \"\u3053\u306eTodo\u3092\u524a\u9664\u3057\u307e\u3059\u304b\uff1f\"):\n            await asyncio.sleep(0.2)  # \u524a\u9664\u51e6\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n            state = self.store.get_current_state()\n            updated_todos = [t for t in state.todos if t.id != todo_id]\n            self.pub_update_state(self.store.state.todos, updated_todos)\n\n\nclass SidebarContainer(ContainerComponentTk[AppState]):\n    def setup_ui(self):\n        self.configure(bg=\"lightgray\")\n\n        # \u7d71\u8a08\u8868\u793a\uff08Presentational\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u4f7f\u7528\uff09\n        self.stats_view = StatsView(self)\n        self.stats_view.pack(fill=tk.BOTH, expand=True, padx=5, pady=5)\n\n        # \u64cd\u4f5c\u30dc\u30bf\u30f3\n        btn_frame = tk.Frame(self, bg=\"lightgray\")\n        btn_frame.pack(fill=tk.X, padx=5, pady=5)\n\n        tk.Button(btn_frame, text=\"\u5168\u30a6\u30a3\u30f3\u30c9\u30a6\u9589\u3058\u308b\", command=self.close_all).pack(\n            fill=tk.X, pady=2\n        )\n        tk.Button(btn_frame, text=\"\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u524a\u9664\", command=self.delete_proc).pack(\n            fill=tk.X, pady=2\n        )\n\n        # Undo/Redo\u60c5\u5831\u4fdd\u6301\u7528\n        self.counter_undo_status = {\n            \"can_undo\": False,\n            \"can_redo\": False,\n            \"undo_count\": 0,\n            \"redo_count\": 0,\n        }\n        self.todos_undo_status = {\n            \"can_undo\": False,\n            \"can_redo\": False,\n            \"undo_count\": 0,\n            \"redo_count\": 0,\n        }\n\n    def setup_subscriptions(self):\n        # \u8907\u6570\u306e\u72b6\u614b\u5909\u66f4\u3092\u76e3\u8996\n        self.sub_for_refresh(self.store.state.counter, self.refresh_from_state)\n        self.sub_for_refresh(self.store.state.todos, self.refresh_from_state)\n        self.sub_for_refresh(self.store.state.settings, self.refresh_from_state)\n        self.sub_for_refresh(self.store.state.total_clicks, self.refresh_from_state)\n        self.sub_for_refresh(self.store.state.current_view, self.refresh_from_state)\n\n        # sub_dict_item_added\u4f7f\u7528\n        self.sub_dict_item_added(self.store.state.settings, self.on_setting_added)\n\n        # Undo/Redo\u30b9\u30c6\u30fc\u30bf\u30b9\u76e3\u8996\n        self.sub_undo_status(str(self.store.state.counter), self.on_counter_undo_status)\n        self.sub_undo_status(str(self.store.state.todos), self.on_todos_undo_status)\n\n    def on_counter_undo_status(\n        self, can_undo: bool, can_redo: bool, undo_count: int, redo_count: int\n    ):\n        \"\"\"\u30ab\u30a6\u30f3\u30bf\u30fc\u306eUndo/Redo\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u5316\u30cf\u30f3\u30c9\u30e9\u30fc\"\"\"\n        self.counter_undo_status = {\n            \"can_undo\": can_undo,\n            \"can_redo\": can_redo,\n            \"undo_count\": undo_count,\n            \"redo_count\": redo_count,\n        }\n        self.refresh_from_state()\n\n    def on_todos_undo_status(\n        self, can_undo: bool, can_redo: bool, undo_count: int, redo_count: int\n    ):\n        \"\"\"Todo\u30ea\u30b9\u30c8\u306eUndo/Redo\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u5316\u30cf\u30f3\u30c9\u30e9\u30fc\"\"\"\n        self.todos_undo_status = {\n            \"can_undo\": can_undo,\n            \"can_redo\": can_redo,\n            \"undo_count\": undo_count,\n            \"redo_count\": redo_count,\n        }\n        self.refresh_from_state()\n\n    def refresh_from_state(self):\n        state = self.store.get_current_state()\n        # Container\u3067\u72b6\u614b\u304b\u3089\u5fc5\u8981\u306a\u5024\u3092\u62bd\u51fa\u3057\u3066Presentational\u306b\u6e21\u3059\n        completed_todos = sum(1 for t in state.todos if t.completed)\n        total_todos = len(state.todos)\n\n        self.stats_view.update_stats(\n            counter=state.counter,\n            total_clicks=state.total_clicks,\n            total_todos=total_todos,\n            completed_todos=completed_todos,\n            settings_count=len(state.settings),\n            current_view=state.current_view,\n            counter_undo_status=self.counter_undo_status,\n            todos_undo_status=self.todos_undo_status,\n        )\n\n    def on_setting_added(self, key: str, value: str):\n        messagebox.showinfo(\"\u8a2d\u5b9a\u8ffd\u52a0\", f\"\u8a2d\u5b9a\u8ffd\u52a0: {key} = {value}\")\n\n    def close_all(self):\n        # pub_close_all_subwindows\u4f7f\u7528\n        self.pub_close_all_subwindows()\n\n    def delete_proc(self):\n        try:\n            # pub_delete_processor\u4f7f\u7528\n            self.pub_delete_processor(\"dummy\")\n            messagebox.showinfo(\"\u6210\u529f\", \"\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u524a\u9664\u3057\u307e\u3057\u305f\")\n        except KeyError:\n            messagebox.showerror(\"\u30a8\u30e9\u30fc\", \"\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n\n\n# =============================================================================\n# \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\n# =============================================================================\n\n\nclass SubWindow(ContainerComponentTk[AppState]):\n    def setup_ui(self):\n        tk.Label(self, text=\"\ud83d\udd22 \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\", font=(\"Arial\", 14)).pack(pady=10)\n\n        self.value_label = tk.Label(self, text=\"0\", font=(\"Arial\", 20))\n        self.value_label.pack(pady=10)\n\n        btn_frame = tk.Frame(self)\n        btn_frame.pack(pady=10)\n\n        tk.Button(btn_frame, text=\"+1\", command=self.increment).pack(\n            side=tk.LEFT, padx=5\n        )\n        tk.Button(btn_frame, text=\"+5\", command=lambda: self.add_value(5)).pack(\n            side=tk.LEFT, padx=5\n        )\n\n        tk.Button(self, text=\"\u9589\u3058\u308b\", command=self.close_window).pack(pady=10)\n\n    def setup_subscriptions(self):\n        self.sub_state_changed(self.store.state.counter, self.on_counter_changed)\n\n    def refresh_from_state(self):\n        state = self.store.get_current_state()\n        self.value_label.config(text=str(state.counter))\n\n    def on_counter_changed(self, old_value, new_value):\n        self.value_label.config(text=str(new_value))\n\n    def increment(self):\n        self.publish(AppTopic.INCREMENT)\n\n    def add_value(self, value: int):\n        state = self.store.get_current_state()\n        new_value = state.counter + value\n        self.pub_update_state(self.store.state.counter, new_value)\n        self.pub_update_state(self.store.state.total_clicks, state.total_clicks + 1)\n\n    def close_window(self):\n        # pub_close_subwindow\u4f7f\u7528\n        self.pub_close_subwindow(self.kwargs[\"win_id\"])\n\n\n# =============================================================================\n# \u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\n# =============================================================================\n\n\nclass MainProcessor(ProcessorBase[AppState]):\n    def setup_subscriptions(self):\n        self.subscribe(AppTopic.INCREMENT, self.handle_increment)\n        self.subscribe(AppTopic.RESET, self.handle_reset)\n\n    def handle_increment(self):\n        state = self.store.get_current_state()\n        new_counter = state.counter + 1\n        new_total = state.total_clicks + 1\n\n        self.pub_update_state(self.store.state.counter, new_counter)\n        self.pub_update_state(self.store.state.total_clicks, new_total)\n\n        # \u30de\u30a4\u30eb\u30b9\u30c8\u30fc\u30f3\u5224\u5b9a\n        if new_counter % 10 == 0:\n            self.publish(AppTopic.MILESTONE, value=new_counter)\n\n    def handle_reset(self):\n        self.pub_update_state(self.store.state.counter, 0)\n\n\nclass DummyProcessor(ProcessorBase[AppState]):\n    def setup_subscriptions(self):\n        print(\"DummyProcessor: \u521d\u671f\u5316\u3055\u308c\u307e\u3057\u305f\")\n\n\n# =============================================================================\n# \u30e1\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n# =============================================================================\n\nif __name__ == \"__main__\":\n    app = TkApplication(AppState, title=\"\ud83c\udfaf PubSubTk Demo\", geometry=\"800x600\")\n\n    # \u30e1\u30a4\u30f3\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u767b\u9332\n    app.pub_register_processor(MainProcessor)\n\n    # \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u8a2d\u5b9a\n    app.set_template(AppTemplate)\n\n    # \u5404\u30b9\u30ed\u30c3\u30c8\u306b\u30b3\u30f3\u30c6\u30ca\u914d\u7f6e\n    app.pub_switch_slot(\"navbar\", NavbarContainer)\n    app.pub_switch_slot(\"main\", MainContainer)  # \u521d\u671f\u753b\u9762\n    app.pub_switch_slot(\"sidebar\", SidebarContainer)\n\n    # \u8d77\u52d5\n    app.run(use_async=True)\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#_13","title":"\u30d5\u30eb\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9","text":""},{"location":"ai-reference/REFERENCE_FULL/#pubsub_1","title":"\u30b3\u30a2PubSub\u30b7\u30b9\u30c6\u30e0","text":""},{"location":"ai-reference/REFERENCE_FULL/#srcpubsubtkcorepubsub_basepy","title":"<code>src/pubsubtk/core/pubsub_base.py</code>","text":"<p>PubSub\u30d1\u30bf\u30fc\u30f3\u306e\u57fa\u5e95\u30af\u30e9\u30b9</p> <pre><code># pubsub_base.py - PubSub \u57fa\u5e95\u30af\u30e9\u30b9\n\n\"\"\"Pub/Sub \u30d1\u30bf\u30fc\u30f3\u306e\u5171\u901a\u6a5f\u80fd\u3092\u307e\u3068\u3081\u305f\u62bd\u8c61\u57fa\u5e95\u30af\u30e9\u30b9\u3002\"\"\"\n\nimport logging\nfrom abc import ABC, abstractmethod\nfrom typing import Any, Callable, Dict, List\n\nfrom pubsub import pub\n\n# PubSub\u5c02\u7528\u306e\u30ed\u30ac\u30fc\u3092\u4f5c\u6210\n_pubsub_logger = logging.getLogger(\"pubsubtk.pubsub\")\n\n\nclass PubSubBase(ABC):\n    \"\"\"\n    PubSub\u30d1\u30bf\u30fc\u30f3\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3002\n\n    - setup_subscriptions()\u3067\u8cfc\u8aad\u8a2d\u5b9a\u3092\u884c\u3046\u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\n    - subscribe()/send_message()/unsubscribe()/unsubscribe_all()\u3067\u8cfc\u8aad\u7ba1\u7406\n    - teardown()\u3067\u5168\u8cfc\u8aad\u89e3\u9664\n    - \u7d99\u627f\u5148\u3067\u8cfc\u8aad\u8a2d\u5b9a\u3092\u7c21\u6f54\u306b\u8a18\u8ff0\u53ef\u80fd\n    - DEBUG\u30ec\u30d9\u30eb\u3067PubSub\u64cd\u4f5c\u3092\u30ed\u30b0\u51fa\u529b\n    \"\"\"\n\n    def __init__(self, *args, **kwargs):\n        self._subscriptions: List[Dict[str, Any]] = []\n        self.setup_subscriptions()\n\n    def subscribe(self, topic: str, handler: Callable, **kwargs) -&gt; None:\n        pub.subscribe(handler, topic, **kwargs)\n        self._subscriptions.append({\"topic\": topic, \"handler\": handler})\n\n        # DEBUG\u30ed\u30b0\uff1a\u8cfc\u8aad\u767b\u9332\n        _pubsub_logger.debug(\n            f\"SUBSCRIBE: {self.__class__.__name__} -&gt; topic='{topic}', handler={handler.__name__}\"\n        )\n\n    def publish(self, topic: str, **kwargs) -&gt; None:\n        # DEBUG\u30ed\u30b0\uff1a\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\uff08\u5f15\u6570\u3082\u8868\u793a\uff09\n        args_str = \", \".join(f\"{k}={v}\" for k, v in kwargs.items())\n        _pubsub_logger.debug(\n            f\"PUBLISH: {self.__class__.__name__} -&gt; topic='{topic}'\"\n            + (f\" with args: {args_str}\" if args_str else \"\")\n        )\n\n        pub.sendMessage(topic, **kwargs)\n\n    def unsubscribe(self, topic: str, handler: Callable) -&gt; None:\n        pub.unsubscribe(handler, topic)\n        self._subscriptions = [\n            s\n            for s in self._subscriptions\n            if not (s[\"topic\"] == topic and s[\"handler\"] == handler)\n        ]\n\n        # DEBUG\u30ed\u30b0\uff1a\u8cfc\u8aad\u89e3\u9664\n        _pubsub_logger.debug(\n            f\"UNSUBSCRIBE: {self.__class__.__name__} -&gt; topic='{topic}', handler={handler.__name__}\"\n        )\n\n    def unsubscribe_all(self) -&gt; None:\n        # DEBUG\u30ed\u30b0\uff1a\u5168\u8cfc\u8aad\u89e3\u9664\n        if self._subscriptions:\n            _pubsub_logger.debug(\n                f\"UNSUBSCRIBE_ALL: {self.__class__.__name__} -&gt; {len(self._subscriptions)} subscriptions\"\n            )\n\n        for s in list(self._subscriptions):\n            pub.unsubscribe(s[\"handler\"], s[\"topic\"])\n        self._subscriptions.clear()\n\n    @abstractmethod\n    def setup_subscriptions(self) -&gt; None:\n        \"\"\"\n        \u7d99\u627f\u5148\u3067\u8cfc\u8aad\u8a2d\u5b9a\u3092\u884c\u3046\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u3002\n\n        \u4f8b:\n            class MyPS(PubSubBase):\n                def setup_subscriptions(self):\n                    self.subscribe(TopicEnum.STATE_CHANGED, self.on_change)\n        \"\"\"\n        pass\n\n    def teardown(self) -&gt; None:\n        \"\"\"\n        \u5168\u3066\u306e\u8cfc\u8aad\u3092\u89e3\u9664\u3059\u308b\u3002\n        \"\"\"\n        self.unsubscribe_all()\n\n\n# \u30c7\u30d0\u30c3\u30b0\u30ed\u30b0\u3092\u6709\u52b9\u5316\u3059\u308b\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u95a2\u6570\ndef enable_pubsub_debug_logging(level: int = logging.DEBUG) -&gt; None:\n    \"\"\"\n    PubSub\u306e\u30c7\u30d0\u30c3\u30b0\u30ed\u30b0\u3092\u6709\u52b9\u5316\u3059\u308b\u3002\n\n    Args:\n        level: \u30ed\u30b0\u30ec\u30d9\u30eb\uff08\u30c7\u30d5\u30a9\u30eb\u30c8: DEBUG\uff09\n\n    \u4f7f\u7528\u4f8b:\n        from pubsubtk.core.pubsub_base import enable_pubsub_debug_logging\n        enable_pubsub_debug_logging()\n    \"\"\"\n    _pubsub_logger.setLevel(level)\n\n    # \u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u672a\u8a2d\u5b9a\u306e\u5834\u5408\u306f\u30b3\u30f3\u30bd\u30fc\u30eb\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u8ffd\u52a0\n    if not _pubsub_logger.handlers:\n        handler = logging.StreamHandler()\n        formatter = logging.Formatter(\n            \"[%(asctime)s] %(name)s - %(levelname)s - %(message)s\", datefmt=\"%H:%M:%S\"\n        )\n        handler.setFormatter(formatter)\n        _pubsub_logger.addHandler(handler)\n\n    _pubsub_logger.debug(\"PubSub debug logging enabled\")\n\n\ndef disable_pubsub_debug_logging() -&gt; None:\n    \"\"\"\n    PubSub\u306e\u30c7\u30d0\u30c3\u30b0\u30ed\u30b0\u3092\u7121\u52b9\u5316\u3059\u308b\u3002\n    \"\"\"\n    _pubsub_logger.setLevel(logging.WARNING)\n    _pubsub_logger.debug(\"PubSub debug logging disabled\")\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#srcpubsubtkcoredefault_topic_basepy","title":"<code>src/pubsubtk/core/default_topic_base.py</code>","text":"<p>\u30c7\u30d5\u30a9\u30eb\u30c8\u30c8\u30d4\u30c3\u30af\u64cd\u4f5c\u3092\u307e\u3068\u3081\u305f\u57fa\u5e95\u30af\u30e9\u30b9</p> <pre><code># default_topic_base.py - \u30c7\u30d5\u30a9\u30eb\u30c8\u30c8\u30d4\u30c3\u30af\u64cd\u4f5c\u3092\u307e\u3068\u3081\u305f\u57fa\u5e95\u30af\u30e9\u30b9\n\n\"\"\"\nsrc/pubsubtk/core/default_topic_base.py\n\n\u4e3b\u8981\u306a PubSub \u30c8\u30d4\u30c3\u30af\u306b\u5bfe\u3059\u308b\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\"\"\"\n\nfrom __future__ import annotations\n\nfrom typing import TYPE_CHECKING, Any, Callable, Optional, Type\n\nfrom pubsubtk.core.pubsub_base import PubSubBase\nfrom pubsubtk.topic.topics import (\n    DefaultNavigateTopic,\n    DefaultProcessorTopic,\n    DefaultUndoTopic,\n    DefaultUpdateTopic,\n)\n\nif TYPE_CHECKING:\n    # \u578b\u30c1\u30a7\u30c3\u30af\u6642\uff08mypy \u3084 IDE \u88dc\u5b8c\u6642\uff09\u306e\u307f\u8aad\u307f\u8fbc\u3080\n    from pubsubtk.processor.processor_base import ProcessorBase\n    from pubsubtk.ui.types import ComponentType, ContainerComponentType\n\n\nclass PubSubDefaultTopicBase(PubSubBase):\n    \"\"\"\n    Built-in convenience methods for common PubSub operations.\n\n    **IMPORTANT**: Container and Processor components should use these built-in methods\n    instead of manually publishing to DefaultTopics. These methods are designed for\n    ease of use and provide better IDE support.\n    \"\"\"\n\n    def pub_switch_container(\n        self,\n        cls: ContainerComponentType,\n        kwargs: dict = None,\n    ) -&gt; None:\n        \"\"\"\u30b3\u30f3\u30c6\u30ca\u3092\u5207\u308a\u66ff\u3048\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n        Args:\n            cls (ContainerComponentType): \u5207\u308a\u66ff\u3048\u5148\u306e\u30b3\u30f3\u30c6\u30ca\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9\n            kwargs: \u30b3\u30f3\u30c6\u30ca\u306b\u6e21\u3059\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u7528\u8f9e\u66f8\n\n        Note:\n            \u30b3\u30f3\u30c6\u30ca\u306f\u3001TkApplication\u307e\u305f\u306fTtkApplication\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u6307\u5b9a\u3055\u308c\u305f\n            \u89aa\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306e\u5b50\u3068\u3057\u3066\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002\n        \"\"\"\n        self.publish(DefaultNavigateTopic.SWITCH_CONTAINER, cls=cls, kwargs=kwargs)\n\n    def pub_switch_slot(\n        self,\n        slot_name: str,\n        cls: ComponentType,\n        kwargs: dict = None,\n    ) -&gt; None:\n        \"\"\"\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u7279\u5b9a\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u5207\u308a\u66ff\u3048\u308b\u3002\n\n        Args:\n            slot_name (str): \u30b9\u30ed\u30c3\u30c8\u540d\n            cls (ComponentType): \u30b3\u30f3\u30c6\u30ca\u307e\u305f\u306f\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30ca\u30eb\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9\n            kwargs: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u6e21\u3059\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u7528\u8f9e\u66f8\n\n        Note:\n            ContainerComponent\u3068PresentationalComponent\u306e\u4e21\u65b9\u306b\u5bfe\u5fdc\u3002\n            \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n        \"\"\"\n        self.publish(\n            DefaultNavigateTopic.SWITCH_SLOT,\n            slot_name=slot_name,\n            cls=cls,\n            kwargs=kwargs,\n        )\n\n    def pub_open_subwindow(\n        self,\n        cls: ComponentType,\n        win_id: Optional[str] = None,\n        kwargs: dict = None,\n    ) -&gt; None:\n        \"\"\"\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304fPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n        Args:\n            cls (ComponentType): \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u8868\u793a\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9\n            win_id (Optional[str], optional): \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306eID\u3002\n                \u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\u3002\n                \u540c\u3058ID\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u65e2\u5b58\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u518d\u5229\u7528\u3055\u308c\u308b\u3002\n            kwargs: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u6e21\u3059\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u7528\u8f9e\u66f8\n\n        Note:\n            \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306f\u3001Toplevel \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3068\u3057\u3066\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n        \"\"\"\n        self.publish(\n            DefaultNavigateTopic.OPEN_SUBWINDOW, cls=cls, win_id=win_id, kwargs=kwargs\n        )\n\n    def pub_close_subwindow(self, win_id: str) -&gt; None:\n        \"\"\"\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n        Args:\n            win_id (str): \u9589\u3058\u308b\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306eID\n        \"\"\"\n        self.publish(DefaultNavigateTopic.CLOSE_SUBWINDOW, win_id=win_id)\n\n    def pub_close_all_subwindows(self) -&gt; None:\n        \"\"\"\u3059\u3079\u3066\u306e\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\"\"\"\n        self.publish(DefaultNavigateTopic.CLOSE_ALL_SUBWINDOWS)\n\n    def pub_replace_state(self, new_state: Any) -&gt; None:\n        \"\"\"\u72b6\u614b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5168\u4f53\u3092\u7f6e\u304d\u63db\u3048\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n        Args:\n            new_state: \u65b0\u3057\u3044\u72b6\u614b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\n        \"\"\"\n        self.publish(DefaultUpdateTopic.REPLACE_STATE, new_state=new_state)\n\n    def pub_update_state(self, state_path: str, new_value: Any) -&gt; None:\n        \"\"\"\n        Store\u306e\u72b6\u614b\u3092\u66f4\u65b0\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n        Args:\n            state_path (str): \u66f4\u65b0\u3059\u308b\u72b6\u614b\u306e\u30d1\u30b9\uff08\u4f8b: \"user.name\", \"items[2].value\"\uff09\n            new_value (Any): \u65b0\u3057\u3044\u5024\n\n        Note:\n            **RECOMMENDED**: Use store.state proxy for type-safe paths with IDE support:\n            `self.pub_update_state(str(self.store.state.user.name), \"\u65b0\u3057\u3044\u540d\u524d\")`\n            The state proxy provides autocomplete and \"Go to Definition\" functionality.\n        \"\"\"\n        self.publish(\n            DefaultUpdateTopic.UPDATE_STATE,\n            state_path=str(state_path),\n            new_value=new_value,\n        )\n\n    def pub_add_to_list(self, state_path: str, item: Any) -&gt; None:\n        \"\"\"\n        Store\u306e\u72b6\u614b\uff08\u30ea\u30b9\u30c8\uff09\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n        Args:\n            state_path (str): \u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u30ea\u30b9\u30c8\u306e\u72b6\u614b\u30d1\u30b9\uff08\u4f8b: \"items\", \"user.tasks\"\uff09\n            item (Any): \u8ffd\u52a0\u3059\u308b\u8981\u7d20\n\n        Note:\n            **RECOMMENDED**: Use store.state proxy for type-safe paths with IDE support:\n            `self.pub_add_to_list(str(self.store.state.items), new_item)`\n            The state proxy provides autocomplete and \"Go to Definition\" functionality.\n        \"\"\"\n        self.publish(\n            DefaultUpdateTopic.ADD_TO_LIST, state_path=str(state_path), item=item\n        )\n\n    def pub_add_to_dict(self, state_path: str, key: str, value: Any) -&gt; None:\n        \"\"\"Store\u306e\u72b6\u614b(\u8f9e\u66f8)\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n        Args:\n            state_path: \u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u8f9e\u66f8\u306e\u72b6\u614b\u30d1\u30b9\u3002\n            key: \u8ffd\u52a0\u3059\u308b\u30ad\u30fc\u3002\n            value: \u8ffd\u52a0\u3059\u308b\u5024\u3002\n\n        Note:\n            **RECOMMENDED**: Use store.state proxy for type-safe paths with IDE support:\n            `self.pub_add_to_dict(str(self.store.state.mapping), \"k\", v)`\n        \"\"\"\n        self.publish(\n            DefaultUpdateTopic.ADD_TO_DICT,\n            state_path=str(state_path),\n            key=key,\n            value=value,\n        )\n\n    def pub_register_processor(\n        self,\n        proc: Type[ProcessorBase],\n        name: Optional[str] = None,\n    ) -&gt; None:\n        \"\"\"Processor\u3092\u767b\u9332\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n        Args:\n            proc (Type[ProcessorBase]): \u767b\u9332\u3059\u308bProcessor\u30af\u30e9\u30b9\n            name (Optional[str], optional): Processor\u306e\u540d\u524d\u3002\n                \u7701\u7565\u3057\u305f\u5834\u5408\u306f\u30af\u30e9\u30b9\u540d\u304c\u4f7f\u7528\u3055\u308c\u308b\u3002Defaults to None.\n\n        Note:\n            \u767b\u9332\u3055\u308c\u305fProcessor\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u901a\u3058\u3066\u6709\u52b9\u3067\u3059\u3002\n        \"\"\"\n        self.publish(DefaultProcessorTopic.REGISTER_PROCESSOR, proc=proc, name=name)\n\n    def pub_delete_processor(self, name: str) -&gt; None:\n        \"\"\"\u6307\u5b9a\u3057\u305f\u540d\u524d\u306eProcessor\u3092\u524a\u9664\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n        Args:\n            name (str): \u524a\u9664\u3059\u308bProcessor\u306e\u540d\u524d\n        \"\"\"\n        self.publish(DefaultProcessorTopic.DELETE_PROCESSOR, name=name)\n\n    # --- Undo/Redo ---------------------------------------------------------\n\n    def pub_enable_undo_redo(self, state_path: str, max_history: int = 10) -&gt; None:\n        \"\"\"\u6307\u5b9a\u3057\u305fstate path\u306b\u5bfe\u3057\u3066Undo/Redo\u6a5f\u80fd\u3092\u6709\u52b9\u5316\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n        Args:\n            state_path (str): Undo/Redo\u5bfe\u8c61\u306e\u72b6\u614b\u30d1\u30b9\uff08\u4f8b: \"counter\", \"user.name\"\uff09\n            max_history (int, optional): \u4fdd\u6301\u3059\u308b\u5c65\u6b74\u306e\u6700\u5927\u6570\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f10\u3002\n                \u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u3092\u5236\u5fa1\u3057\u305f\u3044\u5834\u5408\u306b\u8abf\u6574\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n        Note:\n            **RECOMMENDED**: Use store.state proxy for type-safe paths with IDE support:\n            `self.pub_enable_undo_redo(str(self.store.state.counter), max_history=50)`\n            The state proxy provides autocomplete and \"Go to Definition\" functionality.\n\n            \u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u6307\u5b9a\u3055\u308c\u305f\u30d1\u30b9\u306e\u73fe\u5728\u306e\u5024\u304c\u521d\u671f\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3068\u3057\u3066\n            \u5c65\u6b74\u306b\u8a18\u9332\u3055\u308c\u3001\u4ee5\u964d\u306e\u5909\u66f4\u304c\u8ffd\u8de1\u3055\u308c\u307e\u3059\u3002\n        \"\"\"\n        self.publish(\n            DefaultUndoTopic.ENABLE_UNDO_REDO,\n            state_path=str(state_path),\n            max_history=max_history,\n        )\n\n    def pub_disable_undo_redo(self, state_path: str) -&gt; None:\n        \"\"\"\u6307\u5b9a\u3057\u305fstate path\u306eUndo/Redo\u6a5f\u80fd\u3092\u7121\u52b9\u5316\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n        Args:\n            state_path (str): \u7121\u52b9\u5316\u3059\u308b\u72b6\u614b\u30d1\u30b9\n\n        Note:\n            **RECOMMENDED**: Use store.state proxy for type-safe paths with IDE support:\n            `self.pub_disable_undo_redo(str(self.store.state.counter))`\n\n            \u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u6307\u5b9a\u3055\u308c\u305f\u30d1\u30b9\u306e\u5c65\u6b74\u30c7\u30fc\u30bf\u304c\u5b8c\u5168\u306b\u524a\u9664\u3055\u308c\u3001\n            \u30e1\u30e2\u30ea\u304c\u89e3\u653e\u3055\u308c\u307e\u3059\u3002\u518d\u5ea6\u6709\u52b9\u5316\u3057\u305f\u3044\u5834\u5408\u306fpub_enable_undo_redo\u3092\n            \u547c\u3073\u51fa\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n        \"\"\"\n        self.publish(DefaultUndoTopic.DISABLE_UNDO_REDO, state_path=str(state_path))\n\n    def pub_undo(self, state_path: str) -&gt; None:\n        \"\"\"\u6307\u5b9a\u3057\u305fstate path\u306e\u72b6\u614b\u30921\u3064\u524d\u306e\u5024\u306b\u623b\u3059PubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n        Args:\n            state_path (str): Undo\u3092\u5b9f\u884c\u3059\u308b\u72b6\u614b\u30d1\u30b9\n\n        Note:\n            **RECOMMENDED**: Use store.state proxy for type-safe paths with IDE support:\n            `self.pub_undo(str(self.store.state.counter))`\n\n            \u5c65\u6b74\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3084\u3001\u65e2\u306b\u6700\u521d\u306e\u72b6\u614b\u306e\u5834\u5408\u306f\u4f55\u3082\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002\n            Undo\u3055\u308c\u305f\u5909\u66f4\u306fRedo\u3067\u5143\u306b\u623b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n        \"\"\"\n        self.publish(DefaultUndoTopic.UNDO, state_path=str(state_path))\n\n    def pub_redo(self, state_path: str) -&gt; None:\n        \"\"\"\u6307\u5b9a\u3057\u305fstate path\u306eUndo\u3092\u53d6\u308a\u6d88\u3059PubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n        Args:\n            state_path (str): Redo\u3092\u5b9f\u884c\u3059\u308b\u72b6\u614b\u30d1\u30b9\n\n        Note:\n            **RECOMMENDED**: Use store.state proxy for type-safe paths with IDE support:\n            `self.pub_redo(str(self.store.state.counter))`\n\n            Redo\u53ef\u80fd\u306a\u5c65\u6b74\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u4f55\u3082\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002\n            \u65b0\u3057\u3044\u5909\u66f4\u304c\u884c\u308f\u308c\u308b\u3068Redo\u5c65\u6b74\u306f\u30af\u30ea\u30a2\u3055\u308c\u307e\u3059\u3002\n        \"\"\"\n        self.publish(DefaultUndoTopic.REDO, state_path=str(state_path))\n\n    def sub_undo_status(\n        self, state_path: str, handler: Callable[[bool, bool, int, int], None]\n    ) -&gt; None:\n        \"\"\"\n        \u6307\u5b9a\u3057\u305f state path \u306e Undo/Redo \u72b6\u614b\u5909\u5316\u3092\u8cfc\u8aad\u3059\u308b\u3002\n\n        \u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u5f15\u6570\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\uff1a\n            - can_undo (bool): Undo \u5b9f\u884c\u53ef\u80fd\u304b\u3069\u3046\u304b\n            - can_redo (bool): Redo \u5b9f\u884c\u53ef\u80fd\u304b\u3069\u3046\u304b\n            - undo_count (int): \u5b9f\u884c\u53ef\u80fd\u306a Undo \u56de\u6570\n            - redo_count (int): \u5b9f\u884c\u53ef\u80fd\u306a Redo \u56de\u6570\n\n        Args:\n            state_path (str): \u76e3\u8996\u3059\u308b\u72b6\u614b\u30d1\u30b9\n            handler (Callable[[bool, bool, int, int], None]): \u72b6\u614b\u5909\u5316\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n\n        Note:\n            \u63a8\u5968: store.state \u30d7\u30ed\u30ad\u30b7\u3092\u5229\u7528\u3059\u308b\u3068 IDE \u88dc\u5b8c\u3084\u4e00\u8cab\u3057\u305f\u30d1\u30b9\u6307\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002\n            \u4f8b: `self.sub_undo_status(self.store.state.counter, self.on_undo_status_changed)`\n        \"\"\"\n\n        self.subscribe(f\"{DefaultUndoTopic.STATUS_CHANGED}.{str(state_path)}\", handler)\n\n    def sub_state_changed(\n        self, state_path: str, handler: Callable[[Any, Any], None]\n    ) -&gt; None:\n        \"\"\"\n        \u72b6\u614b\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306e\u901a\u77e5\u3092\u8cfc\u8aad\u3059\u308b\u3002\n\n        \u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u5f15\u6570\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\uff1a\n            - old_value (Any): \u5909\u66f4\u524d\u306e\u5024\n            - new_value (Any): \u5909\u66f4\u5f8c\u306e\u5024\n\n        Args:\n            state_path (str): \u76e3\u8996\u3059\u308b\u72b6\u614b\u306e\u30d1\u30b9\uff08\u4f8b: \"user.name\", \"items[2].value\"\uff09\n            handler (Callable[[Any, Any], None]): \u5909\u66f4\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n\n        Note:\n            \u63a8\u5968: store.state \u30d7\u30ed\u30ad\u30b7\u3092\u5229\u7528\u3057\u3066\u4e00\u8cab\u3057\u305f\u30d1\u30b9\u6307\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002\n            \u4f8b: `self.sub_state_changed(self.store.state.user.name, self.on_name_changed)`\n        \"\"\"\n\n        self.subscribe(f\"{DefaultUpdateTopic.STATE_CHANGED}.{str(state_path)}\", handler)\n\n    def sub_for_refresh(self, state_path: str, handler: Callable[[], None]) -&gt; None:\n        \"\"\"\n        \u72b6\u614b\u304c\u66f4\u65b0\u3055\u308c\u305f\u3068\u304d\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u901a\u77e5\uff08UI\u518d\u63cf\u753b\u7528\uff09\u3092\u8cfc\u8aad\u3059\u308b\u3002\n\n        \u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u5f15\u6570\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\uff1a\n            - \u306a\u3057\n\n        Args:\n            state_path (str): \u76e3\u8996\u3059\u308b\u72b6\u614b\u306e\u30d1\u30b9\n            handler (Callable[[], None]): \u66f4\u65b0\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u5f15\u6570\u306a\u3057\u306e\u95a2\u6570\n\n        Note:\n            \u63a8\u5968: store.state \u30d7\u30ed\u30ad\u30b7\u3092\u5229\u7528\u3057\u3066\u4e00\u8cab\u3057\u305f\u30d1\u30b9\u6307\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002\n            \u4f8b: `self.sub_for_refresh(self.store.state.user.name, self.refresh_ui)`\n        \"\"\"\n\n        self.subscribe(f\"{DefaultUpdateTopic.STATE_UPDATED}.{str(state_path)}\", handler)\n\n    def sub_state_added(\n        self, state_path: str, handler: Callable[[Any, int], None]\n    ) -&gt; None:\n        \"\"\"\n        \u30ea\u30b9\u30c8\u306b\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c\u305f\u3068\u304d\u306e\u901a\u77e5\u3092\u8cfc\u8aad\u3059\u308b\u3002\n\n        \u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u5f15\u6570\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\uff1a\n            - item (Any): \u8ffd\u52a0\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0\n            - index (int): \u8ffd\u52a0\u3055\u308c\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n\n        Args:\n            state_path (str): \u76e3\u8996\u3059\u308b\u30ea\u30b9\u30c8\u72b6\u614b\u306e\u30d1\u30b9\n            handler (Callable[[Any, int], None]): \u8981\u7d20\u8ffd\u52a0\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n\n        Note:\n            \u63a8\u5968: store.state \u30d7\u30ed\u30ad\u30b7\u3092\u5229\u7528\u3057\u3066\u4e00\u8cab\u3057\u305f\u30d1\u30b9\u6307\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002\n            \u4f8b: `self.sub_state_added(self.store.state.items, self.on_item_added)`\n        \"\"\"\n\n        self.subscribe(f\"{DefaultUpdateTopic.STATE_ADDED}.{str(state_path)}\", handler)\n\n    def sub_dict_item_added(\n        self, state_path: str, handler: Callable[[str, Any], None]\n    ) -&gt; None:\n        \"\"\"\n        \u8f9e\u66f8\u306b\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c\u305f\u3068\u304d\u306e\u901a\u77e5\u3092\u8cfc\u8aad\u3059\u308b\u3002\n\n        \u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u5f15\u6570\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\uff1a\n            - key (str): \u8ffd\u52a0\u3055\u308c\u305f\u30ad\u30fc\n            - value (Any): \u8ffd\u52a0\u3055\u308c\u305f\u5024\n\n        Args:\n            state_path (str): \u76e3\u8996\u3059\u308b\u8f9e\u66f8\u72b6\u614b\u306e\u30d1\u30b9\n            handler (Callable[[str, Any], None]): \u8ffd\u52a0\u3055\u308c\u305f\u30ad\u30fc\u3068\u5024\u3092\u5f15\u6570\u306b\u53d6\u308b\u95a2\u6570\n\n        Note:\n            \u63a8\u5968: store.state \u30d7\u30ed\u30ad\u30b7\u3092\u5229\u7528\u3057\u3066\u4e00\u8cab\u3057\u305f\u30d1\u30b9\u6307\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002\n            \u4f8b: `self.sub_dict_item_added(self.store.state.mapping, self.on_added)`\n        \"\"\"\n\n        self.subscribe(\n            f\"{DefaultUpdateTopic.DICT_ADDED}.{str(state_path)}\",\n            handler,\n        )\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#_14","title":"\u30c8\u30d4\u30c3\u30af\u30b7\u30b9\u30c6\u30e0","text":""},{"location":"ai-reference/REFERENCE_FULL/#srcpubsubtktopictopicspy","title":"<code>src/pubsubtk/topic/topics.py</code>","text":"<p>PubSub \u30c8\u30d4\u30c3\u30af\u5217\u6319\u578b\u306e\u5b9a\u7fa9</p> <pre><code># topics.py - PubSub \u30c8\u30d4\u30c3\u30af\u5217\u6319\u578b\u306e\u5b9a\u7fa9\n\n\"\"\"\nsrc/pubsubtk/topic/topics.py\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u4f7f\u7528\u3059\u308b PubSub \u30c8\u30d4\u30c3\u30af\u5217\u6319\u578b\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\"\"\"\n\nfrom enum import StrEnum, auto\n\n\nclass AutoNamedTopic(StrEnum):\n    \"\"\"\n    Enum\u30e1\u30f3\u30d0\u30fc\u540d\u3092\u81ea\u52d5\u3067\u5c0f\u6587\u5b57\u5316\u3057\u3001\u30af\u30e9\u30b9\u540d\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u4ed8\u304d\u6587\u5b57\u5217\u3092\u5024\u3068\u3059\u308b\u5217\u6319\u578b\u3002\n\n    - \u30e1\u30f3\u30d0\u30fc\u5024\u306f \"ClassName.member\" \u5f62\u5f0f\u306e\u6587\u5b57\u5217\n    - str()\u3084\u6bd4\u8f03\u3067\u305d\u306e\u307e\u307e\u5229\u7528\u53ef\u80fd\n    \"\"\"\n\n    def _generate_next_value_(name, start, count, last_values):\n        return name.lower()\n\n    def __new__(cls, value):\n        # \u3053\u3053\u3067\u30af\u30e9\u30b9\u540d\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u8ffd\u52a0\n        full = f\"{cls.__name__}.{value}\"\n        obj = str.__new__(cls, full)\n        obj._value_ = full\n        return obj\n\n    def __str__(self):\n        return self.value\n\n\nclass DefaultNavigateTopic(AutoNamedTopic):\n    \"\"\"\n    \u6a19\u6e96\u7684\u306a\u753b\u9762\u9077\u79fb\u30fb\u30a6\u30a3\u30f3\u30c9\u30a6\u64cd\u4f5c\u7528\u306ePubSub\u30c8\u30d4\u30c3\u30af\u5217\u6319\u578b\u3002\n    \"\"\"\n\n    SWITCH_CONTAINER = auto()\n    SWITCH_SLOT = auto()\n    OPEN_SUBWINDOW = auto()\n    CLOSE_SUBWINDOW = auto()\n    CLOSE_ALL_SUBWINDOWS = auto()\n\n\nclass DefaultUpdateTopic(AutoNamedTopic):\n    \"\"\"\n    \u6a19\u6e96\u7684\u306a\u72b6\u614b\u66f4\u65b0\u901a\u77e5\u7528\u306ePubSub\u30c8\u30d4\u30c3\u30af\u5217\u6319\u578b\u3002\n    \"\"\"\n\n    UPDATE_STATE = auto()\n    ADD_TO_LIST = auto()\n    ADD_TO_DICT = auto()\n    REPLACE_STATE = auto()\n    STATE_CHANGED = auto()\n    STATE_ADDED = auto()\n    STATE_UPDATED = auto()\n    DICT_ADDED = auto()\n\n\nclass DefaultProcessorTopic(AutoNamedTopic):\n    \"\"\"\n    \u6a19\u6e96\u7684\u306a\u30d7\u30ed\u30bb\u30c3\u30b5\u7ba1\u7406\u306ePubSub\u30c8\u30d4\u30c3\u30af\u5217\u6319\u578b\u3002\n    \"\"\"\n\n    REGISTER_PROCESSOR = auto()\n    DELETE_PROCESSOR = auto()\n\n\nclass DefaultUndoTopic(AutoNamedTopic):\n    \"\"\"\n    Undo/Redo\u6a5f\u80fd\u7528\u306ePubSub\u30c8\u30d4\u30c3\u30af\u5217\u6319\u578b\u3002\n    \"\"\"\n\n    ENABLE_UNDO_REDO = auto()\n    DISABLE_UNDO_REDO = auto()\n    UNDO = auto()\n    REDO = auto()\n    STATUS_CHANGED = auto()\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#state","title":"State\u7ba1\u7406","text":""},{"location":"ai-reference/REFERENCE_FULL/#srcpubsubtkstorestorepy","title":"<code>src/pubsubtk/store/store.py</code>","text":"<p>Pydantic \u30e2\u30c7\u30eb\u3092\u7528\u3044\u305f\u578b\u5b89\u5168\u306a\u72b6\u614b\u7ba1\u7406</p> <pre><code># store.py - \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u72b6\u614b\u3092\u7ba1\u7406\u3059\u308b\u30af\u30e9\u30b9\n\n\"\"\"\nsrc/pubsubtk/store/store.py\n\nPydantic \u30e2\u30c7\u30eb\u3092\u7528\u3044\u305f\u578b\u5b89\u5168\u306a\u72b6\u614b\u7ba1\u7406\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\"\"\"\n\nimport copy\nfrom collections import defaultdict\nfrom typing import Any, Generic, Type, TypeVar, cast\n\nfrom pydantic import BaseModel\n\nfrom pubsubtk.core.pubsub_base import PubSubBase\nfrom pubsubtk.topic.topics import DefaultUndoTopic, DefaultUpdateTopic\n\nTState = TypeVar(\"TState\", bound=BaseModel)\n\n\nclass StateProxy(Generic[TState]):\n    \"\"\"\n    Store\u306estate\u5c5e\u6027\u306b\u5bfe\u3059\u308b\u52d5\u7684\u306a\u30d1\u30b9\u30a2\u30af\u30bb\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u30d7\u30ed\u30ad\u30b7\u3002\n\n    - store.state.foo.bar \u306e\u3088\u3046\u306a\u30c9\u30c3\u30c8\u8a18\u6cd5\u3067\u30cd\u30b9\u30c8\u5c5e\u6027\u3078\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\n    - \u5b58\u5728\u3057\u306a\u3044\u5c5e\u6027\u30a2\u30af\u30bb\u30b9\u6642\u306f AttributeError \u3092\u9001\u51fa\n    - __repr__ \u3067\u30d1\u30b9\u6587\u5b57\u5217\u3092\u8fd4\u3059\n    \"\"\"\n\n    def __init__(self, store: \"Store[TState]\", path: str = \"\"):\n        \"\"\"StateProxy \u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n        Args:\n            store: \u5024\u3092\u53c2\u7167\u3059\u308b\u5bfe\u8c61 ``Store``\u3002\n            path: \u73fe\u5728\u306e\u30d1\u30b9\u6587\u5b57\u5217\u3002\n        \"\"\"\n\n        self._store = store\n        self._path = path\n\n    def __getattr__(self, name: str) -&gt; \"StateProxy[TState]\":\n        \"\"\"\u5c5e\u6027\u30a2\u30af\u30bb\u30b9\u3092\u9023\u7d50\u3057\u305f ``StateProxy`` \u3092\u8fd4\u3059\u3002\"\"\"\n\n        new_path = f\"{self._path}.{name}\" if self._path else name\n\n        # \u5b58\u5728\u30c1\u30a7\u30c3\u30af\uff1aTState \u30e2\u30c7\u30eb\u306b new_path \u304c\u901a\u308b\u304b\u78ba\u8a8d\n        cur = self._store.get_current_state()\n        for seg in new_path.split(\".\"):\n            if hasattr(cur, seg):\n                cur = getattr(cur, seg)\n            else:\n                raise AttributeError(f\"No such property: store.state.{new_path}\")\n\n        return StateProxy(self._store, new_path)\n\n    def __repr__(self) -&gt; str:\n        \"\"\"State\u578b\u540d\u3092\u542b\u3080\u30d1\u30b9\u6587\u5b57\u5217\u3092\u8fd4\u3059\u3002\"\"\"\n\n        prefix = self._store._state_class.__name__\n        return f\"{prefix}.{self._path}\" if self._path else prefix\n\n    __str__ = __repr__\n\n\nclass Store(PubSubBase, Generic[TState]):\n    \"\"\"\n    \u578b\u5b89\u5168\u306a\u72b6\u614b\u7ba1\u7406\u3092\u63d0\u4f9b\u3059\u308b\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306aStore\u30af\u30e9\u30b9\u3002\n\n    - Pydantic\u30e2\u30c7\u30eb\u3092\u72b6\u614b\u3068\u3057\u3066\u4fdd\u6301\u3057\u3001\u72b6\u614b\u64cd\u4f5c\u3092\u63d0\u4f9b\n    - get_current_state()\u3067\u72b6\u614b\u306e\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u3092\u53d6\u5f97\n    - update_state()/add_to_list()/add_to_dict()\u3067\u72b6\u614b\u3092\u66f4\u65b0\u3057\u3001PubSub\u3067\u901a\u77e5\n    - `store.state.count` \u306e\u3088\u3046\u306a\u30d1\u30b9\u30d7\u30ed\u30ad\u30b7\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\n      `store.update_state(store.state.count, 1)` \u306e\u3088\u3046\u306bIDE\u306e\u300c\u5b9a\u7fa9\u3078\u79fb\u52d5\u300d\u3084\u88dc\u5b8c\u6a5f\u80fd\u3092\u6d3b\u7528\u3057\u3064\u3064\u3001\n      \u72b6\u614b\u66f4\u65b0\u306e\u30d1\u30b9\u3092\u5b89\u5168\u30fb\u660e\u793a\u7684\u306b\u6307\u5b9a\u3067\u304d\u308b\uff08\u5f93\u6765\u306e\u6587\u5b57\u5217\u30d1\u30b9\u6307\u5b9a\u306e\u5f31\u70b9\u3092\u89e3\u6d88\uff09\n    \"\"\"\n\n    def __init__(self, initial_state_class: Type[TState]):\n        \"\"\"Store \u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n        Args:\n            initial_state_class: \u7ba1\u7406\u5bfe\u8c61\u3068\u306a\u308b ``BaseModel`` \u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3002\n        \"\"\"\n        self._state_class = initial_state_class\n        self._state = initial_state_class()\n\n        # Undo/Redo \u5c65\u6b74\u7ba1\u7406\u7528\u30d5\u30a3\u30fc\u30eb\u30c9\n        self._undo_enabled: set[str] = set()  # \u8ffd\u8de1\u5bfe\u8c61\u30d1\u30b9\n        self._undo_stacks: dict[str, list] = defaultdict(list)  # \u30d1\u30b9\u5225Undo\u30b9\u30bf\u30c3\u30af\n        self._redo_stacks: dict[str, list] = defaultdict(list)  # \u30d1\u30b9\u5225Redo\u30b9\u30bf\u30c3\u30af\n        self._max_histories: dict[str, int] = {}  # \u30d1\u30b9\u5225\u5c65\u6b74\u4e0a\u9650\n        self._during_ur_op: bool = False  # Undo/Redo\u64cd\u4f5c\u4e2d\u306e\u518d\u5e30\u6291\u5236\u30d5\u30e9\u30b0\n\n        # PubSubBase.__init__()\u3092\u547c\u3073\u51fa\u3057\u3066\u8cfc\u8aad\u8a2d\u5b9a\u3092\u6709\u52b9\u5316\n        super().__init__()\n\n    def setup_subscriptions(self):\n        # \u65e2\u5b58\u306e\u72b6\u614b\u66f4\u65b0\u7cfb\u30c8\u30d4\u30c3\u30af\n        self.subscribe(DefaultUpdateTopic.UPDATE_STATE, self.update_state)\n        self.subscribe(DefaultUpdateTopic.REPLACE_STATE, self.replace_state)\n        self.subscribe(DefaultUpdateTopic.ADD_TO_LIST, self.add_to_list)\n        self.subscribe(DefaultUpdateTopic.ADD_TO_DICT, self.add_to_dict)\n\n        # Undo/Redo\u7cfb\u30c8\u30d4\u30c3\u30af\n        self.subscribe(DefaultUndoTopic.ENABLE_UNDO_REDO, self._enable_undo_redo)\n        self.subscribe(DefaultUndoTopic.DISABLE_UNDO_REDO, self._disable_undo_redo)\n        self.subscribe(DefaultUndoTopic.UNDO, self._undo)\n        self.subscribe(DefaultUndoTopic.REDO, self._redo)\n\n    @property\n    def state(self) -&gt; TState:\n        \"\"\"\n        \u72b6\u614b\u3078\u306e\u52d5\u7684\u30d1\u30b9\u30a2\u30af\u30bb\u30b9\u7528\u30d7\u30ed\u30ad\u30b7\u3092\u8fd4\u3059\u3002\n        \"\"\"\n        return cast(TState, StateProxy(self))\n\n    def get_current_state(self) -&gt; TState:\n        \"\"\"\n        \u73fe\u5728\u306e\u72b6\u614b\u306e\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u3092\u8fd4\u3059\u3002\n        \"\"\"\n        return self._state.model_copy(deep=True)\n\n    def replace_state(self, new_state: TState) -&gt; None:\n        \"\"\"\u72b6\u614b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5168\u4f53\u3092\u7f6e\u304d\u63db\u3048\u3001\u5168\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5909\u66f4\u901a\u77e5\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n        Args:\n            new_state: \u65b0\u3057\u3044\u72b6\u614b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\n        \"\"\"\n        if not isinstance(new_state, self._state_class):\n            raise TypeError(f\"new_state must be an instance of {self._state_class}\")\n\n        old_state = self._state\n        self._state = new_state.model_copy(deep=True)\n\n        # \u5168\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5909\u66f4\u901a\u77e5\u3092\u9001\u4fe1\n        for field_name in self._state_class.model_fields.keys():\n            old_value = getattr(old_state, field_name)\n            new_value = getattr(self._state, field_name)\n\n            self.publish(\n                f\"{DefaultUpdateTopic.STATE_CHANGED}.{field_name}\",\n                old_value=old_value,\n                new_value=new_value,\n            )\n            self.publish(f\"{DefaultUpdateTopic.STATE_UPDATED}.{field_name}\")\n\n    def update_state(self, state_path: str, new_value: Any) -&gt; None:\n        \"\"\"\u6307\u5b9a\u30d1\u30b9\u306e\u5c5e\u6027\u3092\u66f4\u65b0\u3057\u3001\u5909\u66f4\u901a\u77e5\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n        Args:\n            state_path: \u5909\u66f4\u5bfe\u8c61\u306e\u5c5e\u6027\u30d1\u30b9\uff08\u4f8b: ``\"foo.bar\"``\uff09\u3002\n            new_value: \u65b0\u3057\u304f\u8a2d\u5b9a\u3059\u308b\u5024\u3002\n        \"\"\"\n        try:\n            target_obj, attr_name, old_value = self._resolve_path(str(state_path))\n        except ValueError:\n            return\n\n        # Undo\u5c65\u6b74\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\uff08\u65e2\u5b58\u306e\u5024\u3092\u8a18\u9332\uff09\n        self._capture_for_undo(str(state_path), old_value)\n\n        # \u65b0\u3057\u3044\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u524d\u306b\u578b\u30c1\u30a7\u30c3\u30af\n        self._validate_and_set_value(target_obj, attr_name, new_value)\n\n        # \u8a73\u7d30\u306a\u5909\u66f4\u901a\u77e5\uff08old_value, new_value\u3092\u542b\u3080\uff09\n        self.publish(\n            f\"{DefaultUpdateTopic.STATE_CHANGED}.{state_path}\",\n            old_value=old_value,\n            new_value=new_value,\n        )\n\n        # \u30b7\u30f3\u30d7\u30eb\u306a\u66f4\u65b0\u901a\u77e5\uff08\u5f15\u6570\u306a\u3057\uff09\n        self.publish(f\"{DefaultUpdateTopic.STATE_UPDATED}.{state_path}\")\n\n    def add_to_list(self, state_path: str, item: Any) -&gt; None:\n        \"\"\"\u30ea\u30b9\u30c8\u5c5e\u6027\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u3001\u8ffd\u52a0\u901a\u77e5\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n        Args:\n            state_path: \u8ffd\u52a0\u5148\u3068\u306a\u308b\u30ea\u30b9\u30c8\u306e\u5c5e\u6027\u30d1\u30b9\u3002\n            item: \u8ffd\u52a0\u3059\u308b\u8981\u7d20\u3002\n        \"\"\"\n        try:\n            target_obj, attr_name, current_list = self._resolve_path(str(state_path))\n        except ValueError:\n            return\n\n        if not isinstance(current_list, list):\n            raise TypeError(f\"Property at '{state_path}' is not a list\")\n\n        # Undo\u5c65\u6b74\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\uff08\u65e2\u5b58\u306e\u30ea\u30b9\u30c8\u3092\u8a18\u9332\uff09\n        self._capture_for_undo(str(state_path), current_list)\n\n        # \u30ea\u30b9\u30c8\u3092\u30b3\u30d4\u30fc\u3057\u3066\u65b0\u3057\u3044\u8981\u7d20\u3092\u8ffd\u52a0\n        new_list = current_list.copy()\n        new_list.append(item)\n\n        # \u65b0\u3057\u3044\u30ea\u30b9\u30c8\u3067\u66f4\u65b0\n        self._validate_and_set_value(target_obj, attr_name, new_list)\n\n        index = len(new_list) - 1\n\n        self.publish(\n            f\"{DefaultUpdateTopic.STATE_ADDED}.{state_path}\",\n            item=item,\n            index=index,\n        )\n\n        # \u30ea\u30b9\u30c8\u8ffd\u52a0\u3067\u3082\u66f4\u65b0\u901a\u77e5\u3092\u9001\u4fe1\n        self.publish(f\"{DefaultUpdateTopic.STATE_UPDATED}.{state_path}\")\n\n    def add_to_dict(self, state_path: str, key: str, value: Any) -&gt; None:\n        \"\"\"\u8f9e\u66f8\u5c5e\u6027\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u3001\u8ffd\u52a0\u901a\u77e5\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n        Args:\n            state_path: \u8ffd\u52a0\u5148\u3068\u306a\u308b\u8f9e\u66f8\u306e\u5c5e\u6027\u30d1\u30b9\u3002\n            key: \u8ffd\u52a0\u3059\u308b\u30ad\u30fc\u3002\n            value: \u8ffd\u52a0\u3059\u308b\u5024\u3002\n        \"\"\"\n        try:\n            target_obj, attr_name, current_dict = self._resolve_path(str(state_path))\n        except ValueError:\n            return\n\n        if not isinstance(current_dict, dict):\n            raise TypeError(f\"Property at '{state_path}' is not a dict\")\n\n        # Undo\u5c65\u6b74\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\uff08\u65e2\u5b58\u306e\u8f9e\u66f8\u3092\u8a18\u9332\uff09\n        self._capture_for_undo(str(state_path), current_dict)\n\n        new_dict = current_dict.copy()\n        new_dict[key] = value\n\n        self._validate_and_set_value(target_obj, attr_name, new_dict)\n\n        self.publish(\n            f\"{DefaultUpdateTopic.DICT_ADDED}.{state_path}\",\n            key=key,\n            value=value,\n        )\n\n        # \u8f9e\u66f8\u8ffd\u52a0\u3067\u3082\u66f4\u65b0\u901a\u77e5\u3092\u9001\u4fe1\n        self.publish(f\"{DefaultUpdateTopic.STATE_UPDATED}.{state_path}\")\n\n    # --- Undo/Redo \u5c65\u6b74\u7ba1\u7406\u6a5f\u80fd ---\n\n    def _enable_undo_redo(self, state_path: str, max_history: int = 10) -&gt; None:\n        \"\"\"\u6307\u5b9a\u30d1\u30b9\u306eUndo/Redo\u6a5f\u80fd\u3092\u6709\u52b9\u5316\u3057\u3001\u30b9\u30bf\u30c3\u30af\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n        Args:\n            state_path: \u8ffd\u8de1\u5bfe\u8c61\u306e\u72b6\u614b\u30d1\u30b9\n            max_history: \u4fdd\u6301\u3059\u308b\u5c65\u6b74\u306e\u6700\u5927\u6570\uff08\u30c7\u30d5\u30a9\u30eb\u30c8: 10\uff09\n        \"\"\"\n        if not self._normalize_state_path(state_path)[1]:\n            return\n        self._undo_enabled.add(state_path)\n        self._max_histories[state_path] = max_history\n\n        # \u30b9\u30bf\u30c3\u30af\u4f5c\u6210\n        self._undo_stacks[state_path] = []\n        self._redo_stacks[state_path].clear()\n\n        # \u30b9\u30c6\u30fc\u30bf\u30b9\u901a\u77e5\u3092\u9001\u4fe1\n        self._emit_ur_status(state_path)\n\n    def _disable_undo_redo(self, state_path: str) -&gt; None:\n        \"\"\"\u6307\u5b9a\u30d1\u30b9\u306eUndo/Redo\u6a5f\u80fd\u3092\u7121\u52b9\u5316\u3057\u3001\u5c65\u6b74\u30c7\u30fc\u30bf\u3092\u524a\u9664\u3059\u308b\u3002\n\n        Args:\n            state_path: \u7121\u52b9\u5316\u3059\u308b\u72b6\u614b\u30d1\u30b9\n        \"\"\"\n        if not self._normalize_state_path(state_path)[1]:\n            return\n        self._undo_enabled.discard(state_path)\n        self._undo_stacks.pop(state_path, None)\n        self._redo_stacks.pop(state_path, None)\n        self._max_histories.pop(state_path, None)\n\n    def _capture_for_undo(self, state_path: str, old_value: Any) -&gt; None:\n        \"\"\"\u72b6\u614b\u5909\u66f4\u524d\u306b\u53e4\u3044\u5024\u3092Undo\u5c65\u6b74\u306b\u8a18\u9332\u3059\u308b\u3002\n\n        Args:\n            state_path: \u5909\u66f4\u5bfe\u8c61\u306e\u72b6\u614b\u30d1\u30b9\n            old_value: \u5909\u66f4\u524d\u306e\u5024\n        \"\"\"\n        # Undo/Redo\u5bfe\u8c61\u3067\u306a\u3044\u3001\u307e\u305f\u306fUndo/Redo\u64cd\u4f5c\u4e2d\u306e\u5834\u5408\u306f\u30b9\u30ad\u30c3\u30d7\n        if state_path not in self._undo_enabled or self._during_ur_op:\n            return\n\n        stack = self._undo_stacks[state_path]\n        stack.append(copy.deepcopy(old_value))\n\n        # \u5c65\u6b74\u4e0a\u9650\u306e\u7ba1\u7406\n        max_len = self._max_histories.get(state_path, 10)\n        if len(stack) &gt; max_len:\n            stack.pop(0)  # \u6700\u53e4\u306e\u5c65\u6b74\u3092\u524a\u9664\n\n        # \u65b0\u3057\u3044\u5909\u66f4\u304c\u767a\u751f\u3057\u305f\u306e\u3067Redo\u5c65\u6b74\u3092\u30af\u30ea\u30a2\n        self._redo_stacks[state_path].clear()\n\n        # \u30b9\u30c6\u30fc\u30bf\u30b9\u901a\u77e5\u3092\u9001\u4fe1\n        self._emit_ur_status(state_path)\n\n    def _undo(self, state_path: str) -&gt; None:\n        \"\"\"\u6307\u5b9a\u30d1\u30b9\u306e\u72b6\u614b\u3092 1 \u3064\u524d\u306e\u5024\u306b\u623b\u3059\u3002\"\"\"\n        if not self._normalize_state_path(state_path)[1]:\n            return\n\n        if state_path not in self._undo_enabled:\n            return\n\n        undo_stack = self._undo_stacks[state_path]\n        if len(undo_stack) &lt; 1:\n            return\n\n        # \u73fe\u5728\u306e\u5024\u3092 Redo \u30b9\u30bf\u30c3\u30af\u3078\u9000\u907f\n        try:\n            _, _, current_value = self._resolve_path(state_path)\n            self._redo_stacks[state_path].append(copy.deepcopy(current_value))\n        except (AttributeError, ValueError):\n            return\n\n        # pop() \u3057\u305f\u5024\u3053\u305d\u300c\u623b\u3059\u3079\u304d\u76f4\u524d\u5024\u300d\n        self._during_ur_op = True\n        try:\n            previous_value = undo_stack.pop()\n            self.update_state(state_path, previous_value)\n        finally:\n            self._during_ur_op = False\n\n        self._emit_ur_status(state_path)\n\n    def _redo(self, state_path: str) -&gt; None:\n        \"\"\"\u6307\u5b9a\u30d1\u30b9\u306eUndo\u3092\u53d6\u308a\u6d88\u3057\u3001Redo\u3092\u5b9f\u884c\u3059\u308b\u3002\n\n        Args:\n            state_path: Redo\u3092\u5b9f\u884c\u3059\u308b\u72b6\u614b\u30d1\u30b9\n        \"\"\"\n        if not self._normalize_state_path(state_path)[1]:\n            return\n\n        if state_path not in self._undo_enabled:\n            return\n\n        redo_stack = self._redo_stacks[state_path]\n        if not redo_stack:\n            return\n\n        # \u73fe\u5728\u306e\u5024\u3092Undo\u5c65\u6b74\u306b\u4fdd\u5b58\n        try:\n            _, _, current_value = self._resolve_path(state_path)\n            self._undo_stacks[state_path].append(copy.deepcopy(current_value))\n        except (AttributeError, ValueError):\n            return\n\n        # Redo\u5024\u3092\u53d6\u5f97\u3057\u3066\u9069\u7528\n        self._during_ur_op = True  # \u518d\u5e30\u9632\u6b62\u30d5\u30e9\u30b0\u3092\u8a2d\u5b9a\n        try:\n            redo_value = redo_stack.pop()\n            self.update_state(state_path, redo_value)\n        finally:\n            self._during_ur_op = False\n\n        # \u30b9\u30c6\u30fc\u30bf\u30b9\u901a\u77e5\u3092\u9001\u4fe1\n        self._emit_ur_status(state_path)\n\n    def _emit_ur_status(self, state_path: str) -&gt; None:\n        \"\"\"\u73fe\u5728\u306eUndo/Redo\u53ef\u5426\u30fb\u30b9\u30bf\u30c3\u30af\u30b5\u30a4\u30ba\u3092\u901a\u77e5\u3059\u308b\u3002\n\n        Args:\n            state_path: \u30b9\u30c6\u30fc\u30bf\u30b9\u901a\u77e5\u5bfe\u8c61\u306e\u72b6\u614b\u30d1\u30b9\n        \"\"\"\n        undo_stack = self._undo_stacks.get(state_path, [])\n        redo_stack = self._redo_stacks.get(state_path, [])\n        self.publish(\n            f\"{DefaultUndoTopic.STATUS_CHANGED}.{state_path}\",\n            can_undo=len(undo_stack) &gt; 0,\n            can_redo=len(redo_stack) &gt; 0,\n            undo_count=max(len(undo_stack), 0),\n            redo_count=len(redo_stack),\n        )\n\n    def _normalize_state_path(self, state_path: str) -&gt; tuple[str, bool]:\n        \"\"\"State\u578b\u540d\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u51e6\u7406\u3057\u3066\u81ea\u30b9\u30c8\u30a2\u5411\u3051\u304b\u5224\u5b9a\u3059\u308b\u3002\n\n        Args:\n            state_path: \u5165\u529b\u3055\u308c\u305f\u72b6\u614b\u30d1\u30b9\u3002\n\n        Returns:\n            \u6b63\u898f\u5316\u5f8c\u306e\u30d1\u30b9\u3068\u81ea\u30b9\u30c8\u30a2\u5411\u3051\u304b\u3069\u3046\u304b\u306e\u30d5\u30e9\u30b0\u3002\n        \"\"\"\n\n        segments = state_path.split(\".\")\n        if not segments:\n            return \"\", True\n\n        first = segments[0]\n        if first == self._state_class.__name__:\n            return \".\".join(segments[1:]), True\n\n        for cls in _stores.keys():\n            if first == cls.__name__ and cls is not self._state_class:\n                return \"\", False\n        return state_path, True\n\n    def _resolve_path(self, path: str) -&gt; tuple[Any, str, Any]:\n        \"\"\"\n        \u5c5e\u6027\u30d1\u30b9\u3092\u89e3\u6c7a\u3057\u3001\u5bfe\u8c61\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30fb\u5c5e\u6027\u540d\u30fb\u73fe\u5728\u5024\u3092\u8fd4\u3059\u3002\n\n        Args:\n            path: \u89e3\u6790\u3059\u308b\u5c5e\u6027\u30d1\u30b9\u3002\n        Returns:\n            (\u5bfe\u8c61\u30aa\u30d6\u30b8\u30a7\u30af\u30c8, \u5c5e\u6027\u540d, \u73fe\u5728\u5024)\n        \"\"\"\n        path, available = self._normalize_state_path(path)\n        if not available:\n            raise ValueError(\"Path does not belong to this store\")\n\n        segments = path.split(\".\")\n\n        if not segments:\n            raise ValueError(\"Empty path\")\n\n        # \u6700\u5f8c\u306e\u30bb\u30b0\u30e1\u30f3\u30c8\u3092\u53d6\u308a\u51fa\u3057\n        attr_name = segments[-1]\n\n        # \u6700\u5f8c\u306e\u30bb\u30b0\u30e1\u30f3\u30c8\u4ee5\u5916\u306e\u30d1\u30b9\u3092\u305f\u3069\u3063\u3066\u5bfe\u8c61\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\n        current = self._state\n        for segment in segments[:-1]:\n            if not hasattr(current, segment):\n                raise AttributeError(f\"No such attribute: {segment} in path {path}\")\n            current = getattr(current, segment)\n\n        # \u73fe\u5728\u306e\u5024\u3092\u53d6\u5f97\n        if not hasattr(current, attr_name):\n            raise AttributeError(f\"No such attribute: {attr_name} in path {path}\")\n\n        old_value = getattr(current, attr_name)\n        return current, attr_name, old_value\n\n    def _validate_and_set_value(\n        self, target_obj: Any, attr_name: str, new_value: Any\n    ) -&gt; None:\n        \"\"\"\u5c5e\u6027\u5024\u3092\u578b\u691c\u8a3c\u3057\u3066\u304b\u3089\u8a2d\u5b9a\u3059\u308b\u3002\n\n        Args:\n            target_obj: \u5024\u3092\u8a2d\u5b9a\u3059\u308b\u5bfe\u8c61\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\n            attr_name: \u8a2d\u5b9a\u3059\u308b\u5c5e\u6027\u540d\u3002\n            new_value: \u65b0\u3057\u3044\u5024\u3002\n        \"\"\"\n        # Pydantic\u30e2\u30c7\u30eb\u306e\u5834\u5408\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u578b\u60c5\u5831\u3092\u53d6\u5f97\n        if isinstance(target_obj, BaseModel):\n            model_fields = target_obj.__class__.model_fields\n\n            if attr_name in model_fields:\n                field_info = model_fields[attr_name]\n\n                # \u3082\u3057\u65b0\u3057\u3044\u5024\u304cPydantic\u30e2\u30c7\u30eb\u306e\u5834\u5408\u3001model_validate\u3092\u4f7f\u7528\n                if hasattr(new_value, \"model_dump\") and hasattr(\n                    field_info.annotation, \"model_validate\"\n                ):\n                    field_type = field_info.annotation\n                    validated_value = field_type.model_validate(new_value)\n                    setattr(target_obj, attr_name, validated_value)\n                    return\n\n        # \u901a\u5e38\u306e\u5c5e\u6027\u8a2d\u5b9a\n        setattr(target_obj, attr_name, new_value)\n\n\n# State \u578b\u3054\u3068\u306b\u751f\u6210\u3057\u305f Store \u3092\u4fdd\u6301\u3059\u308b\u8f9e\u66f8\n_stores: dict[Type[BaseModel], Store[Any]] = {}\n\n\ndef get_store(state_cls: Type[TState]) -&gt; Store[TState]:\n    \"\"\"\u6307\u5b9a\u3055\u308c\u305f ``state_cls`` \u7528\u306e ``Store`` \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\u3002\n\n    \u540c\u3058 ``state_cls`` \u306b\u5bfe\u3057\u3066\u306f\u5e38\u306b\u540c\u3058 ``Store`` \u3092\u8fd4\u3057\u3001\n    \u521d\u56de\u547c\u3073\u51fa\u3057\u6642\u306e\u307f\u751f\u6210\u3057\u3066\u5185\u90e8\u3067\u4fdd\u6301\u3059\u308b\u3002\n\n    Args:\n        state_cls: ``Store`` \u751f\u6210\u306b\u4f7f\u7528\u3059\u308b\u72b6\u614b\u30e2\u30c7\u30eb\u306e\u578b\u3002\n\n    Returns:\n        ``state_cls`` \u306b\u5bfe\u5fdc\u3059\u308b ``Store`` \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002\n    \"\"\"\n    if state_cls not in _stores:\n        _stores[state_cls] = Store(state_cls)\n    return cast(Store[TState], _stores[state_cls])\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#_15","title":"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30af\u30e9\u30b9","text":""},{"location":"ai-reference/REFERENCE_FULL/#srcpubsubtkappapplication_basepy","title":"<code>src/pubsubtk/app/application_base.py</code>","text":"<p>Tkinter \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5411\u3051\u306e\u5171\u901a\u57fa\u5e95\u30af\u30e9\u30b9</p> <pre><code># application_base.py - \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\n\n\"\"\"Tkinter \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5411\u3051\u306e\u5171\u901a\u57fa\u5e95\u30af\u30e9\u30b9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u306f\u3001Tk \u304a\u3088\u3073 ttk \u30d9\u30fc\u30b9\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u69cb\u7bc9\u6642\u306b\n\u5229\u7528\u3059\u308b\u5171\u901a\u30e1\u30bd\u30c3\u30c9\u3092\u307e\u3068\u3081\u3066\u3044\u307e\u3059\u3002``TkApplication`` \u3068\n``ThemedApplication`` \u306e 2 \u7a2e\u985e\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u30af\u30e9\u30b9\u3092\u516c\u958b\u3057\u3066\u304a\u308a\u3001\n\u3044\u305a\u308c\u3082 ``ApplicationCommon`` Mixin \u3092\u7d99\u627f\u3057\u3066 Pub/Sub \u6a5f\u80fd\u3068\n\u72b6\u614b\u7ba1\u7406\u6a5f\u80fd\u3092\u81ea\u52d5\u7684\u306b\u7d44\u307f\u8fbc\u307f\u307e\u3059\u3002\n\"\"\"\n\nfrom __future__ import annotations\n\nimport asyncio\nimport tkinter as tk\nfrom typing import TYPE_CHECKING, Dict, Generic, Optional, Tuple, Type, TypeVar\n\nfrom pydantic import BaseModel\nfrom ttkthemes import ThemedTk\n\nfrom pubsubtk.core.default_topic_base import PubSubDefaultTopicBase\nfrom pubsubtk.processor.processor_base import ProcessorBase\nfrom pubsubtk.store.store import get_store\nfrom pubsubtk.topic.topics import DefaultNavigateTopic, DefaultProcessorTopic\nfrom pubsubtk.ui.base.container_base import ContainerMixin\nfrom pubsubtk.ui.base.template_base import TemplateMixin\n\nif TYPE_CHECKING:\n    from pubsubtk.ui.types import (\n        ComponentType,\n        ContainerComponentType,\n        TemplateComponentType,\n    )\n\nTState = TypeVar(\"TState\", bound=BaseModel)\nP = TypeVar(\"P\", bound=ProcessorBase)\n\n\ndef _default_poll(loop: asyncio.AbstractEventLoop, root: tk.Tk, interval: int) -&gt; None:\n    \"\"\"\u975e\u540c\u671f\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u3092 ``after`` \u3067\u5b9a\u671f\u5b9f\u884c\u3059\u308b\u88dc\u52a9\u95a2\u6570\u3002\n\n    Args:\n        loop: \u5b9f\u884c\u5bfe\u8c61\u306e ``AbstractEventLoop`` \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002\n        root: ``after`` \u3092\u547c\u3073\u51fa\u3059 Tk \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\uff08\u901a\u5e38\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u672c\u4f53\uff09\u3002\n        interval: \u30dd\u30fc\u30ea\u30f3\u30b0\u9593\u9694\uff08\u30df\u30ea\u79d2\uff09\u3002\n    \"\"\"\n\n    try:\n        loop.call_soon(loop.stop)\n        loop.run_forever()\n    except Exception:\n        pass\n    root.after(interval, _default_poll, loop, root, interval)\n\n\nclass ApplicationCommon(PubSubDefaultTopicBase, Generic[TState]):\n    \"\"\"Tk/Ttk \u3044\u305a\u308c\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u30af\u30e9\u30b9\u3067\u3082\u5171\u901a\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b Mixin.\"\"\"\n\n    def __init__(self, state_cls: Type[TState], *args, **kwargs):\n        \"\"\"\u72b6\u614b\u30af\u30e9\u30b9\u3092\u53d7\u3051\u53d6\u308a\u3001Pub/Sub \u6a5f\u80fd\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n        Args:\n            state_cls: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u72b6\u614b\u3092\u8868\u3059 ``BaseModel`` \u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3002\n        \"\"\"\n\n        super().__init__(*args, **kwargs)\n        self.state_cls = state_cls\n        self.store = get_store(state_cls)\n        self._processors: Dict[str, ProcessorBase] = {}\n\n    def init_common(self, title: str, geometry: str) -&gt; None:\n        \"\"\"\u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb\u3084\u30e1\u30a4\u30f3\u30d5\u30ec\u30fc\u30e0\u3092\u8a2d\u5b9a\u3059\u308b\u5171\u901a\u521d\u671f\u5316\u51e6\u7406\u3002\n\n        Args:\n            title: \u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb\u3002\n            geometry: ``WIDTHxHEIGHT`` \u5f62\u5f0f\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u6587\u5b57\u5217\u3002\n        \"\"\"\n\n        # \u30a6\u30a3\u30f3\u30c9\u30a6\u57fa\u672c\u8a2d\u5b9a\n        self.title(title)\n        self.geometry(geometry)\n\n        # \u30b3\u30f3\u30c6\u30ca &amp; \u30a2\u30af\u30c6\u30a3\u30d6\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\n        self.main_frame = tk.Frame(self)\n        self.main_frame.pack(fill=tk.BOTH, expand=True)\n        self.active: Optional[tk.Widget] = None\n\n        # \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u7ba1\u7406\u7528\u8f9e\u66f8\n        self._subwindows: Dict[str, Tuple[tk.Toplevel, tk.Widget]] = {}\n\n    def setup_subscriptions(self) -&gt; None:\n        \"\"\"PubSub \u306e\u8cfc\u8aad\u8a2d\u5b9a\u3092\u884c\u3046\u3002\n\n        ``PubSubBase.__init__`` \u304b\u3089\u81ea\u52d5\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3001\n        \u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u3084 Processor \u7ba1\u7406\u306b\u95a2\u3059\u308b\u30c8\u30d4\u30c3\u30af\u3092\u8cfc\u8aad\u3057\u307e\u3059\u3002\n        \"\"\"\n\n        self.subscribe(DefaultNavigateTopic.SWITCH_CONTAINER, self.switch_container)\n        self.subscribe(DefaultNavigateTopic.SWITCH_SLOT, self.switch_slot)\n        self.subscribe(DefaultNavigateTopic.OPEN_SUBWINDOW, self.open_subwindow)\n        self.subscribe(DefaultNavigateTopic.CLOSE_SUBWINDOW, self.close_subwindow)\n        self.subscribe(\n            DefaultNavigateTopic.CLOSE_ALL_SUBWINDOWS, self.close_all_subwindows\n        )\n        self.subscribe(\n            DefaultProcessorTopic.REGISTER_PROCESSOR, self.register_processor\n        )\n        self.subscribe(DefaultProcessorTopic.DELETE_PROCESSOR, self.delete_processor)\n\n    def _create_component(\n        self, cls: ComponentType, parent: tk.Widget, kwargs: dict = None\n    ) -&gt; tk.Widget:\n        \"\"\"\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u7a2e\u985e\u306b\u5fdc\u3058\u3066\u751f\u6210\u3059\u308b\u5171\u901a\u30e1\u30bd\u30c3\u30c9\u3002\n\n        Args:\n            cls: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30af\u30e9\u30b9\u3002\n            parent: \u89aa\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3002\n            kwargs: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u521d\u671f\u5316\u7528\u30d1\u30e9\u30e1\u30fc\u30bf\u8f9e\u66f8\u3002\n\n        Returns:\n            \u751f\u6210\u3057\u305f\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002\n        \"\"\"\n        kwargs = kwargs or {}\n\n        # ContainerMixin\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\n        is_container = issubclass(cls, ContainerMixin)\n\n        if is_container:\n            # Container\u306e\u5834\u5408\u306fstore\u3092\u6e21\u3059\n            return cls(parent=parent, store=self.store, **kwargs)\n        else:\n            # Presentational\u306e\u5834\u5408\u306fstore\u306a\u3057\n            return cls(parent=parent, **kwargs)\n\n    def register_processor(self, proc: Type[P], name: Optional[str] = None) -&gt; str:\n        \"\"\"\n        \u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u540d\u524d\u3067\u767b\u9332\u3057\u3001\u767b\u9332\u30ad\u30fc\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n        Args:\n            proc: ProcessorBase\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\n            name: \u4efb\u610f\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u540d\u3002\u672a\u6307\u5b9a\u6642\u306f\u30af\u30e9\u30b9\u540d\u3092\u4f7f\u7528\u3057\u3001\u91cd\u8907\u3059\u308b\u5834\u5408\u306f\u63a5\u5c3e\u8f9e\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n        Returns:\n            \u767b\u9332\u306b\u4f7f\u7528\u3057\u305f\u30d7\u30ed\u30bb\u30c3\u30b5\u540d\u3002\n        Raises:\n            KeyError: \u65e2\u306b\u540c\u540d\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u304c\u767b\u9332\u6e08\u307f\u306e\u5834\u5408\u3002\n        \"\"\"\n        # \u30d9\u30fc\u30b9\u540d\u6c7a\u5b9a\n        base_key = name or proc.__name__\n        key = base_key\n        suffix = 1\n        # \u91cd\u8907\u3092\u56de\u907f\n        while key in self._processors:\n            key = f\"{base_key}_{suffix}\"\n            suffix += 1\n\n        # \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3057\u3066\u767b\u9332\n        self._processors[key] = proc(store=self.store)\n        return key\n\n    def delete_processor(self, name: str) -&gt; None:\n        \"\"\"\u767b\u9332\u6e08\u307f\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u524a\u9664\u3057 ``teardown`` \u3092\u5b9f\u884c\u3059\u308b\u3002\"\"\"\n        if name not in self._processors:\n            raise KeyError(f\"Processor '{name}' not found.\")\n        self._processors[name].teardown()\n        del self._processors[name]\n\n    def set_template(self, template_cls: TemplateComponentType) -&gt; None:\n        \"\"\"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\n        Args:\n            template_cls: \u9069\u7528\u3059\u308b ``TemplateComponent`` \u306e\u30af\u30e9\u30b9\u3002\n        \"\"\"\n        if self.active:\n            self.active.destroy()\n        self.active = template_cls(parent=self.main_frame, store=self.store)\n        self.active.pack(fill=tk.BOTH, expand=True)\n\n    def switch_container(\n        self,\n        cls: ContainerComponentType,\n        kwargs: dict = None,\n    ) -&gt; None:\n        \"\"\"\u30e1\u30a4\u30f3\u30d5\u30ec\u30fc\u30e0\u5185\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u5207\u308a\u66ff\u3048\u308b\u3002\n\n        \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f ``switch_slot`` \u3092\u4f7f\u7528\u3057\u3066\n        \u30c7\u30d5\u30a9\u30eb\u30c8\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n        Args:\n            cls: \u5207\u308a\u66ff\u3048\u5148\u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u3002\n            kwargs: \u30b3\u30f3\u30c6\u30ca\u521d\u671f\u5316\u7528\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u8f9e\u66f8\u3002\n        \"\"\"\n        # \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\n        if self.active and isinstance(self.active, TemplateMixin):\n            # \u30c7\u30d5\u30a9\u30eb\u30c8\u30b9\u30ed\u30c3\u30c8\uff08\"main\" \u307e\u305f\u306f \"content\"\uff09\u3092\u63a2\u3059\n            slots = self.active.get_slots()\n            if \"main\" in slots:\n                self.active.switch_slot_content(\"main\", cls, kwargs)\n            elif \"content\" in slots:\n                self.active.switch_slot_content(\"content\", cls, kwargs)\n            else:\n                # \u30c7\u30d5\u30a9\u30eb\u30c8\u30b9\u30ed\u30c3\u30c8\u304c\u306a\u3044\u5834\u5408\u306f\u6700\u521d\u306e\u30b9\u30ed\u30c3\u30c8\u3092\u4f7f\u7528\n                if slots:\n                    first_slot = list(slots.keys())[0]\n                    self.active.switch_slot_content(first_slot, cls, kwargs)\n                else:\n                    raise RuntimeError(\"Template has no slots defined\")\n        else:\n            # \u901a\u5e38\u306e\u30b3\u30f3\u30c6\u30ca\u5207\u308a\u66ff\u3048\n            if self.active:\n                self.active.destroy()\n            kwargs = kwargs or {}\n            self.active = self._create_component(cls, self.main_frame, kwargs)\n            self.active.pack(fill=tk.BOTH, expand=True)\n\n    def switch_slot(\n        self,\n        slot_name: str,\n        cls: ComponentType,\n        kwargs: dict = None,\n    ) -&gt; None:\n        \"\"\"\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u7279\u5b9a\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u5207\u308a\u66ff\u3048\u308b\u3002\n\n        Args:\n            slot_name: \u5909\u66f4\u5bfe\u8c61\u306e\u30b9\u30ed\u30c3\u30c8\u540d\u3002\n            cls: \u65b0\u3057\u304f\u914d\u7f6e\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9\u3002\n            kwargs: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u521d\u671f\u5316\u7528\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u8f9e\u66f8\u3002\n        \"\"\"\n        if not self.active or not isinstance(self.active, TemplateMixin):\n            raise RuntimeError(\"No template is set. Use set_template() first.\")\n\n        self.active.switch_slot_content(slot_name, cls, kwargs)\n\n    def open_subwindow(\n        self,\n        cls: ComponentType,\n        win_id: Optional[str] = None,\n        kwargs: dict = None,\n    ) -&gt; str:\n        \"\"\"\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304d\u3001\u751f\u6210\u3057\u305f\u30a6\u30a3\u30f3\u30c9\u30a6 ID \u3092\u8fd4\u3059\u3002\n\n        Args:\n            cls: \u8868\u793a\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9\u3002\n            win_id: \u4efb\u610f\u306e\u30a6\u30a3\u30f3\u30c9\u30a6 ID\u3002\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\u3002\n            kwargs: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u521d\u671f\u5316\u7528\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u8f9e\u66f8\u3002\n\n        Returns:\n            \u5b9f\u969b\u306b\u4f7f\u7528\u3055\u308c\u305f\u30a6\u30a3\u30f3\u30c9\u30a6 ID\u3002\n        \"\"\"\n        # \u65e2\u5b58ID\u3067\u3042\u308c\u3070\u524d\u9762\u306b\n        if win_id and win_id in self._subwindows:\n            self._subwindows[win_id][0].lift()\n            return win_id\n\n        # \u30ad\u30fc\u751f\u6210\n        base_id = win_id or cls.__name__\n        unique_id = base_id\n        suffix = 1\n        while unique_id in self._subwindows:\n            unique_id = f\"{base_id}_{suffix}\"\n            suffix += 1\n\n        # \u30a6\u30a3\u30f3\u30c9\u30a6\u751f\u6210\n        toplevel = tk.Toplevel(self)\n        kwargs = kwargs or {}\n        kwargs[\"win_id\"] = unique_id\n\n        # \u5171\u901a\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\n        comp = self._create_component(cls, toplevel, kwargs)\n        comp.pack(fill=tk.BOTH, expand=True)\n\n        def on_close():\n            self.close_subwindow(unique_id)\n\n        toplevel.protocol(\"WM_DELETE_WINDOW\", on_close)\n\n        self._subwindows[unique_id] = (toplevel, comp)\n        return unique_id\n\n    def close_subwindow(self, win_id: str) -&gt; None:\n        \"\"\"\u6307\u5b9a ID \u306e\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b\u3002\"\"\"\n\n        if win_id not in self._subwindows:\n            return\n        top, comp = self._subwindows.pop(win_id)\n        try:\n            comp.destroy()\n        except Exception:\n            pass\n        top.destroy()\n\n    def close_all_subwindows(self) -&gt; None:\n        \"\"\"\u958b\u3044\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b\u3002\"\"\"\n\n        for wid in list(self._subwindows):\n            self.close_subwindow(wid)\n\n    def run(\n        self,\n        use_async: bool = False,\n        loop: Optional[asyncio.AbstractEventLoop] = None,\n        poll_interval: int = 50,\n    ) -&gt; None:\n        \"\"\"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u3092\u958b\u59cb\u3059\u308b\u3002\n\n        Args:\n            use_async: ``asyncio`` \u3092\u4f75\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u3002\n            loop: \u4f7f\u7528\u3059\u308b\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u3002``None`` \u306e\u5834\u5408\u306f ``get_event_loop`` \u3092\u4f7f\u7528\u3002\n            poll_interval: ``_default_poll`` \u3092\u547c\u3073\u51fa\u3059\u9593\u9694\uff08\u30df\u30ea\u79d2\uff09\u3002\n        \"\"\"\n\n        self.protocol(\"WM_DELETE_WINDOW\", self.on_closing)\n        if not use_async:\n            self.mainloop()\n        else:\n            loop = loop or asyncio.get_event_loop()\n            self.after(poll_interval, _default_poll, loop, self, poll_interval)\n            self.mainloop()\n            try:\n                loop.run_until_complete(loop.shutdown_asyncgens())\n            except Exception:\n                pass\n\n    def on_closing(self) -&gt; None:\n        \"\"\"\u7d42\u4e86\u6642\u306e\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u51e6\u7406\u3092\u884c\u3046\u3002\n\n        \u3059\u3079\u3066\u306e\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u3066 ``destroy`` \u3092\u547c\u3073\u51fa\u3059\u3002\n        \"\"\"\n\n        self.close_all_subwindows()\n        self.destroy()\n\n\nclass TkApplication(ApplicationCommon[TState], tk.Tk, Generic[TState]):\n    def __init__(\n        self,\n        state_cls: Type[TState],\n        title: str = \"Tk App\",\n        geometry: str = \"800x600\",\n        *args,\n        **kwargs,\n    ):\n        \"\"\"Tk \u30d9\u30fc\u30b9\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n        Args:\n            state_cls: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u72b6\u614b\u30e2\u30c7\u30eb\u306e\u578b\u3002\n            title: \u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb\u3002\n            geometry: ``WIDTHxHEIGHT`` \u5f62\u5f0f\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3002\n        \"\"\"\n\n        # **first** initialize the actual Tk\n        tk.Tk.__init__(self, *args, **kwargs)\n        # **then** initialize the PubSub mixin\n        ApplicationCommon.__init__(self, state_cls)\n        # now do your common window setup\n        self.init_common(title, geometry)\n\n\nclass ThemedApplication(ApplicationCommon[TState], ThemedTk, Generic[TState]):\n    def __init__(\n        self,\n        state_cls: Type[TState],\n        theme: str = \"arc\",\n        title: str = \"Themed App\",\n        geometry: str = \"800x600\",\n        *args,\n        **kwargs,\n    ):\n        \"\"\"\u30c6\u30fc\u30de\u5bfe\u5fdc\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n        Args:\n            state_cls: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u72b6\u614b\u30e2\u30c7\u30eb\u306e\u578b\u3002\n            theme: \u9069\u7528\u3059\u308b ttk \u30c6\u30fc\u30de\u540d\u3002\n            title: \u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb\u3002\n            geometry: ``WIDTHxHEIGHT`` \u5f62\u5f0f\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3002\n        \"\"\"\n\n        # initialize the themed\u2010Tk\n        ThemedTk.__init__(self, theme=theme, *args, **kwargs)\n        # mixin init\n        ApplicationCommon.__init__(self, state_cls)\n        # then common setup\n        self.init_common(title, geometry)\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#ui","title":"UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8","text":""},{"location":"ai-reference/REFERENCE_FULL/#srcpubsubtkuibasecontainer_basepy","title":"<code>src/pubsubtk/ui/base/container_base.py</code>","text":"<p>\u72b6\u614b\u9023\u643a\u53ef\u80fd\u306a UI \u30b3\u30f3\u30c6\u30ca\u306e\u57fa\u5e95\u30af\u30e9\u30b9</p> <pre><code>\"\"\"\nsrc/pubsubtk/ui/base/container_base.py\n\n\u72b6\u614b\u9023\u643a\u53ef\u80fd\u306a UI \u30b3\u30f3\u30c6\u30ca\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\"\"\"\n\nimport tkinter as tk\nfrom abc import ABC, abstractmethod\nfrom tkinter import ttk\nfrom typing import Any, Generic, TypeVar\n\nfrom pydantic import BaseModel\n\nfrom pubsubtk.core.default_topic_base import PubSubDefaultTopicBase\nfrom pubsubtk.store.store import Store\n\nTState = TypeVar(\"TState\", bound=BaseModel)\n\n\nclass ContainerMixin(PubSubDefaultTopicBase, ABC, Generic[TState]):\n    \"\"\"\n    PubSub\u9023\u643a\u7528\u306e\u30b3\u30f3\u30c6\u30ca\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8Mixin\u3002\n\n    - Store\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3057\u3001\u8cfc\u8aad\u8a2d\u5b9a\u30fb\u72b6\u614b\u53cd\u6620\u3092\u81ea\u52d5\u5b9f\u884c\n    - setup_subscriptions()/refresh_from_state()\u3092\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\n    - destroy\u6642\u306b\u8cfc\u8aad\u89e3\u9664(teardown)\u3082\u81ea\u52d5\n\n    **IMPORTANT**: Use built-in pub_* methods for state updates instead of\n    manually publishing to topics. This provides better IDE support and consistency.\n    \"\"\"\n\n    def __init__(self, store: Store[TState], *args, **kwargs: Any):\n        \"\"\"\u30b3\u30f3\u30c6\u30ca\u306e\u521d\u671f\u5316\u3092\u884c\u3046\u3002\n\n        Args:\n            store: \u4f7f\u7528\u3059\u308b ``Store`` \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002\n\n        Notes:\n            \u6e21\u3055\u308c\u305f ``*args`` \u3068 ``**kwargs`` \u306f ``self.args`` / ``self.kwargs``\n            \u3068\u3057\u3066\u4fdd\u6301\u3055\u308c\u307e\u3059\u3002\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092 ``open_subwindow`` \u3067\u958b\u304f\u5834\u5408\u306f\n            ``win_id`` \u304c ``self.kwargs`` \u306b\u81ea\u52d5\u8ffd\u52a0\u3055\u308c\u3001\n            ``pub_close_subwindow(self.kwargs[\"win_id\"])`` \u3068\u3057\u3066\u81ea\u8eab\u3092\u9589\u3058\u308b\u3053\u3068\u304c\n            \u3067\u304d\u307e\u3059\u3002\u5c06\u6765\u7684\u306b\u540c\u69d8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u304c\u5897\u3048\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n        \"\"\"\n        self.args = args\n        self.kwargs = kwargs\n\n        # \u578b\u5f15\u6570\u4ed8\u304d\u306e Store[TState] \u3092\u53d6\u5f97\n        self.store: Store[TState] = store\n\n        super().__init__(*args, **kwargs)\n\n        self.setup_ui()\n        self.refresh_from_state()\n\n    @abstractmethod\n    def setup_ui(self) -&gt; None:\n        \"\"\"\n        \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u69cb\u7bc9\u3068\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u884c\u3046\u30e1\u30bd\u30c3\u30c9\u3002\n        \u30b5\u30d6\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3059\u308b\u3002\n        \"\"\"\n        ...\n\n    @abstractmethod\n    def refresh_from_state(self) -&gt; None:\n        \"\"\"\n        \u8cfc\u8aad\u901a\u77e5\u307e\u305f\u306f\u521d\u671f\u5316\u6642\u306bUI\u3092\u72b6\u614b\u3067\u66f4\u65b0\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3002\n        \u30b5\u30d6\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3059\u308b\u3002\n        \"\"\"\n        ...\n\n    def destroy(self) -&gt; None:\n        \"\"\"\n        \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u7834\u68c4\u6642\u306b\u8cfc\u8aad\u3092\u89e3\u9664\u3057\u3066\u304b\u3089\u7834\u68c4\u51e6\u7406\u3092\u884c\u3046\u3002\n        \"\"\"\n        self.teardown()\n        super().destroy()\n\n\nclass ContainerComponentTk(ContainerMixin[TState], tk.Frame, Generic[TState]):\n    \"\"\"\n    \u6a19\u6e96tk.Frame\u30d9\u30fc\u30b9\u306ePubSub\u9023\u643a\u30b3\u30f3\u30c6\u30ca\u3002\n    \"\"\"\n\n    def __init__(self, parent: tk.Widget, store: Store[TState], *args, **kwargs: Any):\n        \"\"\"tk.Frame \u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n        Args:\n            parent: \u89aa\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3002\n            store: \u4f7f\u7528\u3059\u308b ``Store`` \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002\n        \"\"\"\n\n        tk.Frame.__init__(self, master=parent)\n        ContainerMixin.__init__(self, store=store, *args, **kwargs)\n\n\nclass ContainerComponentTtk(ContainerMixin[TState], ttk.Frame, Generic[TState]):\n    \"\"\"\n    \u30c6\u30fc\u30de\u5bfe\u5fdcttk.Frame\u30d9\u30fc\u30b9\u306ePubSub\u9023\u643a\u30b3\u30f3\u30c6\u30ca\u3002\n    \"\"\"\n\n    def __init__(self, parent: tk.Widget, store: Store[TState], *args, **kwargs: Any):\n        \"\"\"ttk.Frame \u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n        Args:\n            parent: \u89aa\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3002\n            store: \u4f7f\u7528\u3059\u308b ``Store`` \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002\n        \"\"\"\n\n        ttk.Frame.__init__(self, master=parent)\n        ContainerMixin.__init__(self, store=store, *args, **kwargs)\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#srcpubsubtkuibasepresentational_basepy","title":"<code>src/pubsubtk/ui/base/presentational_base.py</code>","text":"<p>\u30a4\u30d9\u30f3\u30c8\u767a\u706b\u6a5f\u80fd\u3092\u5099\u3048\u305f\u8868\u793a\u5c02\u7528 UI \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u57fa\u5e95\u30af\u30e9\u30b9</p> <pre><code>\"\"\"\nsrc/pubsubtk/ui/base/presentational_base.py\n\n\u30a4\u30d9\u30f3\u30c8\u767a\u706b\u6a5f\u80fd\u3092\u5099\u3048\u305f\u8868\u793a\u5c02\u7528 UI \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u7528\u57fa\u5e95\u30af\u30e9\u30b9\u3002\n\"\"\"\n\nimport tkinter as tk\nfrom abc import ABC, abstractmethod\nfrom tkinter import ttk\nfrom typing import Any, Callable, Dict\n\n\nclass PresentationalMixin(ABC):\n    \"\"\"\n    \u8868\u793a\u5c02\u7528\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u7528\u306eMixin\u3002\n\n    - \u4efb\u610f\u306e\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u767b\u9332\u30fb\u767a\u706b\u6a5f\u80fd\u3092\u6301\u3064\n    \"\"\"\n\n    def __init__(self, *args, **kwargs):\n        \"\"\"Mixin \u306e\u521d\u671f\u5316\u51e6\u7406\u3002\n\n        Notes:\n            \u6e21\u3055\u308c\u305f ``*args`` \u3068 ``**kwargs`` \u306f ``self.args`` / ``self.kwargs``\n            \u3068\u3057\u3066\u4fdd\u6301\u3055\u308c\u307e\u3059\u3002\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f ``open_subwindow``\n            \u304c ``win_id`` \u3092\u81ea\u52d5\u4ed8\u4e0e\u3059\u308b\u305f\u3081\u3001 ``self.kwargs[\"win_id\"]`` \u3092\u5229\u7528\u3057\u3066\n            \u81ea\u8eab\u3092\u9589\u3058\u3089\u308c\u307e\u3059\u3002\u4eca\u5f8c\u540c\u69d8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u304c\u8ffd\u52a0\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n        \"\"\"\n\n        self.args = args\n        self.kwargs = kwargs\n\n        self._handlers: Dict[str, Callable[..., Any]] = {}\n        self.setup_ui()\n\n    @abstractmethod\n    def setup_ui(self) -&gt; None:\n        \"\"\"\n        \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u69cb\u7bc9\u3068\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u884c\u3046\u30e1\u30bd\u30c3\u30c9\u3002\n        \u30b5\u30d6\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3059\u308b\u3002\n        \"\"\"\n        pass\n\n    def register_handler(self, event_name: str, handler: Callable[..., Any]) -&gt; None:\n        self._handlers[event_name] = handler\n\n    def trigger_event(self, event_name: str, **kwargs: Any) -&gt; None:\n        if handler := self._handlers.get(event_name):\n            handler(**kwargs)\n\n\n# tk.Frame \u30d9\u30fc\u30b9 \u306e\u62bd\u8c61\u30af\u30e9\u30b9\nclass PresentationalComponentTk(PresentationalMixin, tk.Frame):\n    \"\"\"\n    \u6a19\u6e96tk.Frame\u30d9\u30fc\u30b9\u306e\u8868\u793a\u5c02\u7528\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3002\n    \"\"\"\n\n    def __init__(self, parent: tk.Widget, *args, **kwargs):\n        \"\"\"tk.Frame \u30d9\u30fc\u30b9\u306e\u8868\u793a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\u3002\"\"\"\n\n        tk.Frame.__init__(self, master=parent)\n        PresentationalMixin.__init__(self, *args, **kwargs)\n\n\n# ttk.Frame \u30d9\u30fc\u30b9 \u306e\u62bd\u8c61\u30af\u30e9\u30b9\nclass PresentationalComponentTtk(PresentationalMixin, ttk.Frame):\n    \"\"\"\n    \u30c6\u30fc\u30de\u5bfe\u5fdcttk.Frame\u30d9\u30fc\u30b9\u306e\u8868\u793a\u5c02\u7528\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3002\n    \"\"\"\n\n    def __init__(self, parent: tk.Widget, *args, **kwargs):\n        \"\"\"ttk.Frame \u30d9\u30fc\u30b9\u306e\u8868\u793a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\u3002\"\"\"\n\n        ttk.Frame.__init__(self, master=parent)\n        PresentationalMixin.__init__(self, *args, **kwargs)\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#srcpubsubtkuibasetemplate_basepy","title":"<code>src/pubsubtk/ui/base/template_base.py</code>","text":"<p>\u8907\u6570\u30b9\u30ed\u30c3\u30c8\u3092\u6301\u3064\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 UI \u57fa\u5e95\u30af\u30e9\u30b9</p> <pre><code># template_base.py - \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u57fa\u5e95\u30af\u30e9\u30b9\n\n\"\"\"\u8907\u6570\u30b9\u30ed\u30c3\u30c8\u3092\u6301\u3064\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 UI \u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3002\"\"\"\n\nfrom __future__ import annotations\n\nimport tkinter as tk\nfrom abc import ABC, abstractmethod\nfrom tkinter import ttk\nfrom typing import TYPE_CHECKING, Dict, Generic, TypeVar\n\nfrom pydantic import BaseModel\n\nfrom pubsubtk.store.store import Store\nfrom pubsubtk.ui.base.container_base import ContainerMixin\n\nif TYPE_CHECKING:\n    from pubsubtk.ui.types import ComponentType\n\nTState = TypeVar(\"TState\", bound=BaseModel)\n\n\nclass TemplateMixin(ABC, Generic[TState]):\n    \"\"\"\n    \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u7528\u306eMixin\u3002\n\n    \u8907\u6570\u306e\u30b9\u30ed\u30c3\u30c8\uff08\u533a\u753b\uff09\u3092\u5b9a\u7fa9\u3057\u3001\u5404\u30b9\u30ed\u30c3\u30c8\u306b\u72ec\u7acb\u3057\u3066\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u914d\u7f6e\u3067\u304d\u308b\u3002\n    \u30d8\u30c3\u30c0\u30fc\u30fb\u30d5\u30c3\u30bf\u30fc\u306a\u3069\u56fa\u5b9a\u90e8\u5206\u3068\u53ef\u5909\u90e8\u5206\u3092\u5206\u96e2\u3057\u305f\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u5b9f\u73fe\u3002\n\n    Note:\n        \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u81ea\u4f53\u306f\u72b6\u614b\u3092\u6301\u305f\u305a\u3001\u30ec\u30a4\u30a2\u30a6\u30c8\u5b9a\u7fa9\u3068\u30b9\u30ed\u30c3\u30c8\u7ba1\u7406\u306e\u307f\u3092\u884c\u3046\u3002\n        \u5404\u30b9\u30ed\u30c3\u30c8\u306b\u914d\u7f6e\u3055\u308c\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u72ec\u81ea\u306b\u72b6\u614b\u7ba1\u7406\u3092\u884c\u3046\u3002\n    \"\"\"\n\n    def __init__(self, store: Store[TState], *args, **kwargs):\n        \"\"\"Mixin \u306e\u521d\u671f\u5316\u51e6\u7406\u3002\"\"\"\n\n        self.store = store\n        self._slots: Dict[str, tk.Widget] = {}\n        self._slot_contents: Dict[str, tk.Widget] = {}\n\n        # \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n        self.setup_template()\n        self._slots = self.define_slots()\n\n    def setup_template(self) -&gt; None:\n        \"\"\"\n        \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u56fa\u6709\u306e\u521d\u671f\u5316\u51e6\u7406\uff08\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\uff09\u3002\n        define_slots()\u306e\u524d\u306b\u547c\u3070\u308c\u308b\u3002\n        \"\"\"\n        pass\n\n    @abstractmethod\n    def define_slots(self) -&gt; Dict[str, tk.Widget]:\n        \"\"\"\n        \u30b9\u30ed\u30c3\u30c8\uff08\u533a\u753b\uff09\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n        Returns:\n            Dict[str, tk.Widget]: {\"\u30b9\u30ed\u30c3\u30c8\u540d\": \u30d5\u30ec\u30fc\u30e0Widget} \u306e\u8f9e\u66f8\n\n        Example:\n            # \u30d8\u30c3\u30c0\u30fc\n            self.header_frame = tk.Frame(self, height=60, bg='navy')\n            self.header_frame.pack(fill=tk.X)\n\n            # \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30f3\u30c4\n            self.main_frame = tk.Frame(self)\n            self.main_frame.pack(fill=tk.BOTH, expand=True)\n\n            # \u30d5\u30c3\u30bf\u30fc\n            self.footer_frame = tk.Frame(self, height=30, bg='gray')\n            self.footer_frame.pack(fill=tk.X)\n\n            return {\n                \"header\": self.header_frame,\n                \"main\": self.main_frame,\n                \"footer\": self.footer_frame\n            }\n        \"\"\"\n        pass\n\n    def switch_slot_content(\n        self, slot_name: str, cls: ComponentType, kwargs: dict = None\n    ) -&gt; None:\n        \"\"\"\n        \u6307\u5b9a\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u5207\u308a\u66ff\u3048\u308b\u3002\n\n        Args:\n            slot_name: \u30b9\u30ed\u30c3\u30c8\u540d\n            cls: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9\uff08Container/Presentational\u4e21\u5bfe\u5fdc\uff09\n            kwargs: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u6e21\u3059\u5f15\u6570\n        \"\"\"\n        if slot_name not in self._slots:\n            raise ValueError(f\"Unknown slot: {slot_name}\")\n\n        # \u65e2\u5b58\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7834\u68c4\n        if slot_name in self._slot_contents:\n            self._slot_contents[slot_name].destroy()\n\n        # \u65b0\u3057\u3044\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u4f5c\u6210\n        parent_frame = self._slots[slot_name]\n        content = self._create_component_for_slot(cls, parent_frame, kwargs)\n        content.pack(fill=tk.BOTH, expand=True)\n\n        self._slot_contents[slot_name] = content\n\n    def _create_component_for_slot(\n        self, cls: ComponentType, parent: tk.Widget, kwargs: dict = None\n    ) -&gt; tk.Widget:\n        \"\"\"\u30b9\u30ed\u30c3\u30c8\u7528\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u751f\u6210\"\"\"\n        kwargs = kwargs or {}\n\n        # ContainerMixin\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\n        is_container = issubclass(cls, ContainerMixin)\n\n        if is_container:\n            return cls(parent=parent, store=self.store, **kwargs)\n        else:\n            return cls(parent=parent, **kwargs)\n\n    def get_slots(self) -&gt; Dict[str, tk.Widget]:\n        \"\"\"\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30b9\u30ed\u30c3\u30c8\u306e\u8f9e\u66f8\u3092\u8fd4\u3059\"\"\"\n        return self._slots.copy()\n\n    def get_slot_content(self, slot_name: str) -&gt; tk.Widget | None:\n        \"\"\"\u6307\u5b9a\u30b9\u30ed\u30c3\u30c8\u306e\u73fe\u5728\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u8fd4\u3059\"\"\"\n        return self._slot_contents.get(slot_name)\n\n    def has_slot(self, slot_name: str) -&gt; bool:\n        \"\"\"\u6307\u5b9a\u3057\u305f\u540d\u524d\u306e\u30b9\u30ed\u30c3\u30c8\u304c\u5b58\u5728\u3059\u308b\u304b\u30c1\u30a7\u30c3\u30af\"\"\"\n        return slot_name in self._slots\n\n    def clear_slot(self, slot_name: str) -&gt; None:\n        \"\"\"\u6307\u5b9a\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30af\u30ea\u30a2\u3059\u308b\"\"\"\n        if slot_name in self._slot_contents:\n            self._slot_contents[slot_name].destroy()\n            del self._slot_contents[slot_name]\n\n    def clear_all_slots(self) -&gt; None:\n        \"\"\"\u3059\u3079\u3066\u306e\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30af\u30ea\u30a2\u3059\u308b\"\"\"\n        for slot_name in list(self._slot_contents.keys()):\n            self.clear_slot(slot_name)\n\n\nclass TemplateComponentTk(TemplateMixin[TState], tk.Frame, Generic[TState]):\n    \"\"\"\n    \u6a19\u6e96tk.Frame\u30d9\u30fc\u30b9\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3002\n    \"\"\"\n\n    def __init__(self, parent: tk.Widget, store: Store[TState], *args, **kwargs):\n        \"\"\"tk.Frame \u30d9\u30fc\u30b9\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\u3002\"\"\"\n\n        tk.Frame.__init__(self, master=parent)\n        TemplateMixin.__init__(self, store=store, *args, **kwargs)\n\n\nclass TemplateComponentTtk(TemplateMixin[TState], ttk.Frame, Generic[TState]):\n    \"\"\"\n    \u30c6\u30fc\u30de\u5bfe\u5fdcttk.Frame\u30d9\u30fc\u30b9\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3002\n    \"\"\"\n\n    def __init__(self, parent: tk.Widget, store: Store[TState], *args, **kwargs):\n        \"\"\"ttk.Frame \u30d9\u30fc\u30b9\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\u3002\"\"\"\n\n        ttk.Frame.__init__(self, master=parent)\n        TemplateMixin.__init__(self, store=store, *args, **kwargs)\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#processor","title":"Processor\u30b7\u30b9\u30c6\u30e0","text":""},{"location":"ai-reference/REFERENCE_FULL/#srcpubsubtkprocessorprocessor_basepy","title":"<code>src/pubsubtk/processor/processor_base.py</code>","text":"<p>\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u62c5\u3046 Processor \u7528\u306e\u62bd\u8c61\u57fa\u5e95\u30af\u30e9\u30b9</p> <pre><code># processor_base.py - Processor \u306e\u57fa\u5e95\u30af\u30e9\u30b9\n\n\"\"\"\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u62c5\u3046 Processor \u7528\u306e\u62bd\u8c61\u57fa\u5e95\u30af\u30e9\u30b9\u3002\"\"\"\n\nfrom typing import Generic, TypeVar\n\nfrom pydantic import BaseModel\n\nfrom pubsubtk.core.default_topic_base import PubSubDefaultTopicBase\nfrom pubsubtk.store.store import Store\n\nTState = TypeVar(\"TState\", bound=BaseModel)\n\n\nclass ProcessorBase(PubSubDefaultTopicBase, Generic[TState]):\n    \"\"\"Processor \u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3002\"\"\"\n\n    def __init__(self, store: Store[TState], *args, **kwargs) -&gt; None:\n        \"\"\"Store \u3092\u53d7\u3051\u53d6\u3063\u3066\u521d\u671f\u5316\u3057\u307e\u3059\u3002\"\"\"\n\n        # \u578b\u5f15\u6570\u4ed8\u304d\u306e Store[TState] \u3092\u53d6\u5f97\n        self.store: Store[TState] = store\n\n        super().__init__(*args, **kwargs)\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#storybook","title":"Storybook\u30b7\u30b9\u30c6\u30e0","text":""},{"location":"ai-reference/REFERENCE_FULL/#srcpubsubtkstorybookapppy","title":"<code>src/pubsubtk/storybook/app.py</code>","text":"<p>Storybook\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30af\u30e9\u30b9</p> <pre><code># storybook/app.py - StorybookApplication\n\"\"\"ThemedApplication\u30d9\u30fc\u30b9\u306eStorybookApplication\u3002\"\"\"\n\nfrom pubsubtk import ThemedApplication\n\nfrom .core.state import StorybookState\nfrom .ui.container import StorybookContainer\n\n\nclass StorybookApplication(ThemedApplication[StorybookState]):\n    \"\"\"\u30c6\u30fc\u30de\u5bfe\u5fdcStorybook\u5c02\u7528\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30af\u30e9\u30b9\"\"\"\n\n    def __init__(\n        self,\n        theme: str = \"arc\",\n        title: str = \"PubSubTk Storybook\",\n        geometry: str = \"1200x800\",\n        auto_setup: bool = True,\n        *args,\n        **kwargs,\n    ):\n        \"\"\"Storybook\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n        Args:\n            theme: ttk\u30c6\u30fc\u30de\u540d\uff08arc, clam, alt, default, classic\u7b49\uff09\n            title: \u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb\n            geometry: \u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\n            auto_setup: \u81ea\u52d5\u3067Storybook\u30b3\u30f3\u30c6\u30ca\u3092\u914d\u7f6e\u3059\u308b\u304b\n        \"\"\"\n        super().__init__(\n            StorybookState, theme=theme, title=title, geometry=geometry, *args, **kwargs\n        )\n\n        if auto_setup:\n            self._setup_storybook()\n\n    def _setup_storybook(self):\n        \"\"\"Storybook\u30b3\u30f3\u30c6\u30ca\u3092\u81ea\u52d5\u914d\u7f6e\"\"\"\n        sb = StorybookContainer(parent=self.main_frame, store=self.store)\n        sb.pack(fill=\"both\", expand=True)\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#srcpubsubtkstorybookcoredecoratorpy","title":"<code>src/pubsubtk/storybook/core/decorator.py</code>","text":"<p>@story \u30c7\u30b3\u30ec\u30fc\u30bf\u3068 Story \u767b\u9332\u6a5f\u80fd</p> <pre><code># storybook/decorator.py - @story \u30c7\u30b3\u30ec\u30fc\u30bf\n\"\"\"\u30b9\u30c8\u30fc\u30ea\u30fc\u3092\u767b\u9332\u3059\u308b\u305f\u3081\u306e\u30c7\u30b3\u30ec\u30fc\u30bf\u3002\"\"\"\n\nfrom __future__ import annotations\n\nimport re\nfrom typing import Callable\n\nfrom .meta import StoryMeta\nfrom .registry import StoryRegistry\n\n\ndef _slugify(text: str) -&gt; str:\n    return re.sub(r\"[^a-z0-9_]\", \"_\", text.lower())\n\n\ndef story(path: str | None = None, title: str | None = None):\n    \"\"\"Story \u767b\u9332\u7528\u30c7\u30b3\u30ec\u30fc\u30bf\u3002\n\n    Args:\n        path: \"Button.Primary\" \u306e\u3088\u3046\u306a\u30c9\u30c3\u30c8\u533a\u5207\u308a\u968e\u5c64\u3002\n        title: \u8449\u30ce\u30fc\u30c9\u540d\u3002\u7701\u7565\u6642\u306f path \u306e\u672b\u5c3e\u304c\u4f7f\u308f\u308c\u308b\u3002\n    \"\"\"\n\n    def decorator(factory: Callable):\n        # \u30c7\u30d5\u30a9\u30eb\u30c8\u30d1\u30b9 = &lt;ReturnClass&gt;.&lt;func_name&gt;\n        comp_name = getattr(factory, \"__name__\", \"Component\")\n        default_path = f\"{comp_name}.{factory.__name__}\"\n\n        full_path = (path or default_path).strip(\".\")\n        segments = full_path.split(\".\")\n        leaf_title = title or segments[-1]\n\n        meta = StoryMeta(\n            id=_slugify(full_path),\n            path=segments[:-1],\n            title=leaf_title,\n            factory=factory,\n        )\n        StoryRegistry.register(meta)\n        return factory\n\n    return decorator\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#srcpubsubtkstorybookcorecontextpy","title":"<code>src/pubsubtk/storybook/core/context.py</code>","text":"<p>StoryContext - \u30b9\u30c8\u30fc\u30ea\u30fc\u5b9f\u884c\u6642\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8</p> <pre><code># storybook/context.py - StoryContext \u5b9f\u88c5\n\"\"\"StoryFactory \u306b\u6e21\u3059\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\"\"\"\n\nfrom __future__ import annotations\n\nimport tkinter as tk\nfrom typing import Any, Callable, Dict, List, Optional, Type\n\nfrom pydantic import BaseModel\n\nfrom ..knobs.store import get_knob_store\nfrom ..knobs.types import KnobSpec, KnobValue\n\n\nclass StoryContext(BaseModel):\n    \"\"\"\u30b9\u30c8\u30fc\u30ea\u30fc\u5b9f\u884c\u6642\u306b\u6e21\u3055\u308c\u308b\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\"\"\"\n\n    parent: tk.Widget\n    _publish_callback: Callable[[str, dict], None] | None = None\n    _knob_values: Dict[str, KnobValue] = {}\n    _story_id: Optional[str] = None\n\n    class Config:\n        arbitrary_types_allowed = True\n\n    def set_publish_callback(self, callback: Callable[[str, dict], None]) -&gt; None:\n        \"\"\"PubSub\u767a\u884c\u7528\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u8a2d\u5b9a\"\"\"\n        self._publish_callback = callback\n\n    def set_story_id(self, story_id: str) -&gt; None:\n        \"\"\"\u30b9\u30c8\u30fc\u30ea\u30fcID\u3092\u8a2d\u5b9a\uff08\u5024\u306e\u6c38\u7d9a\u5316\u7528\uff09\"\"\"\n        self._story_id = story_id\n\n    def knob(\n        self,\n        name: str,\n        type_: Type,\n        default: Any,\n        desc: str = \"\",\n        range_: Optional[tuple] = None,\n        choices: Optional[List[str]] = None,\n        multiline: bool = False,\n    ) -&gt; KnobValue:\n        \"\"\"Knob\u3092\u5ba3\u8a00\u3057\u3066KnobValue\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\uff08\u5024\u306e\u6c38\u7d9a\u5316\u3042\u308a\uff09\"\"\"\n\n        store = get_knob_store()\n        story_id = self._story_id or \"default\"\n\n        # \u30b0\u30ed\u30fc\u30d0\u30eb\u30b9\u30c8\u30a2\u304b\u3089\u65e2\u5b58\u306eKnobValue\u3092\u53d6\u5f97\n        existing_knob = store.get_knob_instance(story_id, name)\n        if existing_knob:\n            self._knob_values[name] = existing_knob\n            return existing_knob\n\n        # \u65b0\u3057\u3044KnobSpec\u4f5c\u6210\n        spec = KnobSpec(\n            name=name,\n            type=type_,\n            default=default,\n            desc=desc,\n            range=range_,\n            choices=choices,\n            multiline=multiline,\n        )\n\n        # \u4fdd\u5b58\u3055\u308c\u305f\u5024\u304c\u3042\u308c\u3070\u4f7f\u7528\u3001\u306a\u3051\u308c\u3070\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n        saved_value = store.get_value(story_id, name, default)\n\n        # KnobValue\u4f5c\u6210\n        knob_value = KnobValue(spec, saved_value)\n\n        # \u5024\u5909\u66f4\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u8ffd\u52a0\uff08\u30b0\u30ed\u30fc\u30d0\u30eb\u30b9\u30c8\u30a2\u306b\u4fdd\u5b58\uff09\n        knob_value.add_change_callback(\n            lambda value: store.set_value(story_id, name, value)\n        )\n\n        # \u30ed\u30fc\u30ab\u30eb\u304a\u3088\u3073\u30b0\u30ed\u30fc\u30d0\u30eb\u30b9\u30c8\u30a2\u306b\u4fdd\u5b58\n        self._knob_values[name] = knob_value\n        store.set_knob_instance(story_id, name, knob_value)\n\n        return knob_value\n\n    @property\n    def knob_values(self) -&gt; Dict[str, KnobValue]:\n        \"\"\"\u767b\u9332\u6e08\u307fKnobValue\u4e00\u89a7\"\"\"\n        return self._knob_values\n\n    def clear_knobs(self):\n        \"\"\"Knob\u3092\u30af\u30ea\u30a2\uff08\u30b9\u30c8\u30fc\u30ea\u30fc\u5207\u308a\u66ff\u3048\u6642\uff09\"\"\"\n        self._knob_values.clear()\n\n    def publish(self, topic: str, **kwargs: Any) -&gt; None:\n        \"\"\"Story \u7a7a\u9593\u5411\u3051 PubSub \u767a\u706b\uff08\u540d\u524d\u7a7a\u9593\u524d\u7f6e\u304d\uff09\u3002\"\"\"\n        if self._publish_callback:\n            self._publish_callback(f\"storybook.{topic}\", kwargs)\n\n    def on_change(self, var: tk.Variable, cb: Callable[[Any], None]) -&gt; None:\n        \"\"\"tk.Variable \u306b\u30c8\u30ec\u30fc\u30b5\u3092\u5f35\u3063\u3066\u5909\u66f4\u3092\u30d5\u30c3\u30af\u3002\"\"\"\n\n        def _update(*_):\n            cb(var.get())\n\n        var.trace_add(\"write\", _update)\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#srcpubsubtkstorybookknobstypespy","title":"<code>src/pubsubtk/storybook/knobs/types.py</code>","text":"<p>Knob\u52d5\u7684\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u306e\u578b\u5b9a\u7fa9</p> <pre><code># storybook/knob/knob_types.py\n\"\"\"Knob\u306e\u578b\u5b9a\u7fa9\u3068\u30c7\u30fc\u30bf\u30af\u30e9\u30b9\"\"\"\n\nfrom __future__ import annotations\n\nfrom typing import Any, List, Optional, Union\n\nfrom pydantic import BaseModel, Field\n\n\nclass KnobSpec(BaseModel):\n    \"\"\"Knob\u306e\u4ed5\u69d8\u5b9a\u7fa9\"\"\"\n\n    name: str\n    type_: type = Field(..., alias=\"type\")\n    default: Any\n    desc: str = \"\"\n    range_: Optional[tuple[Union[int, float], Union[int, float]]] = Field(\n        None, alias=\"range\"\n    )\n    choices: Optional[List[str]] = None\n    multiline: bool = False\n\n    class Config:\n        arbitrary_types_allowed = True\n\n\nclass KnobValue:\n    \"\"\"Knob\u5024\u306e\u52d5\u7684\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08Story\u5185\u3067\u4f7f\u7528\uff09\"\"\"\n\n    def __init__(self, spec: KnobSpec, initial_value: Any = None):\n        self.spec = spec\n        self._value = initial_value if initial_value is not None else spec.default\n        self._callbacks: List[callable] = []\n\n    @property\n    def value(self) -&gt; Any:\n        \"\"\"\u73fe\u5728\u306e\u5024\u3092\u53d6\u5f97\"\"\"\n        return self._value\n\n    @value.setter\n    def value(self, new_value: Any) -&gt; None:\n        \"\"\"\u5024\u3092\u8a2d\u5b9a\u3057\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5b9f\u884c\"\"\"\n        if self._value != new_value:\n            self._value = new_value\n            for callback in self._callbacks:\n                callback(new_value)\n\n    def add_change_callback(self, callback: callable) -&gt; None:\n        \"\"\"\u5024\u5909\u66f4\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u8ffd\u52a0\"\"\"\n        self._callbacks.append(callback)\n\n    def __str__(self) -&gt; str:\n        return str(self._value)\n\n    def __repr__(self) -&gt; str:\n        return f\"KnobValue({self.spec.name}={self._value})\"\n</code></pre>"},{"location":"ai-reference/REFERENCE_FULL/#srcpubsubtkstorybookuitemplatepy","title":"<code>src/pubsubtk/storybook/ui/template.py</code>","text":"<p>Storybook\u30ec\u30a4\u30a2\u30a6\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8</p> <pre><code># storybook/template.py - StorybookTemplate\n\"\"\"3 \u30b9\u30ed\u30c3\u30c8 (sidebar / preview / knobs) \u3092\u6301\u3064\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3002\"\"\"\n\nfrom tkinter import ttk\n\nfrom pubsubtk import TemplateComponentTtk\n\nfrom ..core.state import StorybookState\n\n\nclass StorybookTemplate(TemplateComponentTtk[StorybookState]):\n    \"\"\"Storybook \u306e\u57fa\u672c\u30ec\u30a4\u30a2\u30a6\u30c8\uff08\u30c6\u30fc\u30de\u5bfe\u5fdc\uff09\"\"\"\n\n    def define_slots(self):\n        # \u30e1\u30a4\u30f3\u30ec\u30a4\u30a2\u30a6\u30c8\u8a2d\u5b9a\n        self.columnconfigure(1, weight=1)\n        self.rowconfigure(0, weight=1)\n\n        # \u30b5\u30a4\u30c9\u30d0\u30fc\uff08\u5de6\u5074\uff09\n        sidebar_frame = ttk.Frame(self, width=250)\n        sidebar_frame.grid(\n            row=0, column=0, sticky=\"nsew\", padx=(2, 1), pady=2, rowspan=2\n        )\n        sidebar_frame.grid_propagate(False)  # \u5e45\u3092\u56fa\u5b9a\n\n        # \u30d7\u30ec\u30d3\u30e5\u30fc\u30a8\u30ea\u30a2\uff08\u4e2d\u592e\u4e0a\uff09\n        preview_frame = ttk.LabelFrame(self, text=\"Preview\", padding=5)\n        preview_frame.grid(row=0, column=1, sticky=\"nsew\", padx=(1, 2), pady=(2, 1))\n\n        # Knob\u30d1\u30cd\u30eb\uff08\u4e2d\u592e\u4e0b\uff09\n        knobs_frame = ttk.LabelFrame(self, text=\"Controls\", padding=5)\n        knobs_frame.grid(row=1, column=1, sticky=\"nsew\", padx=(1, 2), pady=(1, 2))\n\n        # \u9ad8\u3055\u6bd4\u7387\u8a2d\u5b9a\uff08Preview 70%, Knobs 30%\uff09\n        self.grid_rowconfigure(0, weight=7)  # Preview\u30a8\u30ea\u30a2\n        self.grid_rowconfigure(1, weight=3)  # Knob\u30a8\u30ea\u30a2\n\n        return {\n            \"sidebar\": sidebar_frame,\n            \"preview\": preview_frame,\n            \"knobs\": knobs_frame,\n        }\n</code></pre>"},{"location":"ai-reference/REFERENCE_SHORT/","title":"REFERENCE_SHORT","text":"<p>\u3053\u306e\u30da\u30fc\u30b8\u306eMarkdown\u3092\u898b\u308b</p>"},{"location":"ai-reference/REFERENCE_SHORT/#pubsubtk-","title":"PubSubTk \u30e9\u30a4\u30d6\u30e9\u30ea - \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30ac\u30a4\u30c9","text":""},{"location":"ai-reference/REFERENCE_SHORT/#_1","title":"\u6982\u8981","text":"<p>PubSubTk \u306f\u3001Pydantic \u3092\u7528\u3044\u305f\u578b\u5b89\u5168\u306a\u72b6\u614b\u7ba1\u7406\u3068\u3001Publish-Subscribe \u30d1\u30bf\u30fc\u30f3\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001Tkinter/ttk \u3092\u4f7f\u3063\u305f GUI \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u69cb\u7bc9\u3067\u304d\u308b Python \u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002</p>"},{"location":"ai-reference/REFERENCE_SHORT/#_2","title":"\u4e3b\u306a\u7279\u5fb4","text":"<ul> <li>UI\u3068\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u306e\u758e\u7d50\u5408 \u2015 Publish/Subscribe\uff08Pub/Sub\uff09\u3067\u90e8\u54c1\u9593\u3092\u975e\u540c\u671f\u30e1\u30c3\u30bb\u30fc\u30b8\u9023\u643a</li> <li>Pydantic\u30e2\u30c7\u30eb \u306b\u3088\u308b\u578b\u5b89\u5168\u306a\u72b6\u614b\u7ba1\u7406\u3002\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3084 JSON Schema \u51fa\u529b\u3082\u7c21\u5358</li> <li>Container / Presentational / Processor 3\u5c64\u5206\u96e2\u30d1\u30bf\u30fc\u30f3\u3092\u6a19\u6e96\u5316\uff08React\u30b9\u30bf\u30a4\u30eb\u306e\u8a2d\u8a08\u3092Tkinter\u3067\u3082\uff09</li> <li>Pub/Sub\u306b\u3088\u308b\u753b\u9762\u9077\u79fb\u30fb\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u7ba1\u7406\u3068\u30ea\u30a2\u30af\u30c6\u30a3\u30d6UI\u66f4\u65b0\u3092\u30b5\u30dd\u30fc\u30c8</li> <li>\u4f9d\u5b58\u306f\u7d14\u6b63Python\u306e\u307f\uff08<code>tkinter</code>, <code>pypubsub</code>, <code>pydantic</code>\uff09\u3002Tk\u30c6\u30fc\u30de\u5909\u66f4\u7528\u306b <code>ttkthemes</code> \u3082\u5229\u7528\u53ef\u80fd</li> </ul>"},{"location":"ai-reference/REFERENCE_SHORT/#_3","title":"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u6982\u8981","text":""},{"location":"ai-reference/REFERENCE_SHORT/#_4","title":"\u69cb\u9020\u30a4\u30e1\u30fc\u30b8","text":"<pre><code>graph LR\n  Store[Store]\n  Processor[Processor]\n  Container[Container]\n  View[Presentational View]\n\n  Processor -- state\u5909\u66f4\u767a\u884c --&gt; Store\n  Store -- state\u5909\u66f4\u901a\u77e5 --&gt; Container\n  Container -- UI\u66f4\u65b0 --&gt; View\n  View -- trigger_event --&gt; Container\n  Container -- action/\u30a4\u30d9\u30f3\u30c8 --&gt; Processor</code></pre>"},{"location":"ai-reference/REFERENCE_SHORT/#_5","title":"\u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5f79\u5272","text":"<ul> <li>Store: Pydantic\u30e2\u30c7\u30eb\u3067\u30a2\u30d7\u30ea\u306e\u72b6\u614b\u3092\u4e00\u5143\u7ba1\u7406\u3002\u578b\u5b89\u5168\u306a\u30a2\u30af\u30bb\u30b9\uff06\u66f4\u65b0\u901a\u77e5\u304c\u5f97\u3089\u308c\u307e\u3059\u3002</li> <li>Container: \u72b6\u614b\u3092\u8cfc\u8aad\u3057\u3001UI\u3068\u9023\u52d5\u3002\u30e6\u30fc\u30b6\u30fc\u64cd\u4f5c\u304b\u3089 Processor \u3078\u306e\u6a4b\u6e21\u3057\u3082\u62c5\u3046\u3002</li> <li>Presentational: \u53d7\u3051\u53d6\u3063\u305f\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u3060\u3051\u306e\u7d14\u7c8bView\u3002\u72b6\u614b\u7ba1\u7406\u30fb\u30ed\u30b8\u30c3\u30af\u306f\u4e00\u5207\u6301\u305f\u306a\u3044\u3002</li> <li>Processor: \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af/\u72b6\u614b\u5909\u66f4\u3092\u96c6\u4e2d\u7ba1\u7406\u3002PubSub\u7d4c\u7531\u3067Container/Store\u3068\u901a\u4fe1\u3002</li> </ul>"},{"location":"ai-reference/REFERENCE_SHORT/#_6","title":"\ud83c\udfaf \u63a8\u5968\u30a4\u30f3\u30dd\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3","text":"<pre><code>from pubsubtk import (\n    TkApplication, ThemedApplication,           # \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n    ContainerComponentTk, ContainerComponentTtk, # \u30b3\u30f3\u30c6\u30ca\n    PresentationalComponentTk, PresentationalComponentTtk, # \u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\n    ProcessorBase,                              # \u30d7\u30ed\u30bb\u30c3\u30b5\n)\nfrom pydantic import BaseModel\nfrom typing import List, Optional, Dict, Any\nimport tkinter as tk\nfrom tkinter import ttk\n</code></pre>"},{"location":"ai-reference/REFERENCE_SHORT/#_7","title":"\u4e3b\u8981\u30e1\u30bd\u30c3\u30c9\u4e00\u89a7","text":"\u30e1\u30bd\u30c3\u30c9 \u8aac\u660e\u30fb\u7528\u9014 \u4e3b\u306a\u5229\u7528\u5c64 <code>pub_switch_container(cls, kwargs)</code> \u30e1\u30a4\u30f3\u753b\u9762\uff08Container\uff09\u3092\u5207\u308a\u66ff\u3048\u308b Container / Processor <code>pub_switch_slot(slot_name, cls, kwargs)</code> \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5185\u306e\u4efb\u610f\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5207\u308a\u66ff\u3048 Container / Processor <code>pub_open_subwindow(cls, win_id, kwargs)</code> \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304f Container / Processor <code>pub_close_subwindow(win_id)</code> \u6307\u5b9a ID \u306e\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b Container / Processor <code>pub_close_all_subwindows()</code> \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u3059\u3079\u3066\u9589\u3058\u308b Container / Processor <code>pub_replace_state(new_state)</code> \u72b6\u614b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5168\u4f53\u3092\u7f6e\u304d\u63db\u3048\u308b Processor / Container <code>pub_update_state(state_path, new_value)</code> \u4efb\u610f\u30d1\u30b9\u306e\u72b6\u614b\u3092\u578b\u5b89\u5168\u306b\u66f4\u65b0 Processor / Container <code>pub_add_to_list(state_path, item)</code> \u30ea\u30b9\u30c8\u8981\u7d20\u3092\u578b\u5b89\u5168\u306b\u8ffd\u52a0 Processor / Container <code>pub_add_to_dict(state_path, key, value)</code> \u8f9e\u66f8\u8981\u7d20\u3092\u578b\u5b89\u5168\u306b\u8ffd\u52a0 Processor / Container <code>pub_register_processor(proc, name)</code> Processor \u3092\u52d5\u7684\u306b\u767b\u9332 Processor <code>pub_delete_processor(name)</code> Processor \u3092\u524a\u9664 Processor <code>pub_enable_undo_redo(state_path, max_history)</code> Undo/Redo \u5c65\u6b74\u3092\u6709\u52b9\u5316 Processor / Container <code>pub_disable_undo_redo(state_path)</code> Undo/Redo \u5c65\u6b74\u3092\u7121\u52b9\u5316 Processor / Container <code>pub_undo(state_path)</code> 1\u3064\u524d\u306e\u5024\u306b\u623b\u3059 Processor / Container <code>pub_redo(state_path)</code> Undo \u3092\u53d6\u308a\u6d88\u3059 Processor / Container <code>sub_undo_status(state_path, handler)</code> Undo/Redo \u72b6\u614b\u5909\u5316\u3092\u8cfc\u8aad Container <code>sub_state_changed(state_path, handler)</code> \u6307\u5b9a\u30d1\u30b9\u306e\u5024\u5909\u66f4\u3092\u8cfc\u8aad\uff08old_value, new_value\u53d7\u4fe1\uff09 Container <code>sub_for_refresh(state_path, handler)</code> \u72b6\u614b\u66f4\u65b0\u6642\u306eUI\u518d\u63cf\u753b\u7528\u30b7\u30f3\u30d7\u30eb\u901a\u77e5\u3092\u8cfc\u8aad\uff08\u5f15\u6570\u306a\u3057\uff09 Container <code>sub_state_added(state_path, handler)</code> \u30ea\u30b9\u30c8\u3078\u306e\u8981\u7d20\u8ffd\u52a0\u3092\u8cfc\u8aad\uff08item, index\u53d7\u4fe1\uff09 Container <code>sub_dict_item_added(state_path, handler)</code> \u8f9e\u66f8\u3078\u306e\u8981\u7d20\u8ffd\u52a0\u3092\u8cfc\u8aad\uff08key, value\u53d7\u4fe1\uff09 Container <code>register_handler(event, cb)</code> Presentational\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067View\u30a4\u30d9\u30f3\u30c8\u306e\u30cf\u30f3\u30c9\u30e9\u767b\u9332 Container <code>trigger_event(event, **kwargs)</code> View\u2192Container\u3078\u4efb\u610f\u30a4\u30d9\u30f3\u30c8\u9001\u51fa Presentational"},{"location":"ai-reference/REFERENCE_SHORT/#_8","title":"\u958b\u767a\u306e\u30dd\u30a4\u30f3\u30c8","text":""},{"location":"ai-reference/REFERENCE_SHORT/#stateproxyide","title":"StateProxy\u306b\u3088\u308bIDE\u9023\u643a","text":"<p>PubSubTk\u306e\u6700\u5927\u306e\u4fa1\u5024\u306f\u3001StateProxy\u306b\u3088\u308b\u5f37\u529b\u306aIDE\u9023\u643a\u3067\u3059\u3002</p> <pre><code># VSCode/PyCharm\u3067\u4ee5\u4e0b\u304c\u5168\u3066\u52b9\u304f\uff1a\nself.store.state.user.name\n#            \u2191     \u2191\n#    Ctrl+Click   Ctrl+Click\n#    \u3067\u5b9a\u7fa9\u3078     \u3067\u5b9a\u7fa9\u3078\n\n# \u2705 F12: \u5b9a\u7fa9\u3078\u79fb\u52d5\n# \u2705 Shift+F12: \u3059\u3079\u3066\u306e\u53c2\u7167\u3092\u691c\u7d22  \n# \u2705 F2: \u5b89\u5168\u306a\u30ea\u30cd\u30fc\u30e0\n# \u2705 Ctrl+Space: \u81ea\u52d5\u88dc\u5b8c\n</code></pre> <p>str()\u304c\u5fc5\u8981\u306a\u30bf\u30a4\u30df\u30f3\u30b0\uff1a</p> <pre><code># \u2705 \u57fa\u672c\u7684\u306a\u4f7f\u7528\uff08str()\u4e0d\u8981\uff09\nself.pub_update_state(self.store.state.counter, 42)\nself.sub_state_changed(self.store.state.todos, self.on_todos_changed)\n\n# \u2705 \u6587\u5b57\u5217\u64cd\u4f5c\u304c\u5fc5\u8981\u306a\u5834\u5408\u306e\u307fstr()\u3092\u4f7f\u7528\npath = str(self.store.state.user.name) + \"_backup\"\nself.pub_update_state(f\"todos.{index}\", updated_todo)\n</code></pre>"},{"location":"ai-reference/REFERENCE_SHORT/#_9","title":"\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u8a2d\u8a08\u6307\u91dd","text":"<p>Container - \u72b6\u614b\u306b\u4f9d\u5b58\u3059\u308b\u51e6\u7406\u3001\u30e6\u30fc\u30b6\u30fc\u64cd\u4f5c\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0</p> <pre><code>class TodoContainer(ContainerComponentTk[AppState]):\n    def setup_subscriptions(self):\n        self.sub_state_changed(self.store.state.todos, self.on_todos_changed)\n\n    def add_todo(self):\n        # \u72b6\u614b\u66f4\u65b0\n        self.pub_add_to_list(self.store.state.todos, new_todo)\n</code></pre> <p>\u5099\u8003: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e <code>__init__</code> \u3067\u306f\u4e0e\u3048\u3089\u308c\u305f <code>*args</code> \u3068 <code>**kwargs</code> \u304c <code>self.args</code> / <code>self.kwargs</code> \u3068\u3057\u3066\u4fdd\u6301\u3055\u308c\u307e\u3059\u3002\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092 <code>open_subwindow</code> \u3067\u958b\u304f\u5834\u5408\u306f <code>win_id</code> \u304c <code>self.kwargs</code> \u306b\u81ea\u52d5\u8ffd\u52a0\u3055\u308c\u3001 <code>pub_close_subwindow(self.kwargs[\"win_id\"])</code> \u3067\u81ea\u8eab\u3092\u9589\u3058\u3089\u308c\u307e\u3059\u3002\u4eca\u5f8c\u3082\u540c\u69d8\u306e \u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u304c\u8ffd\u52a0\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>Presentational - \u7d14\u7c8b\u306a\u8868\u793a\u3001\u518d\u5229\u7528\u53ef\u80fd\u306a\u90e8\u54c1</p> <pre><code>class TodoItemView(PresentationalComponentTk):\n    def update_data(self, todo_item: TodoItem):\n        self.label.config(text=todo_item.text)\n\n    def on_click(self):\n        # Container\u5074\u306b\u30a4\u30d9\u30f3\u30c8\u901a\u77e5\n        self.trigger_event(\"toggle\", todo_id=self.todo_item.id)\n</code></pre> <p>Template - \u30ec\u30a4\u30a2\u30a6\u30c8\u69cb\u9020\u306e\u5b9a\u7fa9\u3001\u30b9\u30ed\u30c3\u30c8\u30d9\u30fc\u30b9\u306e\u753b\u9762\u69cb\u6210</p> <pre><code>class AppTemplate(TemplateComponentTk[AppState]):\n    def define_slots(self):\n        # \u5404\u9818\u57df\u3092\u5b9a\u7fa9\u30fb\u914d\u7f6e\n        self.header = tk.Frame(self, height=60)\n        self.header.pack(fill=tk.X)\n\n        self.main = tk.Frame(self)\n        self.main.pack(fill=tk.BOTH, expand=True)\n\n        self.sidebar = tk.Frame(self, width=200)\n        self.sidebar.pack(side=tk.RIGHT, fill=tk.Y)\n\n        return {\n            \"header\": self.header,\n            \"main\": self.main,\n            \"sidebar\": self.sidebar\n        }\n\n# \u4f7f\u7528\u4f8b\napp.set_template(AppTemplate)\napp.pub_switch_slot(\"header\", HeaderView)\napp.pub_switch_slot(\"sidebar\", NavigationPanel)\n</code></pre> <p>Processor - \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3001\u8907\u96d1\u306a\u72b6\u614b\u64cd\u4f5c</p> <pre><code>class TodoProcessor(ProcessorBase[AppState]):\n    def setup_subscriptions(self):\n        self.subscribe(\"todo.bulk_update\", self.handle_bulk_update)\n\n    def handle_bulk_update(self, todo_ids: List[int]):\n        # \u8907\u96d1\u306a\u30ed\u30b8\u30c3\u30af\u51e6\u7406\n        pass\n</code></pre>"},{"location":"ai-reference/REFERENCE_SHORT/#undoredo","title":"Undo/Redo \u6a5f\u80fd","text":"<p>PubSubTk \u3067\u306f\u3001\u4efb\u610f\u306e\u72b6\u614b\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u3066 Undo/Redo \u5c65\u6b74\u3092\u7ba1\u7406\u3067\u304d\u307e\u3059\u3002 <code>pub_enable_undo_redo()</code> \u3067\u5c65\u6b74\u3092\u6709\u52b9\u5316\u3059\u308b\u3068\u81ea\u52d5\u7684\u306b\u5909\u66f4\u304c\u8ffd\u8de1\u3055\u308c\u3001 <code>pub_undo()</code> \u3068 <code>pub_redo()</code> \u3067\u5024\u3092\u623b\u3057\u305f\u308a\u3084\u308a\u76f4\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002\u5c65\u6b74\u6570\u306f <code>max_history</code> \u5f15\u6570\u3067\u8abf\u6574\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code># Undo/Redo \u306e\u6709\u52b9\u5316\nself.pub_enable_undo_redo(str(self.store.state.counter), max_history=20)\n\n# \u64cd\u4f5c\nself.pub_undo(str(self.store.state.counter))\nself.pub_redo(str(self.store.state.counter))\n\n# \u5c65\u6b74\u8ffd\u8de1\u306e\u505c\u6b62\nself.pub_disable_undo_redo(str(self.store.state.counter))\n</code></pre> <p><code>sub_undo_status()</code> \u3092\u4f7f\u3046\u3068\u3001Undo/Redo \u53ef\u80fd\u304b\u3069\u3046\u304b\u3084\u5c65\u6b74\u6570\u3092\u8cfc\u8aad\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ai-reference/REFERENCE_SHORT/#pubsub","title":"\u30ab\u30b9\u30bf\u30e0\u30c8\u30d4\u30c3\u30af\u30fbPubSub\u62e1\u5f35","text":"<p>AutoNamedTopic\u306b\u3088\u308b\u30ab\u30b9\u30bf\u30e0\u30c8\u30d4\u30c3\u30af\u4f5c\u6210:</p> <pre><code>from pubsubtk import AutoNamedTopic\nfrom enum import auto\n\nclass MyAppTopic(AutoNamedTopic):\n    USER_LOGIN = auto()        # -&gt; \"MyAppTopic.user_login\"\n    DATA_LOADED = auto()       # -&gt; \"MyAppTopic.data_loaded\"\n    ERROR_OCCURRED = auto()    # -&gt; \"MyAppTopic.error_occurred\"\n    FILE_EXPORT = auto()       # -&gt; \"MyAppTopic.file_export\"\n\n# \u4f7f\u7528\u4f8b\nclass MyProcessor(ProcessorBase[AppState]):\n    def setup_subscriptions(self):\n        self.subscribe(MyAppTopic.USER_LOGIN, self.handle_user_login)\n        self.subscribe(MyAppTopic.DATA_LOADED, self.handle_data_loaded)\n\n    def some_action(self):\n        # \u30ab\u30b9\u30bf\u30e0\u30c8\u30d4\u30c3\u30af\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\n        self.publish(MyAppTopic.FILE_EXPORT, format=\"csv\", filename=\"data.csv\")\n</code></pre> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u30c8\u30d4\u30c3\u30af vs \u30ab\u30b9\u30bf\u30e0\u30c8\u30d4\u30c3\u30af\u306e\u4f7f\u3044\u5206\u3051:</p> <pre><code># \u2705 \u30c7\u30d5\u30a9\u30eb\u30c8\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\uff08\u63a8\u5968\uff09\nself.pub_update_state(self.store.state.count, 42)      # \u72b6\u614b\u66f4\u65b0\nself.pub_switch_container(NewContainer)                # \u753b\u9762\u5207\u308a\u66ff\u3048\nself.pub_open_subwindow(DialogContainer)               # \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\nself.pub_enable_undo_redo(str(self.store.state.count))               # Undo\u5c65\u6b74\u3092\u958b\u59cb\nself.pub_undo(str(self.store.state.count))                    # Undo\nself.pub_redo(str(self.store.state.count))                    # Redo\nself.pub_disable_undo_redo(str(self.store.state.count))      # \u5c65\u6b74\u505c\u6b62\n\n# \u2705 \u30ab\u30b9\u30bf\u30e0\u30c8\u30d4\u30c3\u30af\u3092\u4f7f\u7528\uff08\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u7279\u6709\u306e\u901a\u4fe1\uff09\nself.publish(MyAppTopic.USER_LOGIN, user_id=123)       # \u30a2\u30d7\u30ea\u56fa\u6709\u306e\u30a4\u30d9\u30f3\u30c8\nself.subscribe(MyAppTopic.DATA_LOADED, self.on_data)   # \u8907\u96d1\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\n</code></pre>"},{"location":"ai-reference/REFERENCE_SHORT/#_10","title":"\u3088\u304f\u3042\u308b\u554f\u984c\u3068\u89e3\u6c7a\u6cd5","text":"<p>StateProxy\u4f7f\u7528\u6642\u306e\u30a8\u30e9\u30fc:</p> <pre><code># \u274c \u30a8\u30e9\u30fc\u306b\u306a\u308b\u4f8b\npath = self.store.state.user.name.replace(\"old\", \"new\")  # AttributeError\n\n# \u2705 \u6b63\u3057\u3044\u4f7f\u3044\u65b9\npath = str(self.store.state.user.name).replace(\"old\", \"new\")\n</code></pre> <p>\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u306e\u6d3b\u7528:</p> <pre><code># \u2705 \u63a8\u5968: \u7d44\u307f\u8fbc\u307f\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\nself.pub_update_state(self.store.state.count, 42)\nself.pub_switch_container(OtherContainer)\nself.pub_enable_undo_redo(str(self.store.state.count))\nself.pub_undo(str(self.store.state.count))\nself.pub_redo(str(self.store.state.count))\nself.pub_disable_undo_redo(str(self.store.state.count))\n\n# \u274c \u975e\u63a8\u5968: \u624b\u52d5\u3067\u30c8\u30d4\u30c3\u30af\u64cd\u4f5c\nself.publish(DefaultUpdateTopic.UPDATE_STATE, state_path=\"count\", new_value=42)\n</code></pre>"},{"location":"ai-reference/REFERENCE_SHORT/#_11","title":"\u5b9f\u8df5\u4f8b","text":""},{"location":"ai-reference/REFERENCE_SHORT/#_12","title":"\u5168\u6a5f\u80fd\u3092\u6d3b\u7528\u3057\u305f\u30b7\u30f3\u30d7\u30eb\u306a\u30ab\u30a6\u30f3\u30bf\u30fc\u30a2\u30d7\u30ea","text":"<p>PubSubDefaultTopicBase\u306e\u5168\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u305f\u5c0f\u898f\u6a21\u306a\u30c7\u30e2\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3</p> <pre><code>\"\"\"\nPubSubTk \u5168\u6a5f\u80fd\u30b3\u30f3\u30d1\u30af\u30c8\u30c7\u30e2\n\nPubSubDefaultTopicBase\u306e\u5168\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u305f\u5c0f\u898f\u6a21\u306a\u30c7\u30e2\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\"\"\"\n\nimport asyncio\nimport json\nimport tkinter as tk\nfrom enum import auto\nfrom tkinter import filedialog, messagebox, simpledialog\nfrom typing import List\n\nfrom pydantic import BaseModel\n\nfrom pubsubtk import (\n    AutoNamedTopic,\n    ContainerComponentTk,\n    PresentationalComponentTk,\n    ProcessorBase,\n    TemplateComponentTk,\n    TkApplication,\n    make_async_task,\n)\n\n\n# \u30ab\u30b9\u30bf\u30e0\u30c8\u30d4\u30c3\u30af\nclass AppTopic(AutoNamedTopic):\n    INCREMENT = auto()\n    RESET = auto()\n    MILESTONE = auto()\n\n\n# \u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\nclass TodoItem(BaseModel):\n    id: int\n    text: str\n    completed: bool = False\n\n\nclass AppState(BaseModel):\n    counter: int = 0\n    total_clicks: int = 0\n    todos: List[TodoItem] = []\n    next_todo_id: int = 1\n    settings: dict = {\"theme\": \"default\", \"auto_save\": \"true\"}\n    current_view: str = \"main\"\n\n\n# =============================================================================\n# \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\uff083\u30b9\u30ed\u30c3\u30c8\u69cb\u6210\uff09\n# =============================================================================\n\n\nclass AppTemplate(TemplateComponentTk[AppState]):\n    def define_slots(self):\n        # \u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\n        self.navbar = tk.Frame(self, height=40, bg=\"navy\")\n        self.navbar.pack(fill=tk.X)\n        self.navbar.pack_propagate(False)\n\n        # \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30f3\u30c4\n        self.main_area = tk.Frame(self)\n        self.main_area.pack(fill=tk.BOTH, expand=True, side=tk.LEFT)\n\n        # \u30b5\u30a4\u30c9\u30d0\u30fc\n        self.sidebar = tk.Frame(self, width=200, bg=\"lightgray\")\n        self.sidebar.pack(fill=tk.Y, side=tk.RIGHT)\n        self.sidebar.pack_propagate(False)\n\n        return {\n            \"navbar\": self.navbar,\n            \"main\": self.main_area,\n            \"sidebar\": self.sidebar,\n        }\n\n\n# =============================================================================\n# Presentational\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\uff08\u7d14\u7c8b\u8868\u793a\uff09\n# =============================================================================\n\n\nclass UndoRedoControlView(PresentationalComponentTk):\n    \"\"\"Undo/Redo\u64cd\u4f5c\u7528\u306ePresentational\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\"\"\"\n\n    def setup_ui(self):\n        self.configure(relief=tk.RIDGE, borderwidth=1, bg=\"lightyellow\")\n\n        # \u30bf\u30a4\u30c8\u30eb\n        title_label = tk.Label(\n            self, text=\"\ud83d\udd04 \u5c65\u6b74\u64cd\u4f5c\", font=(\"Arial\", 10, \"bold\"), bg=\"lightyellow\"\n        )\n        title_label.pack(pady=2)\n\n        # \u30dc\u30bf\u30f3\u30d5\u30ec\u30fc\u30e0\n        btn_frame = tk.Frame(self, bg=\"lightyellow\")\n        btn_frame.pack(pady=2)\n\n        self.undo_btn = tk.Button(btn_frame, text=\"\u2190 Undo\", state=\"disabled\", width=8)\n        self.undo_btn.pack(side=tk.LEFT, padx=2)\n\n        self.redo_btn = tk.Button(btn_frame, text=\"Redo \u2192\", state=\"disabled\", width=8)\n        self.redo_btn.pack(side=tk.LEFT, padx=2)\n\n        # \u30b9\u30c6\u30fc\u30bf\u30b9\u8868\u793a\n        self.status_label = tk.Label(\n            self, text=\"\u7121\u52b9\", font=(\"Arial\", 8), bg=\"lightyellow\", fg=\"gray\"\n        )\n        self.status_label.pack(pady=1)\n\n    def setup_handlers(self, undo_handler, redo_handler):\n        \"\"\"Undo/Redo\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u8a2d\u5b9a\"\"\"\n        self.undo_btn.config(command=undo_handler)\n        self.redo_btn.config(command=redo_handler)\n\n    def update_status(\n        self, can_undo: bool, can_redo: bool, undo_count: int, redo_count: int\n    ):\n        \"\"\"Undo/Redo\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u66f4\u65b0\"\"\"\n        # \u30dc\u30bf\u30f3\u306e\u6709\u52b9/\u7121\u52b9\u72b6\u614b\n        self.undo_btn.config(\n            state=\"normal\" if can_undo else \"disabled\",\n            text=f\"\u2190 Undo ({undo_count})\" if undo_count &gt; 0 else \"\u2190 Undo\",\n        )\n        self.redo_btn.config(\n            state=\"normal\" if can_redo else \"disabled\",\n            text=f\"Redo ({redo_count}) \u2192\" if redo_count &gt; 0 else \"Redo \u2192\",\n        )\n\n        # \u30b9\u30c6\u30fc\u30bf\u30b9\u30c6\u30ad\u30b9\u30c8\n        if can_undo or can_redo:\n            status = f\"Undo:{undo_count} Redo:{redo_count}\"\n            self.status_label.config(text=status, fg=\"black\")\n        else:\n            self.status_label.config(text=\"\u5c65\u6b74\u306a\u3057\", fg=\"gray\")\n\n\nclass TodoItemView(PresentationalComponentTk):\n    def setup_ui(self):\n        self.configure(relief=tk.RAISED, borderwidth=1, padx=5, pady=3)\n\n        self.var = tk.BooleanVar()\n        self.checkbox = tk.Checkbutton(self, variable=self.var, command=self.on_toggle)\n        self.checkbox.pack(side=tk.LEFT)\n\n        self.label = tk.Label(self, text=\"\", anchor=\"w\")\n        self.label.pack(side=tk.LEFT, fill=tk.X, expand=True)\n\n        self.delete_btn = tk.Button(self, text=\"\u00d7\", width=3, command=self.on_delete)\n        self.delete_btn.pack(side=tk.RIGHT)\n\n    def update_data(self, todo: TodoItem):\n        self.todo = todo\n        self.var.set(todo.completed)\n        text = f\"\u2713 {todo.text}\" if todo.completed else todo.text\n        self.label.config(text=text, fg=\"gray\" if todo.completed else \"black\")\n\n    def on_toggle(self):\n        self.trigger_event(\"toggle\", todo_id=self.todo.id)\n\n    def on_delete(self):\n        self.trigger_event(\"delete\", todo_id=self.todo.id)\n\n\nclass StatsView(PresentationalComponentTk):\n    def setup_ui(self):\n        self.configure(bg=\"lightblue\", relief=tk.SUNKEN, borderwidth=2)\n\n        tk.Label(self, text=\"\ud83d\udcca \u7d71\u8a08\", font=(\"Arial\", 12, \"bold\"), bg=\"lightblue\").pack(\n            pady=5\n        )\n\n        self.stats_label = tk.Label(self, text=\"\", bg=\"lightblue\", justify=tk.LEFT)\n        self.stats_label.pack(padx=10, pady=5, fill=tk.BOTH, expand=True)\n\n    def update_stats(\n        self,\n        counter: int,\n        total_clicks: int,\n        total_todos: int,\n        completed_todos: int,\n        settings_count: int,\n        current_view: str,\n        counter_undo_status: dict = None,\n        todos_undo_status: dict = None,\n    ):\n        \"\"\"\u7d14\u7c8b\u306a\u8868\u793a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8 - \u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u306e\u307f\u3092\u500b\u5225\u306b\u53d7\u3051\u53d6\u308b\"\"\"\n        uncompleted = total_todos - completed_todos\n\n        # \u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u8a2d\u5b9a\n        counter_undo_status = counter_undo_status or {\n            \"can_undo\": False,\n            \"can_redo\": False,\n            \"undo_count\": 0,\n            \"redo_count\": 0,\n        }\n        todos_undo_status = todos_undo_status or {\n            \"can_undo\": False,\n            \"can_redo\": False,\n            \"undo_count\": 0,\n            \"redo_count\": 0,\n        }\n\n        stats = f\"\"\"\u30ab\u30a6\u30f3\u30bf\u30fc: {counter}\n\u7dcf\u30af\u30ea\u30c3\u30af: {total_clicks}\n\nTodo\u7d71\u8a08:\n\u30fb\u7dcf\u6570: {total_todos}\n\u30fb\u5b8c\u4e86: {completed_todos}\n\u30fb\u672a\u5b8c\u4e86: {uncompleted}\n\n\u8a2d\u5b9a\u6570: {settings_count}\n\u73fe\u5728\u753b\u9762: {current_view}\n\n\ud83d\udd04 \u5c65\u6b74\u72b6\u6cc1:\n\u30ab\u30a6\u30f3\u30bf\u30fc\u5c65\u6b74:\n\u30fbUndo: {counter_undo_status[\"undo_count\"]}\u56de\n\u30fbRedo: {counter_undo_status[\"redo_count\"]}\u56de\n\nTodo\u5c65\u6b74:\n\u30fbUndo: {todos_undo_status[\"undo_count\"]}\u56de\n\u30fbRedo: {todos_undo_status[\"redo_count\"]}\u56de\"\"\"\n\n        self.stats_label.config(text=stats)\n\n\n# =============================================================================\n# Container\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\uff08\u72b6\u614b\u9023\u643a\uff09\n# =============================================================================\n\n\nclass NavbarContainer(ContainerComponentTk[AppState]):\n    def setup_ui(self):\n        self.configure(bg=\"navy\")\n\n        tk.Label(\n            self,\n            text=\"\ud83c\udfaf PubSubTk Demo (w/ Undo/Redo)\",\n            fg=\"white\",\n            bg=\"navy\",\n            font=(\"Arial\", 14, \"bold\"),\n        ).pack(side=tk.LEFT, padx=10, pady=5)\n\n        nav_frame = tk.Frame(self, bg=\"navy\")\n        nav_frame.pack(side=tk.RIGHT, padx=10)\n\n        self.main_btn = tk.Button(nav_frame, text=\"\u30e1\u30a4\u30f3\", command=self.switch_to_main)\n        self.main_btn.pack(side=tk.LEFT, padx=2)\n\n        self.todo_btn = tk.Button(nav_frame, text=\"Todo\", command=self.switch_to_todo)\n        self.todo_btn.pack(side=tk.LEFT, padx=2)\n\n    def setup_subscriptions(self):\n        self.sub_state_changed(self.store.state.current_view, self.on_view_changed)\n\n    def refresh_from_state(self):\n        state = self.store.get_current_state()\n        self.update_buttons(state.current_view)\n\n    def on_view_changed(self, old_value, new_value):\n        self.update_buttons(new_value)\n\n    def update_buttons(self, current_view: str):\n        self.main_btn.config(\n            bg=\"lightblue\" if current_view == \"main\" else \"SystemButtonFace\"\n        )\n        self.todo_btn.config(\n            bg=\"lightblue\" if current_view == \"todo\" else \"SystemButtonFace\"\n        )\n\n    def switch_to_main(self):\n        self.pub_update_state(self.store.state.current_view, \"main\")\n        self.pub_switch_slot(\"main\", MainContainer)\n\n    def switch_to_todo(self):\n        self.pub_update_state(self.store.state.current_view, \"todo\")\n        self.pub_switch_slot(\"main\", TodoContainer)\n\n\nclass MainContainer(ContainerComponentTk[AppState]):\n    def setup_ui(self):\n        tk.Label(self, text=\"\ud83c\udfe0 \u30e1\u30a4\u30f3\u30d3\u30e5\u30fc\", font=(\"Arial\", 16, \"bold\")).pack(pady=10)\n\n        # \u30ab\u30a6\u30f3\u30bf\u30fc\n        self.counter_label = tk.Label(self, text=\"0\", font=(\"Arial\", 32))\n        self.counter_label.pack(pady=20)\n\n        # Undo/Redo\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\uff08\u30ab\u30a6\u30f3\u30bf\u30fc\u7528\uff09\n        self.counter_undo_control = UndoRedoControlView(self)\n        self.counter_undo_control.pack(pady=5)\n        self.counter_undo_control.setup_handlers(\n            undo_handler=self.undo_counter, redo_handler=self.redo_counter\n        )\n\n        # \u30dc\u30bf\u30f3\u7fa4\n        btn_frame = tk.Frame(self)\n        btn_frame.pack(pady=10)\n\n        tk.Button(btn_frame, text=\"\u30ab\u30a6\u30f3\u30c8\", command=self.increment).pack(\n            side=tk.LEFT, padx=5\n        )\n        tk.Button(btn_frame, text=\"\u30ea\u30bb\u30c3\u30c8\", command=self.reset).pack(\n            side=tk.LEFT, padx=5\n        )\n        tk.Button(btn_frame, text=\"\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\", command=self.open_sub).pack(\n            side=tk.LEFT, padx=5\n        )\n\n        # Undo/Redo\u5236\u5fa1\u30dc\u30bf\u30f3\n        undo_control_frame = tk.Frame(self)\n        undo_control_frame.pack(pady=5)\n\n        self.enable_undo_btn = tk.Button(\n            undo_control_frame,\n            text=\"\u5c65\u6b74\u8a18\u9332ON\",\n            command=self.enable_counter_undo,\n            bg=\"lightgreen\",\n        )\n        self.enable_undo_btn.pack(side=tk.LEFT, padx=5)\n\n        self.disable_undo_btn = tk.Button(\n            undo_control_frame,\n            text=\"\u5c65\u6b74\u8a18\u9332OFF\",\n            command=self.disable_counter_undo,\n            bg=\"lightcoral\",\n            state=\"disabled\",\n        )\n        self.disable_undo_btn.pack(side=tk.LEFT, padx=5)\n\n        # \u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\n        file_frame = tk.Frame(self)\n        file_frame.pack(pady=10)\n\n        tk.Button(file_frame, text=\"\u4fdd\u5b58\", command=self.save_data).pack(\n            side=tk.LEFT, padx=5\n        )\n        tk.Button(file_frame, text=\"\u8aad\u8fbc\", command=self.load_data).pack(\n            side=tk.LEFT, padx=5\n        )\n\n        # \u8a2d\u5b9a\u64cd\u4f5c\uff08\u8f9e\u66f8\u6a5f\u80fd\u30c6\u30b9\u30c8\uff09\n        setting_frame = tk.Frame(self)\n        setting_frame.pack(pady=10)\n\n        tk.Button(setting_frame, text=\"\u8a2d\u5b9a\u8ffd\u52a0\", command=self.add_setting).pack(\n            side=tk.LEFT, padx=5\n        )\n        tk.Button(\n            setting_frame, text=\"\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u8ffd\u52a0\", command=self.add_processor\n        ).pack(side=tk.LEFT, padx=5)\n\n        # \u5371\u967a\u306a\u64cd\u4f5c\n        tk.Button(\n            self, text=\"\u5168\u72b6\u614b\u30ea\u30bb\u30c3\u30c8\", command=self.reset_all, bg=\"red\", fg=\"white\"\n        ).pack(pady=10)\n\n    def setup_subscriptions(self):\n        self.sub_state_changed(self.store.state.counter, self.on_counter_changed)\n        self.subscribe(AppTopic.MILESTONE, self.on_milestone)\n\n        # \u30ab\u30a6\u30f3\u30bf\u30fc\u306eUndo/Redo\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u5316\u3092\u8cfc\u8aad\n        self.sub_undo_status(str(self.store.state.counter), self.on_counter_undo_status)\n\n    def refresh_from_state(self):\n        state = self.store.get_current_state()\n        self.counter_label.config(text=str(state.counter))\n\n    def on_counter_changed(self, old_value, new_value):\n        self.counter_label.config(text=str(new_value))\n\n    def on_counter_undo_status(\n        self, can_undo: bool, can_redo: bool, undo_count: int, redo_count: int\n    ):\n        \"\"\"\u30ab\u30a6\u30f3\u30bf\u30fc\u306eUndo/Redo\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u5316\u30cf\u30f3\u30c9\u30e9\u30fc\"\"\"\n        self.counter_undo_control.update_status(\n            can_undo, can_redo, undo_count, redo_count\n        )\n\n    def enable_counter_undo(self):\n        \"\"\"\u30ab\u30a6\u30f3\u30bf\u30fc\u306eUndo/Redo\u6a5f\u80fd\u3092\u6709\u52b9\u5316\"\"\"\n        self.pub_enable_undo_redo(str(self.store.state.counter), max_history=20)\n        self.enable_undo_btn.config(state=\"disabled\")\n        self.disable_undo_btn.config(state=\"normal\")\n\n    def disable_counter_undo(self):\n        \"\"\"\u30ab\u30a6\u30f3\u30bf\u30fc\u306eUndo/Redo\u6a5f\u80fd\u3092\u7121\u52b9\u5316\"\"\"\n        self.pub_disable_undo_redo(str(self.store.state.counter))\n        self.enable_undo_btn.config(state=\"normal\")\n        self.disable_undo_btn.config(state=\"disabled\")\n\n    def undo_counter(self):\n        \"\"\"\u30ab\u30a6\u30f3\u30bf\u30fc\u3092Undo\"\"\"\n        self.pub_undo(str(self.store.state.counter))\n\n    def redo_counter(self):\n        \"\"\"\u30ab\u30a6\u30f3\u30bf\u30fc\u3092Redo\"\"\"\n        self.pub_redo(str(self.store.state.counter))\n\n    def increment(self):\n        self.publish(AppTopic.INCREMENT)\n\n    def reset(self):\n        self.publish(AppTopic.RESET)\n\n    def open_sub(self):\n        self.pub_open_subwindow(SubWindow)\n\n    @make_async_task\n    async def save_data(self):\n        filename = filedialog.asksaveasfilename(defaultextension=\".json\")\n        if filename:\n            await asyncio.sleep(0.3)  # \u4fdd\u5b58\u51e6\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n            state = self.store.get_current_state()\n            with open(filename, \"w\") as f:\n                json.dump(state.model_dump(), f, indent=2)\n            messagebox.showinfo(\"\u5b8c\u4e86\", \"\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f\")\n\n    @make_async_task\n    async def load_data(self):\n        filename = filedialog.askopenfilename(filetypes=[(\"JSON files\", \"*.json\")])\n        if filename:\n            await asyncio.sleep(0.3)  # \u8aad\u8fbc\u51e6\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n            with open(filename, \"r\") as f:\n                data = json.load(f)\n            new_state = AppState.model_validate(data)\n            self.pub_replace_state(new_state)\n            # \u72b6\u614b\u30ea\u30bb\u30c3\u30c8\u5f8c\u306f\u753b\u9762\u3082\u9069\u5207\u306b\u5207\u308a\u66ff\u3048\u308b\n            self.pub_switch_slot(\"main\", MainContainer)\n            messagebox.showinfo(\"\u5b8c\u4e86\", \"\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3057\u305f\")\n\n    def add_setting(self):\n        key = simpledialog.askstring(\"\u8a2d\u5b9a\u8ffd\u52a0\", \"\u30ad\u30fc\u3092\u5165\u529b:\")\n        if key:\n            value = simpledialog.askstring(\"\u8a2d\u5b9a\u8ffd\u52a0\", \"\u5024\u3092\u5165\u529b:\")\n            if value:\n                # pub_add_to_dict\u4f7f\u7528\n                self.pub_add_to_dict(self.store.state.settings, key, value)\n\n    @make_async_task\n    async def add_processor(self):\n        await asyncio.sleep(0.5)  # \u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u521d\u671f\u5316\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n        try:\n            # pub_register_processor\u4f7f\u7528\n            self.pub_register_processor(DummyProcessor, \"dummy\")\n            messagebox.showinfo(\"\u6210\u529f\", \"\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\")\n        except Exception as e:\n            messagebox.showerror(\"\u30a8\u30e9\u30fc\", str(e))\n\n    @make_async_task\n    async def reset_all(self):\n        if messagebox.askyesno(\"\u78ba\u8a8d\", \"\u5168\u72b6\u614b\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3059\u304b\uff1f\"):\n            await asyncio.sleep(1.0)  # \u91cd\u3044\u51e6\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n            # pub_replace_state\u4f7f\u7528\n            self.pub_replace_state(AppState())\n            # \u30ea\u30bb\u30c3\u30c8\u5f8c\u306f\u30e1\u30a4\u30f3\u753b\u9762\u306b\u623b\u308b\n            self.pub_switch_slot(\"main\", MainContainer)\n            messagebox.showinfo(\"\u5b8c\u4e86\", \"\u72b6\u614b\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3057\u305f\")\n\n    def on_milestone(self, value: int):\n        messagebox.showinfo(\"\u30de\u30a4\u30eb\u30b9\u30c8\u30fc\u30f3!\", f\"{value}\u306b\u5230\u9054\uff01\")\n\n\nclass TodoContainer(ContainerComponentTk[AppState]):\n    def setup_ui(self):\n        tk.Label(self, text=\"\ud83d\udcdd Todo\u7ba1\u7406\", font=(\"Arial\", 16, \"bold\")).pack(pady=10)\n\n        # Todo\u7528Undo/Redo\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\n        self.todo_undo_control = UndoRedoControlView(self)\n        self.todo_undo_control.pack(pady=5)\n        self.todo_undo_control.setup_handlers(\n            undo_handler=self.undo_todos, redo_handler=self.redo_todos\n        )\n\n        # Undo/Redo\u5236\u5fa1\n        undo_control_frame = tk.Frame(self)\n        undo_control_frame.pack(pady=5)\n\n        self.enable_todo_undo_btn = tk.Button(\n            undo_control_frame,\n            text=\"Todo\u5c65\u6b74ON\",\n            command=self.enable_todo_undo,\n            bg=\"lightgreen\",\n        )\n        self.enable_todo_undo_btn.pack(side=tk.LEFT, padx=5)\n\n        self.disable_todo_undo_btn = tk.Button(\n            undo_control_frame,\n            text=\"Todo\u5c65\u6b74OFF\",\n            command=self.disable_todo_undo,\n            bg=\"lightcoral\",\n            state=\"disabled\",\n        )\n        self.disable_todo_undo_btn.pack(side=tk.LEFT, padx=5)\n\n        # Todo\u8ffd\u52a0\n        add_frame = tk.Frame(self)\n        add_frame.pack(fill=tk.X, padx=10, pady=5)\n\n        self.entry = tk.Entry(add_frame)\n        self.entry.pack(side=tk.LEFT, fill=tk.X, expand=True, padx=5)\n        self.entry.bind(\"&lt;Return&gt;\", lambda e: self.add_todo())\n\n        tk.Button(add_frame, text=\"\u8ffd\u52a0\", command=self.add_todo).pack(side=tk.RIGHT)\n\n        # Todo\u30ea\u30b9\u30c8\n        list_frame = tk.Frame(self, relief=tk.SUNKEN, borderwidth=2)\n        list_frame.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)\n\n        # \u30b9\u30af\u30ed\u30fc\u30eb\u53ef\u80fd\u30d5\u30ec\u30fc\u30e0\n        canvas = tk.Canvas(list_frame)\n        scrollbar = tk.Scrollbar(list_frame, orient=\"vertical\", command=canvas.yview)\n        self.scrollable_frame = tk.Frame(canvas)\n\n        self.scrollable_frame.bind(\n            \"&lt;Configure&gt;\", lambda e: canvas.configure(scrollregion=canvas.bbox(\"all\"))\n        )\n\n        canvas.create_window((0, 0), window=self.scrollable_frame, anchor=\"nw\")\n        canvas.configure(yscrollcommand=scrollbar.set)\n\n        canvas.pack(side=\"left\", fill=\"both\", expand=True)\n        scrollbar.pack(side=\"right\", fill=\"y\")\n\n        self.todo_widgets = {}\n\n    def setup_subscriptions(self):\n        # sub_state_added\u3068sub_for_refresh\u4f7f\u7528\n        self.sub_state_added(self.store.state.todos, self.on_todo_added)\n        self.sub_for_refresh(self.store.state.todos, self.refresh_todo_list)\n\n        # Todo\u30ea\u30b9\u30c8\u306eUndo/Redo\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u5316\u3092\u8cfc\u8aad\n        self.sub_undo_status(str(self.store.state.todos), self.on_todo_undo_status)\n\n    def refresh_from_state(self):\n        self.refresh_todo_list()\n\n    def on_todo_undo_status(\n        self, can_undo: bool, can_redo: bool, undo_count: int, redo_count: int\n    ):\n        \"\"\"Todo\u30ea\u30b9\u30c8\u306eUndo/Redo\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u5316\u30cf\u30f3\u30c9\u30e9\u30fc\"\"\"\n        self.todo_undo_control.update_status(can_undo, can_redo, undo_count, redo_count)\n\n    def enable_todo_undo(self):\n        \"\"\"Todo\u30ea\u30b9\u30c8\u306eUndo/Redo\u6a5f\u80fd\u3092\u6709\u52b9\u5316\"\"\"\n        self.pub_enable_undo_redo(str(self.store.state.todos), max_history=15)\n        self.enable_todo_undo_btn.config(state=\"disabled\")\n        self.disable_todo_undo_btn.config(state=\"normal\")\n\n    def disable_todo_undo(self):\n        \"\"\"Todo\u30ea\u30b9\u30c8\u306eUndo/Redo\u6a5f\u80fd\u3092\u7121\u52b9\u5316\"\"\"\n        self.pub_disable_undo_redo(str(self.store.state.todos))\n        self.enable_todo_undo_btn.config(state=\"normal\")\n        self.disable_todo_undo_btn.config(state=\"disabled\")\n\n    def undo_todos(self):\n        \"\"\"Todo\u30ea\u30b9\u30c8\u3092Undo\"\"\"\n        self.pub_undo(str(self.store.state.todos))\n\n    def redo_todos(self):\n        \"\"\"Todo\u30ea\u30b9\u30c8\u3092Redo\"\"\"\n        self.pub_redo(str(self.store.state.todos))\n\n    def refresh_todo_list(self):\n        # \u65e2\u5b58\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u30af\u30ea\u30a2\n        for widget in self.todo_widgets.values():\n            widget.destroy()\n        self.todo_widgets.clear()\n\n        # \u65b0\u3057\u3044\u30ea\u30b9\u30c8\u3092\u63cf\u753b\n        state = self.store.get_current_state()\n        for todo in state.todos:\n            todo_widget = TodoItemView(self.scrollable_frame)\n            todo_widget.pack(fill=tk.X, padx=5, pady=2)\n            todo_widget.update_data(todo)\n\n            # \u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u767b\u9332\n            todo_widget.register_handler(\"toggle\", self.toggle_todo)\n            todo_widget.register_handler(\"delete\", self.delete_todo)\n\n            self.todo_widgets[todo.id] = todo_widget\n\n    def on_todo_added(self, item: TodoItem, index: int):\n        # \u65b0\u898f\u8ffd\u52a0\u6642\u306f\u5168\u4f53\u518d\u63cf\u753b\n        self.refresh_todo_list()\n\n    def add_todo(self):\n        text = self.entry.get().strip()\n        if not text:\n            return\n\n        state = self.store.get_current_state()\n        new_todo = TodoItem(id=state.next_todo_id, text=text)\n\n        # pub_add_to_list\u4f7f\u7528\n        self.pub_add_to_list(self.store.state.todos, new_todo)\n        self.pub_update_state(self.store.state.next_todo_id, state.next_todo_id + 1)\n\n        self.entry.delete(0, tk.END)\n\n    def toggle_todo(self, todo_id: int):\n        state = self.store.get_current_state()\n        updated_todos = []\n        for todo in state.todos:\n            if todo.id == todo_id:\n                updated = todo.model_copy()\n                updated.completed = not updated.completed\n                updated_todos.append(updated)\n            else:\n                updated_todos.append(todo)\n\n        self.pub_update_state(self.store.state.todos, updated_todos)\n\n    @make_async_task\n    async def delete_todo(self, todo_id: int):\n        if messagebox.askyesno(\"\u78ba\u8a8d\", \"\u3053\u306eTodo\u3092\u524a\u9664\u3057\u307e\u3059\u304b\uff1f\"):\n            await asyncio.sleep(0.2)  # \u524a\u9664\u51e6\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n            state = self.store.get_current_state()\n            updated_todos = [t for t in state.todos if t.id != todo_id]\n            self.pub_update_state(self.store.state.todos, updated_todos)\n\n\nclass SidebarContainer(ContainerComponentTk[AppState]):\n    def setup_ui(self):\n        self.configure(bg=\"lightgray\")\n\n        # \u7d71\u8a08\u8868\u793a\uff08Presentational\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u4f7f\u7528\uff09\n        self.stats_view = StatsView(self)\n        self.stats_view.pack(fill=tk.BOTH, expand=True, padx=5, pady=5)\n\n        # \u64cd\u4f5c\u30dc\u30bf\u30f3\n        btn_frame = tk.Frame(self, bg=\"lightgray\")\n        btn_frame.pack(fill=tk.X, padx=5, pady=5)\n\n        tk.Button(btn_frame, text=\"\u5168\u30a6\u30a3\u30f3\u30c9\u30a6\u9589\u3058\u308b\", command=self.close_all).pack(\n            fill=tk.X, pady=2\n        )\n        tk.Button(btn_frame, text=\"\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u524a\u9664\", command=self.delete_proc).pack(\n            fill=tk.X, pady=2\n        )\n\n        # Undo/Redo\u60c5\u5831\u4fdd\u6301\u7528\n        self.counter_undo_status = {\n            \"can_undo\": False,\n            \"can_redo\": False,\n            \"undo_count\": 0,\n            \"redo_count\": 0,\n        }\n        self.todos_undo_status = {\n            \"can_undo\": False,\n            \"can_redo\": False,\n            \"undo_count\": 0,\n            \"redo_count\": 0,\n        }\n\n    def setup_subscriptions(self):\n        # \u8907\u6570\u306e\u72b6\u614b\u5909\u66f4\u3092\u76e3\u8996\n        self.sub_for_refresh(self.store.state.counter, self.refresh_from_state)\n        self.sub_for_refresh(self.store.state.todos, self.refresh_from_state)\n        self.sub_for_refresh(self.store.state.settings, self.refresh_from_state)\n        self.sub_for_refresh(self.store.state.total_clicks, self.refresh_from_state)\n        self.sub_for_refresh(self.store.state.current_view, self.refresh_from_state)\n\n        # sub_dict_item_added\u4f7f\u7528\n        self.sub_dict_item_added(self.store.state.settings, self.on_setting_added)\n\n        # Undo/Redo\u30b9\u30c6\u30fc\u30bf\u30b9\u76e3\u8996\n        self.sub_undo_status(str(self.store.state.counter), self.on_counter_undo_status)\n        self.sub_undo_status(str(self.store.state.todos), self.on_todos_undo_status)\n\n    def on_counter_undo_status(\n        self, can_undo: bool, can_redo: bool, undo_count: int, redo_count: int\n    ):\n        \"\"\"\u30ab\u30a6\u30f3\u30bf\u30fc\u306eUndo/Redo\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u5316\u30cf\u30f3\u30c9\u30e9\u30fc\"\"\"\n        self.counter_undo_status = {\n            \"can_undo\": can_undo,\n            \"can_redo\": can_redo,\n            \"undo_count\": undo_count,\n            \"redo_count\": redo_count,\n        }\n        self.refresh_from_state()\n\n    def on_todos_undo_status(\n        self, can_undo: bool, can_redo: bool, undo_count: int, redo_count: int\n    ):\n        \"\"\"Todo\u30ea\u30b9\u30c8\u306eUndo/Redo\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u5316\u30cf\u30f3\u30c9\u30e9\u30fc\"\"\"\n        self.todos_undo_status = {\n            \"can_undo\": can_undo,\n            \"can_redo\": can_redo,\n            \"undo_count\": undo_count,\n            \"redo_count\": redo_count,\n        }\n        self.refresh_from_state()\n\n    def refresh_from_state(self):\n        state = self.store.get_current_state()\n        # Container\u3067\u72b6\u614b\u304b\u3089\u5fc5\u8981\u306a\u5024\u3092\u62bd\u51fa\u3057\u3066Presentational\u306b\u6e21\u3059\n        completed_todos = sum(1 for t in state.todos if t.completed)\n        total_todos = len(state.todos)\n\n        self.stats_view.update_stats(\n            counter=state.counter,\n            total_clicks=state.total_clicks,\n            total_todos=total_todos,\n            completed_todos=completed_todos,\n            settings_count=len(state.settings),\n            current_view=state.current_view,\n            counter_undo_status=self.counter_undo_status,\n            todos_undo_status=self.todos_undo_status,\n        )\n\n    def on_setting_added(self, key: str, value: str):\n        messagebox.showinfo(\"\u8a2d\u5b9a\u8ffd\u52a0\", f\"\u8a2d\u5b9a\u8ffd\u52a0: {key} = {value}\")\n\n    def close_all(self):\n        # pub_close_all_subwindows\u4f7f\u7528\n        self.pub_close_all_subwindows()\n\n    def delete_proc(self):\n        try:\n            # pub_delete_processor\u4f7f\u7528\n            self.pub_delete_processor(\"dummy\")\n            messagebox.showinfo(\"\u6210\u529f\", \"\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u524a\u9664\u3057\u307e\u3057\u305f\")\n        except KeyError:\n            messagebox.showerror(\"\u30a8\u30e9\u30fc\", \"\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n\n\n# =============================================================================\n# \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\n# =============================================================================\n\n\nclass SubWindow(ContainerComponentTk[AppState]):\n    def setup_ui(self):\n        tk.Label(self, text=\"\ud83d\udd22 \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\", font=(\"Arial\", 14)).pack(pady=10)\n\n        self.value_label = tk.Label(self, text=\"0\", font=(\"Arial\", 20))\n        self.value_label.pack(pady=10)\n\n        btn_frame = tk.Frame(self)\n        btn_frame.pack(pady=10)\n\n        tk.Button(btn_frame, text=\"+1\", command=self.increment).pack(\n            side=tk.LEFT, padx=5\n        )\n        tk.Button(btn_frame, text=\"+5\", command=lambda: self.add_value(5)).pack(\n            side=tk.LEFT, padx=5\n        )\n\n        tk.Button(self, text=\"\u9589\u3058\u308b\", command=self.close_window).pack(pady=10)\n\n    def setup_subscriptions(self):\n        self.sub_state_changed(self.store.state.counter, self.on_counter_changed)\n\n    def refresh_from_state(self):\n        state = self.store.get_current_state()\n        self.value_label.config(text=str(state.counter))\n\n    def on_counter_changed(self, old_value, new_value):\n        self.value_label.config(text=str(new_value))\n\n    def increment(self):\n        self.publish(AppTopic.INCREMENT)\n\n    def add_value(self, value: int):\n        state = self.store.get_current_state()\n        new_value = state.counter + value\n        self.pub_update_state(self.store.state.counter, new_value)\n        self.pub_update_state(self.store.state.total_clicks, state.total_clicks + 1)\n\n    def close_window(self):\n        # pub_close_subwindow\u4f7f\u7528\n        self.pub_close_subwindow(self.kwargs[\"win_id\"])\n\n\n# =============================================================================\n# \u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\n# =============================================================================\n\n\nclass MainProcessor(ProcessorBase[AppState]):\n    def setup_subscriptions(self):\n        self.subscribe(AppTopic.INCREMENT, self.handle_increment)\n        self.subscribe(AppTopic.RESET, self.handle_reset)\n\n    def handle_increment(self):\n        state = self.store.get_current_state()\n        new_counter = state.counter + 1\n        new_total = state.total_clicks + 1\n\n        self.pub_update_state(self.store.state.counter, new_counter)\n        self.pub_update_state(self.store.state.total_clicks, new_total)\n\n        # \u30de\u30a4\u30eb\u30b9\u30c8\u30fc\u30f3\u5224\u5b9a\n        if new_counter % 10 == 0:\n            self.publish(AppTopic.MILESTONE, value=new_counter)\n\n    def handle_reset(self):\n        self.pub_update_state(self.store.state.counter, 0)\n\n\nclass DummyProcessor(ProcessorBase[AppState]):\n    def setup_subscriptions(self):\n        print(\"DummyProcessor: \u521d\u671f\u5316\u3055\u308c\u307e\u3057\u305f\")\n\n\n# =============================================================================\n# \u30e1\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n# =============================================================================\n\nif __name__ == \"__main__\":\n    app = TkApplication(AppState, title=\"\ud83c\udfaf PubSubTk Demo\", geometry=\"800x600\")\n\n    # \u30e1\u30a4\u30f3\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u767b\u9332\n    app.pub_register_processor(MainProcessor)\n\n    # \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u8a2d\u5b9a\n    app.set_template(AppTemplate)\n\n    # \u5404\u30b9\u30ed\u30c3\u30c8\u306b\u30b3\u30f3\u30c6\u30ca\u914d\u7f6e\n    app.pub_switch_slot(\"navbar\", NavbarContainer)\n    app.pub_switch_slot(\"main\", MainContainer)  # \u521d\u671f\u753b\u9762\n    app.pub_switch_slot(\"sidebar\", SidebarContainer)\n\n    # \u8d77\u52d5\n    app.run(use_async=True)\n</code></pre>"},{"location":"api/","title":"API\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9","text":"<p>PubSubTk\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8a73\u7d30\u306aAPI\u4ed5\u69d8\u3084\u6d3b\u7528\u30d1\u30bf\u30fc\u30f3\u3092\u307e\u3068\u3081\u3066\u3044\u307e\u3059\u3002 \u30b5\u30a4\u30c9\u30d0\u30fc\u304b\u3089\u5404\u30af\u30e9\u30b9\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u8a73\u7d30\u30da\u30fc\u30b8\u3078\u79fb\u52d5\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"api/#_1","title":"\u30e2\u30b8\u30e5\u30fc\u30eb\u69cb\u6210","text":"<p>PubSubTk\u306f\u4e3b\u306b\u6b21\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u7fa4\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\uff1a</p>"},{"location":"api/#core","title":"Core","text":"<ul> <li>pubsubtk.core </li> <li><code>PubSubBase</code> \u2026 PubSub\u306e\u57fa\u5e95\u30af\u30e9\u30b9</li> <li> <p><code>PubSubDefaultTopicBase</code> \u2026 \u30c7\u30d5\u30a9\u30eb\u30c8\u30c8\u30d4\u30c3\u30af\u7528\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3</p> </li> <li> <p>pubsubtk.store </p> </li> <li><code>Store</code> \u2026 Pydantic\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u7ba1\u7406</li> <li> <p><code>StateProxy</code> \u2026 \u578b\u5b89\u5168\u306a\u72b6\u614b\u30a2\u30af\u30bb\u30b9</p> </li> <li> <p>pubsubtk.topic </p> </li> <li><code>AutoNamedTopic</code> \u2026 \u81ea\u52d5\u547d\u540d\u30c8\u30d4\u30c3\u30af</li> <li><code>DefaultNavigateTopic</code></li> <li><code>DefaultUpdateTopic</code></li> <li><code>DefaultProcessorTopic</code></li> </ul>"},{"location":"api/#application-framework","title":"Application Framework","text":"<ul> <li>pubsubtk.app </li> <li><code>TkApplication</code> \u2026 \u6a19\u6e96Tk\u30a2\u30d7\u30ea</li> <li> <p><code>ThemedApplication</code> \u2026 \u30c6\u30fc\u30de\u5bfe\u5fdc\u30a2\u30d7\u30ea</p> </li> <li> <p>pubsubtk.processor </p> </li> <li><code>ProcessorBase</code> \u2026 \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u57fa\u5e95\u30af\u30e9\u30b9</li> </ul>"},{"location":"api/#ui-components","title":"UI Components","text":"<ul> <li>pubsubtk.ui </li> <li><code>ContainerComponentTk/Ttk</code></li> <li><code>PresentationalComponentTk/Ttk</code></li> <li><code>TemplateComponentTk/Ttk</code></li> </ul>"},{"location":"api/#storybook","title":"Storybook","text":"<ul> <li>pubsubtk.storybook </li> <li><code>StorybookApplication</code> \u2026 Storybook\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3</li> <li><code>@story</code> \u2026 \u30b9\u30c8\u30fc\u30ea\u30fc\u5b9a\u7fa9\u30c7\u30b3\u30ec\u30fc\u30bf</li> <li> <p><code>StoryContext</code> \u2026 \u30b9\u30c8\u30fc\u30ea\u30fc\u5b9f\u884c\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8</p> </li> <li> <p>pubsubtk.storybook.knobs </p> </li> <li><code>KnobSpec</code> \u2026 Knob\u306e\u4ed5\u69d8\u5b9a\u7fa9</li> <li><code>KnobValue</code> \u2026 Knob\u5024\u30aa\u30d6\u30b8\u30a7\u30af\u30c8</li> </ul>"},{"location":"api/#utilities","title":"Utilities","text":"<ul> <li>pubsubtk.utils </li> <li><code>make_async</code></li> <li><code>make_async_task</code></li> </ul>"},{"location":"api/#_2","title":"\u30af\u30a4\u30c3\u30af\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3","text":""},{"location":"api/#_3","title":"\u3088\u304f\u4f7f\u3046\u30af\u30e9\u30b9","text":"\u30af\u30e9\u30b9 \u7528\u9014 \u30ea\u30f3\u30af <code>TkApplication</code> \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u672c\u4f53 pubsubtk.app <code>ContainerComponentTk</code> \u72b6\u614b\u9023\u643aUI pubsubtk.ui <code>PresentationalComponentTk</code> \u7d14\u7c8b\u8868\u793aUI pubsubtk.ui <code>ProcessorBase</code> \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af pubsubtk.processor <code>Store</code> \u72b6\u614b\u7ba1\u7406 pubsubtk.store <code>StorybookApplication</code> \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u958b\u767a\u74b0\u5883 pubsubtk.storybook <code>@story</code> \u30b9\u30c8\u30fc\u30ea\u30fc\u5b9a\u7fa9 pubsubtk.storybook.core"},{"location":"api/#_4","title":"\u4e3b\u306a\u30e1\u30bd\u30c3\u30c9","text":"\u30e1\u30bd\u30c3\u30c9 \u8aac\u660e \u4ee3\u8868\u7684\u306a\u7528\u9014 <code>pub_update_state()</code> \u72b6\u614b\u3092\u66f4\u65b0 Container, Processor <code>pub_switch_container()</code> \u753b\u9762\u5207\u308a\u66ff\u3048 Container, Processor <code>sub_state_changed()</code> \u72b6\u614b\u5909\u66f4\u76e3\u8996 Container <code>setup_subscriptions()</code> \u8cfc\u8aad\u8a2d\u5b9a Container, Processor <code>refresh_from_state()</code> UI\u66f4\u65b0 Container <code>ctx.knob()</code> Storybook\u52d5\u7684\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb Story\u5b9a\u7fa9\u5185"},{"location":"api/#_5","title":"\u3088\u304f\u3042\u308b\u4f7f\u7528\u30d1\u30bf\u30fc\u30f3","text":""},{"location":"api/#_6","title":"\u72b6\u614b\u7ba1\u7406\u306e\u57fa\u672c","text":"<pre><code>from pydantic import BaseModel\nfrom pubsubtk import TkApplication, ContainerComponentTk\n\nclass AppState(BaseModel):\n    counter: int = 0\n\nclass MainContainer(ContainerComponentTk[AppState]):\n    def setup_ui(self): ...\n    def setup_subscriptions(self):\n        self.sub_state_changed(self.store.state.counter, self.on_counter_changed)\n    def refresh_from_state(self): ...\n\napp = TkApplication(AppState)\napp.switch_container(MainContainer)\napp.run()\n</code></pre>"},{"location":"api/#processor","title":"Processor\u306e\u6d3b\u7528","text":"<pre><code>from pubsubtk import ProcessorBase\n\nclass MyProcessor(ProcessorBase[AppState]):\n    def setup_subscriptions(self):\n        self.subscribe(\"custom.event\", self.handle_event)\n    def handle_event(self):\n        self.pub_update_state(self.store.state.counter, 42)\n\n# \u30a2\u30d7\u30ea\u8d77\u52d5\u6642\u306bProcessor\u767b\u9332\napp.pub_register_processor(MyProcessor)\n</code></pre>"},{"location":"api/#_7","title":"\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u4f7f\u3044\u65b9","text":"<pre><code>from pubsubtk import TemplateComponentTk\n\nclass AppTemplate(TemplateComponentTk[AppState]):\n    def define_slots(self):\n        return {\n            \"header\": self.header_frame,\n            \"main\": self.main_frame,\n        }\n\napp.set_template(AppTemplate)\napp.pub_switch_slot(\"main\", MainContainer)\n</code></pre>"},{"location":"api/#storybook_1","title":"Storybook\u3067\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u958b\u767a","text":"<pre><code>from pubsubtk.storybook import story, StorybookApplication\n\n@story(\"Button.Primary\")\ndef primary_button(ctx):\n    text = ctx.knob(\"text\", str, \"Click me!\")\n    size = ctx.knob(\"size\", int, 12, range_=(8, 24))\n\n    import tkinter as tk\n    btn = tk.Button(ctx.parent, text=text.value, font=(\"\", size.value))\n    btn.pack()\n    return btn\n\napp = StorybookApplication()\napp.run()\n</code></pre>"},{"location":"api/#ide","title":"\u578b\u5b89\u5168\u30fbIDE\u652f\u63f4","text":"<ul> <li>StateProxy\u3067\u578b\u5b89\u5168\u306a\u72b6\u614b\u66f4\u65b0\u30fb\u88dc\u5b8c\u30fb\u5b9a\u7fa9\u30b8\u30e3\u30f3\u30d7\u304c\u53ef\u80fd</li> <li>\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306b\u3088\u308a\u3001\u5404Store/Container/Processor\u3067\u578b\u304c\u660e\u793a\u3067\u304d\u3001\u30df\u30b9\u9632\u6b62\uff06\u958b\u767a\u52b9\u7387UP</li> </ul>"},{"location":"api/#_8","title":"\u30c7\u30d0\u30c3\u30b0\u30fb\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3","text":"<ul> <li><code>enable_pubsub_debug_logging()</code> \u3067PubSub\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u6d41\u308c\u3092\u78ba\u8a8d\u53ef\u80fd</li> <li>\u72b6\u614b\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3084\u5fa9\u5143\u3082Pydantic\u6a19\u6e96\u3067\u624b\u8efd</li> </ul>"},{"location":"api/#_9","title":"\u547d\u540d\u898f\u5247","text":"<ul> <li>\u30af\u30e9\u30b9\u540d: PascalCase\uff08\u4f8b: <code>MainContainer</code>\uff09</li> <li>\u30e1\u30bd\u30c3\u30c9\u540d: snake_case\uff08\u4f8b: <code>setup_ui</code>\uff09</li> <li>\u30c8\u30d4\u30c3\u30af\u540d: UPPER_CASE\uff08\u4f8b: <code>USER_LOGIN</code>\uff09</li> <li>\u72b6\u614b\u30d5\u30a3\u30fc\u30eb\u30c9: snake_case\uff08\u4f8b: <code>user_name</code>\uff09</li> </ul>"},{"location":"api/#_10","title":"\u95a2\u9023\u30ea\u30f3\u30af","text":"<ul> <li>\u306f\u3058\u3081\u306b</li> <li>\u5b9f\u88c5\u30ec\u30b7\u30d4\u96c6</li> <li>\u30b5\u30f3\u30d7\u30eb\u96c6</li> <li>Storybook\u30ac\u30a4\u30c9</li> <li>AI\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9   \u2192 ChatGPT\u30fbCopilot\u7b49\u3067AI\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u969b\u306f\u3053\u3061\u3089\u3082\u6d3b\u7528\u304f\u3060\u3055\u3044</li> <li>GitHub Repository</li> </ul> <p>\u5404API\u306e\u8a73\u7d30\u306f\u5de6\u306e\u300cAPI\u8a73\u7d30\u300d\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u3054\u89a7\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"api/pubsubtk/app/application_base/","title":"pubsubtk.app.application_base","text":""},{"location":"api/pubsubtk/app/application_base/#pubsubtk.app.application_base","title":"pubsubtk.app.application_base","text":"<p>Tkinter \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5411\u3051\u306e\u5171\u901a\u57fa\u5e95\u30af\u30e9\u30b9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p> <p>\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u306f\u3001Tk \u304a\u3088\u3073 ttk \u30d9\u30fc\u30b9\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u69cb\u7bc9\u6642\u306b \u5229\u7528\u3059\u308b\u5171\u901a\u30e1\u30bd\u30c3\u30c9\u3092\u307e\u3068\u3081\u3066\u3044\u307e\u3059\u3002<code>TkApplication</code> \u3068 <code>ThemedApplication</code> \u306e 2 \u7a2e\u985e\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u30af\u30e9\u30b9\u3092\u516c\u958b\u3057\u3066\u304a\u308a\u3001 \u3044\u305a\u308c\u3082 <code>ApplicationCommon</code> Mixin \u3092\u7d99\u627f\u3057\u3066 Pub/Sub \u6a5f\u80fd\u3068 \u72b6\u614b\u7ba1\u7406\u6a5f\u80fd\u3092\u81ea\u52d5\u7684\u306b\u7d44\u307f\u8fbc\u307f\u307e\u3059\u3002</p>"},{"location":"api/pubsubtk/app/application_base/#pubsubtk.app.application_base.ApplicationCommon","title":"ApplicationCommon","text":"<pre><code>ApplicationCommon(state_cls: Type[TState], *args, **kwargs)\n</code></pre> <p>               Bases: <code>PubSubDefaultTopicBase</code>, <code>Generic[TState]</code></p> <p>Tk/Ttk \u3044\u305a\u308c\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u30af\u30e9\u30b9\u3067\u3082\u5171\u901a\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b Mixin.</p> <p>\u72b6\u614b\u30af\u30e9\u30b9\u3092\u53d7\u3051\u53d6\u308a\u3001Pub/Sub \u6a5f\u80fd\u3092\u521d\u671f\u5316\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>state_cls</code> <code>Type[TState]</code> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u72b6\u614b\u3092\u8868\u3059 <code>BaseModel</code> \u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3002</p> required Source code in <code>src/pubsubtk/app/application_base.py</code> <pre><code>def __init__(self, state_cls: Type[TState], *args, **kwargs):\n    \"\"\"\u72b6\u614b\u30af\u30e9\u30b9\u3092\u53d7\u3051\u53d6\u308a\u3001Pub/Sub \u6a5f\u80fd\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n    Args:\n        state_cls: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u72b6\u614b\u3092\u8868\u3059 ``BaseModel`` \u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3002\n    \"\"\"\n\n    super().__init__(*args, **kwargs)\n    self.state_cls = state_cls\n    self.store = get_store(state_cls)\n    self._processors: Dict[str, ProcessorBase] = {}\n</code></pre>"},{"location":"api/pubsubtk/app/application_base/#pubsubtk.app.application_base.ApplicationCommon.init_common","title":"init_common","text":"<pre><code>init_common(title: str, geometry: str) -&gt; None\n</code></pre> <p>\u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb\u3084\u30e1\u30a4\u30f3\u30d5\u30ec\u30fc\u30e0\u3092\u8a2d\u5b9a\u3059\u308b\u5171\u901a\u521d\u671f\u5316\u51e6\u7406\u3002</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>\u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb\u3002</p> required <code>geometry</code> <code>str</code> <p><code>WIDTHxHEIGHT</code> \u5f62\u5f0f\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u6587\u5b57\u5217\u3002</p> required Source code in <code>src/pubsubtk/app/application_base.py</code> <pre><code>def init_common(self, title: str, geometry: str) -&gt; None:\n    \"\"\"\u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb\u3084\u30e1\u30a4\u30f3\u30d5\u30ec\u30fc\u30e0\u3092\u8a2d\u5b9a\u3059\u308b\u5171\u901a\u521d\u671f\u5316\u51e6\u7406\u3002\n\n    Args:\n        title: \u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb\u3002\n        geometry: ``WIDTHxHEIGHT`` \u5f62\u5f0f\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u6587\u5b57\u5217\u3002\n    \"\"\"\n\n    # \u30a6\u30a3\u30f3\u30c9\u30a6\u57fa\u672c\u8a2d\u5b9a\n    self.title(title)\n    self.geometry(geometry)\n\n    # \u30b3\u30f3\u30c6\u30ca &amp; \u30a2\u30af\u30c6\u30a3\u30d6\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\n    self.main_frame = tk.Frame(self)\n    self.main_frame.pack(fill=tk.BOTH, expand=True)\n    self.active: Optional[tk.Widget] = None\n\n    # \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u7ba1\u7406\u7528\u8f9e\u66f8\n    self._subwindows: Dict[str, Tuple[tk.Toplevel, tk.Widget]] = {}\n</code></pre>"},{"location":"api/pubsubtk/app/application_base/#pubsubtk.app.application_base.ApplicationCommon.setup_subscriptions","title":"setup_subscriptions","text":"<pre><code>setup_subscriptions() -&gt; None\n</code></pre> <p>PubSub \u306e\u8cfc\u8aad\u8a2d\u5b9a\u3092\u884c\u3046\u3002</p> <p><code>PubSubBase.__init__</code> \u304b\u3089\u81ea\u52d5\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3001 \u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u3084 Processor \u7ba1\u7406\u306b\u95a2\u3059\u308b\u30c8\u30d4\u30c3\u30af\u3092\u8cfc\u8aad\u3057\u307e\u3059\u3002</p> Source code in <code>src/pubsubtk/app/application_base.py</code> <pre><code>def setup_subscriptions(self) -&gt; None:\n    \"\"\"PubSub \u306e\u8cfc\u8aad\u8a2d\u5b9a\u3092\u884c\u3046\u3002\n\n    ``PubSubBase.__init__`` \u304b\u3089\u81ea\u52d5\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3001\n    \u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u3084 Processor \u7ba1\u7406\u306b\u95a2\u3059\u308b\u30c8\u30d4\u30c3\u30af\u3092\u8cfc\u8aad\u3057\u307e\u3059\u3002\n    \"\"\"\n\n    self.subscribe(DefaultNavigateTopic.SWITCH_CONTAINER, self.switch_container)\n    self.subscribe(DefaultNavigateTopic.SWITCH_SLOT, self.switch_slot)\n    self.subscribe(DefaultNavigateTopic.OPEN_SUBWINDOW, self.open_subwindow)\n    self.subscribe(DefaultNavigateTopic.CLOSE_SUBWINDOW, self.close_subwindow)\n    self.subscribe(\n        DefaultNavigateTopic.CLOSE_ALL_SUBWINDOWS, self.close_all_subwindows\n    )\n    self.subscribe(\n        DefaultProcessorTopic.REGISTER_PROCESSOR, self.register_processor\n    )\n    self.subscribe(DefaultProcessorTopic.DELETE_PROCESSOR, self.delete_processor)\n</code></pre>"},{"location":"api/pubsubtk/app/application_base/#pubsubtk.app.application_base.ApplicationCommon.register_processor","title":"register_processor","text":"<pre><code>register_processor(proc: Type[P], name: Optional[str] = None) -&gt; str\n</code></pre> <p>\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u540d\u524d\u3067\u767b\u9332\u3057\u3001\u767b\u9332\u30ad\u30fc\u3092\u8fd4\u3057\u307e\u3059\u3002</p> <p>Parameters:</p> Name Type Description Default <code>proc</code> <code>Type[P]</code> <p>ProcessorBase\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9</p> required <code>name</code> <code>Optional[str]</code> <p>\u4efb\u610f\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u540d\u3002\u672a\u6307\u5b9a\u6642\u306f\u30af\u30e9\u30b9\u540d\u3092\u4f7f\u7528\u3057\u3001\u91cd\u8907\u3059\u308b\u5834\u5408\u306f\u63a5\u5c3e\u8f9e\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002</p> <code>None</code> <p>Returns:     \u767b\u9332\u306b\u4f7f\u7528\u3057\u305f\u30d7\u30ed\u30bb\u30c3\u30b5\u540d\u3002 Raises:     KeyError: \u65e2\u306b\u540c\u540d\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u304c\u767b\u9332\u6e08\u307f\u306e\u5834\u5408\u3002</p> Source code in <code>src/pubsubtk/app/application_base.py</code> <pre><code>def register_processor(self, proc: Type[P], name: Optional[str] = None) -&gt; str:\n    \"\"\"\n    \u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u540d\u524d\u3067\u767b\u9332\u3057\u3001\u767b\u9332\u30ad\u30fc\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n    Args:\n        proc: ProcessorBase\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\n        name: \u4efb\u610f\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u540d\u3002\u672a\u6307\u5b9a\u6642\u306f\u30af\u30e9\u30b9\u540d\u3092\u4f7f\u7528\u3057\u3001\u91cd\u8907\u3059\u308b\u5834\u5408\u306f\u63a5\u5c3e\u8f9e\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n    Returns:\n        \u767b\u9332\u306b\u4f7f\u7528\u3057\u305f\u30d7\u30ed\u30bb\u30c3\u30b5\u540d\u3002\n    Raises:\n        KeyError: \u65e2\u306b\u540c\u540d\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u304c\u767b\u9332\u6e08\u307f\u306e\u5834\u5408\u3002\n    \"\"\"\n    # \u30d9\u30fc\u30b9\u540d\u6c7a\u5b9a\n    base_key = name or proc.__name__\n    key = base_key\n    suffix = 1\n    # \u91cd\u8907\u3092\u56de\u907f\n    while key in self._processors:\n        key = f\"{base_key}_{suffix}\"\n        suffix += 1\n\n    # \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3057\u3066\u767b\u9332\n    self._processors[key] = proc(store=self.store)\n    return key\n</code></pre>"},{"location":"api/pubsubtk/app/application_base/#pubsubtk.app.application_base.ApplicationCommon.delete_processor","title":"delete_processor","text":"<pre><code>delete_processor(name: str) -&gt; None\n</code></pre> <p>\u767b\u9332\u6e08\u307f\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u524a\u9664\u3057 <code>teardown</code> \u3092\u5b9f\u884c\u3059\u308b\u3002</p> Source code in <code>src/pubsubtk/app/application_base.py</code> <pre><code>def delete_processor(self, name: str) -&gt; None:\n    \"\"\"\u767b\u9332\u6e08\u307f\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u524a\u9664\u3057 ``teardown`` \u3092\u5b9f\u884c\u3059\u308b\u3002\"\"\"\n    if name not in self._processors:\n        raise KeyError(f\"Processor '{name}' not found.\")\n    self._processors[name].teardown()\n    del self._processors[name]\n</code></pre>"},{"location":"api/pubsubtk/app/application_base/#pubsubtk.app.application_base.ApplicationCommon.set_template","title":"set_template","text":"<pre><code>set_template(template_cls: TemplateComponentType) -&gt; None\n</code></pre> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>template_cls</code> <code>TemplateComponentType</code> <p>\u9069\u7528\u3059\u308b <code>TemplateComponent</code> \u306e\u30af\u30e9\u30b9\u3002</p> required Source code in <code>src/pubsubtk/app/application_base.py</code> <pre><code>def set_template(self, template_cls: TemplateComponentType) -&gt; None:\n    \"\"\"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\n    Args:\n        template_cls: \u9069\u7528\u3059\u308b ``TemplateComponent`` \u306e\u30af\u30e9\u30b9\u3002\n    \"\"\"\n    if self.active:\n        self.active.destroy()\n    self.active = template_cls(parent=self.main_frame, store=self.store)\n    self.active.pack(fill=tk.BOTH, expand=True)\n</code></pre>"},{"location":"api/pubsubtk/app/application_base/#pubsubtk.app.application_base.ApplicationCommon.switch_container","title":"switch_container","text":"<pre><code>switch_container(cls: ContainerComponentType, kwargs: dict = None) -&gt; None\n</code></pre> <p>\u30e1\u30a4\u30f3\u30d5\u30ec\u30fc\u30e0\u5185\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u5207\u308a\u66ff\u3048\u308b\u3002</p> <p>\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f <code>switch_slot</code> \u3092\u4f7f\u7528\u3057\u3066 \u30c7\u30d5\u30a9\u30eb\u30c8\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002</p> <p>Parameters:</p> Name Type Description Default <code>cls</code> <code>ContainerComponentType</code> <p>\u5207\u308a\u66ff\u3048\u5148\u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u3002</p> required <code>kwargs</code> <code>dict</code> <p>\u30b3\u30f3\u30c6\u30ca\u521d\u671f\u5316\u7528\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u8f9e\u66f8\u3002</p> <code>None</code> Source code in <code>src/pubsubtk/app/application_base.py</code> <pre><code>def switch_container(\n    self,\n    cls: ContainerComponentType,\n    kwargs: dict = None,\n) -&gt; None:\n    \"\"\"\u30e1\u30a4\u30f3\u30d5\u30ec\u30fc\u30e0\u5185\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u5207\u308a\u66ff\u3048\u308b\u3002\n\n    \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f ``switch_slot`` \u3092\u4f7f\u7528\u3057\u3066\n    \u30c7\u30d5\u30a9\u30eb\u30c8\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n    Args:\n        cls: \u5207\u308a\u66ff\u3048\u5148\u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u3002\n        kwargs: \u30b3\u30f3\u30c6\u30ca\u521d\u671f\u5316\u7528\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u8f9e\u66f8\u3002\n    \"\"\"\n    # \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\n    if self.active and isinstance(self.active, TemplateMixin):\n        # \u30c7\u30d5\u30a9\u30eb\u30c8\u30b9\u30ed\u30c3\u30c8\uff08\"main\" \u307e\u305f\u306f \"content\"\uff09\u3092\u63a2\u3059\n        slots = self.active.get_slots()\n        if \"main\" in slots:\n            self.active.switch_slot_content(\"main\", cls, kwargs)\n        elif \"content\" in slots:\n            self.active.switch_slot_content(\"content\", cls, kwargs)\n        else:\n            # \u30c7\u30d5\u30a9\u30eb\u30c8\u30b9\u30ed\u30c3\u30c8\u304c\u306a\u3044\u5834\u5408\u306f\u6700\u521d\u306e\u30b9\u30ed\u30c3\u30c8\u3092\u4f7f\u7528\n            if slots:\n                first_slot = list(slots.keys())[0]\n                self.active.switch_slot_content(first_slot, cls, kwargs)\n            else:\n                raise RuntimeError(\"Template has no slots defined\")\n    else:\n        # \u901a\u5e38\u306e\u30b3\u30f3\u30c6\u30ca\u5207\u308a\u66ff\u3048\n        if self.active:\n            self.active.destroy()\n        kwargs = kwargs or {}\n        self.active = self._create_component(cls, self.main_frame, kwargs)\n        self.active.pack(fill=tk.BOTH, expand=True)\n</code></pre>"},{"location":"api/pubsubtk/app/application_base/#pubsubtk.app.application_base.ApplicationCommon.switch_slot","title":"switch_slot","text":"<pre><code>switch_slot(slot_name: str, cls: ComponentType, kwargs: dict = None) -&gt; None\n</code></pre> <p>\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u7279\u5b9a\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u5207\u308a\u66ff\u3048\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>slot_name</code> <code>str</code> <p>\u5909\u66f4\u5bfe\u8c61\u306e\u30b9\u30ed\u30c3\u30c8\u540d\u3002</p> required <code>cls</code> <code>ComponentType</code> <p>\u65b0\u3057\u304f\u914d\u7f6e\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9\u3002</p> required <code>kwargs</code> <code>dict</code> <p>\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u521d\u671f\u5316\u7528\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u8f9e\u66f8\u3002</p> <code>None</code> Source code in <code>src/pubsubtk/app/application_base.py</code> <pre><code>def switch_slot(\n    self,\n    slot_name: str,\n    cls: ComponentType,\n    kwargs: dict = None,\n) -&gt; None:\n    \"\"\"\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u7279\u5b9a\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u5207\u308a\u66ff\u3048\u308b\u3002\n\n    Args:\n        slot_name: \u5909\u66f4\u5bfe\u8c61\u306e\u30b9\u30ed\u30c3\u30c8\u540d\u3002\n        cls: \u65b0\u3057\u304f\u914d\u7f6e\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9\u3002\n        kwargs: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u521d\u671f\u5316\u7528\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u8f9e\u66f8\u3002\n    \"\"\"\n    if not self.active or not isinstance(self.active, TemplateMixin):\n        raise RuntimeError(\"No template is set. Use set_template() first.\")\n\n    self.active.switch_slot_content(slot_name, cls, kwargs)\n</code></pre>"},{"location":"api/pubsubtk/app/application_base/#pubsubtk.app.application_base.ApplicationCommon.open_subwindow","title":"open_subwindow","text":"<pre><code>open_subwindow(cls: ComponentType, win_id: Optional[str] = None, kwargs: dict = None) -&gt; str\n</code></pre> <p>\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304d\u3001\u751f\u6210\u3057\u305f\u30a6\u30a3\u30f3\u30c9\u30a6 ID \u3092\u8fd4\u3059\u3002</p> <p>Parameters:</p> Name Type Description Default <code>cls</code> <code>ComponentType</code> <p>\u8868\u793a\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9\u3002</p> required <code>win_id</code> <code>Optional[str]</code> <p>\u4efb\u610f\u306e\u30a6\u30a3\u30f3\u30c9\u30a6 ID\u3002\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\u3002</p> <code>None</code> <code>kwargs</code> <code>dict</code> <p>\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u521d\u671f\u5316\u7528\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u8f9e\u66f8\u3002</p> <code>None</code> <p>Returns:</p> Type Description <code>str</code> <p>\u5b9f\u969b\u306b\u4f7f\u7528\u3055\u308c\u305f\u30a6\u30a3\u30f3\u30c9\u30a6 ID\u3002</p> Source code in <code>src/pubsubtk/app/application_base.py</code> <pre><code>def open_subwindow(\n    self,\n    cls: ComponentType,\n    win_id: Optional[str] = None,\n    kwargs: dict = None,\n) -&gt; str:\n    \"\"\"\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304d\u3001\u751f\u6210\u3057\u305f\u30a6\u30a3\u30f3\u30c9\u30a6 ID \u3092\u8fd4\u3059\u3002\n\n    Args:\n        cls: \u8868\u793a\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9\u3002\n        win_id: \u4efb\u610f\u306e\u30a6\u30a3\u30f3\u30c9\u30a6 ID\u3002\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\u3002\n        kwargs: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u521d\u671f\u5316\u7528\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u8f9e\u66f8\u3002\n\n    Returns:\n        \u5b9f\u969b\u306b\u4f7f\u7528\u3055\u308c\u305f\u30a6\u30a3\u30f3\u30c9\u30a6 ID\u3002\n    \"\"\"\n    # \u65e2\u5b58ID\u3067\u3042\u308c\u3070\u524d\u9762\u306b\n    if win_id and win_id in self._subwindows:\n        self._subwindows[win_id][0].lift()\n        return win_id\n\n    # \u30ad\u30fc\u751f\u6210\n    base_id = win_id or cls.__name__\n    unique_id = base_id\n    suffix = 1\n    while unique_id in self._subwindows:\n        unique_id = f\"{base_id}_{suffix}\"\n        suffix += 1\n\n    # \u30a6\u30a3\u30f3\u30c9\u30a6\u751f\u6210\n    toplevel = tk.Toplevel(self)\n    kwargs = kwargs or {}\n    kwargs[\"win_id\"] = unique_id\n\n    # \u5171\u901a\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\n    comp = self._create_component(cls, toplevel, kwargs)\n    comp.pack(fill=tk.BOTH, expand=True)\n\n    def on_close():\n        self.close_subwindow(unique_id)\n\n    toplevel.protocol(\"WM_DELETE_WINDOW\", on_close)\n\n    self._subwindows[unique_id] = (toplevel, comp)\n    return unique_id\n</code></pre>"},{"location":"api/pubsubtk/app/application_base/#pubsubtk.app.application_base.ApplicationCommon.close_subwindow","title":"close_subwindow","text":"<pre><code>close_subwindow(win_id: str) -&gt; None\n</code></pre> <p>\u6307\u5b9a ID \u306e\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b\u3002</p> Source code in <code>src/pubsubtk/app/application_base.py</code> <pre><code>def close_subwindow(self, win_id: str) -&gt; None:\n    \"\"\"\u6307\u5b9a ID \u306e\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b\u3002\"\"\"\n\n    if win_id not in self._subwindows:\n        return\n    top, comp = self._subwindows.pop(win_id)\n    try:\n        comp.destroy()\n    except Exception:\n        pass\n    top.destroy()\n</code></pre>"},{"location":"api/pubsubtk/app/application_base/#pubsubtk.app.application_base.ApplicationCommon.close_all_subwindows","title":"close_all_subwindows","text":"<pre><code>close_all_subwindows() -&gt; None\n</code></pre> <p>\u958b\u3044\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b\u3002</p> Source code in <code>src/pubsubtk/app/application_base.py</code> <pre><code>def close_all_subwindows(self) -&gt; None:\n    \"\"\"\u958b\u3044\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b\u3002\"\"\"\n\n    for wid in list(self._subwindows):\n        self.close_subwindow(wid)\n</code></pre>"},{"location":"api/pubsubtk/app/application_base/#pubsubtk.app.application_base.ApplicationCommon.run","title":"run","text":"<pre><code>run(use_async: bool = False, loop: Optional[AbstractEventLoop] = None, poll_interval: int = 50) -&gt; None\n</code></pre> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u3092\u958b\u59cb\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>use_async</code> <code>bool</code> <p><code>asyncio</code> \u3092\u4f75\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u3002</p> <code>False</code> <code>loop</code> <code>Optional[AbstractEventLoop]</code> <p>\u4f7f\u7528\u3059\u308b\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u3002<code>None</code> \u306e\u5834\u5408\u306f <code>get_event_loop</code> \u3092\u4f7f\u7528\u3002</p> <code>None</code> <code>poll_interval</code> <code>int</code> <p><code>_default_poll</code> \u3092\u547c\u3073\u51fa\u3059\u9593\u9694\uff08\u30df\u30ea\u79d2\uff09\u3002</p> <code>50</code> Source code in <code>src/pubsubtk/app/application_base.py</code> <pre><code>def run(\n    self,\n    use_async: bool = False,\n    loop: Optional[asyncio.AbstractEventLoop] = None,\n    poll_interval: int = 50,\n) -&gt; None:\n    \"\"\"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u3092\u958b\u59cb\u3059\u308b\u3002\n\n    Args:\n        use_async: ``asyncio`` \u3092\u4f75\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u3002\n        loop: \u4f7f\u7528\u3059\u308b\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7\u3002``None`` \u306e\u5834\u5408\u306f ``get_event_loop`` \u3092\u4f7f\u7528\u3002\n        poll_interval: ``_default_poll`` \u3092\u547c\u3073\u51fa\u3059\u9593\u9694\uff08\u30df\u30ea\u79d2\uff09\u3002\n    \"\"\"\n\n    self.protocol(\"WM_DELETE_WINDOW\", self.on_closing)\n    if not use_async:\n        self.mainloop()\n    else:\n        loop = loop or asyncio.get_event_loop()\n        self.after(poll_interval, _default_poll, loop, self, poll_interval)\n        self.mainloop()\n        try:\n            loop.run_until_complete(loop.shutdown_asyncgens())\n        except Exception:\n            pass\n</code></pre>"},{"location":"api/pubsubtk/app/application_base/#pubsubtk.app.application_base.ApplicationCommon.on_closing","title":"on_closing","text":"<pre><code>on_closing() -&gt; None\n</code></pre> <p>\u7d42\u4e86\u6642\u306e\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u51e6\u7406\u3092\u884c\u3046\u3002</p> <p>\u3059\u3079\u3066\u306e\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u3066 <code>destroy</code> \u3092\u547c\u3073\u51fa\u3059\u3002</p> Source code in <code>src/pubsubtk/app/application_base.py</code> <pre><code>def on_closing(self) -&gt; None:\n    \"\"\"\u7d42\u4e86\u6642\u306e\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u51e6\u7406\u3092\u884c\u3046\u3002\n\n    \u3059\u3079\u3066\u306e\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u3066 ``destroy`` \u3092\u547c\u3073\u51fa\u3059\u3002\n    \"\"\"\n\n    self.close_all_subwindows()\n    self.destroy()\n</code></pre>"},{"location":"api/pubsubtk/app/application_base/#pubsubtk.app.application_base.TkApplication","title":"TkApplication","text":"<pre><code>TkApplication(state_cls: Type[TState], title: str = 'Tk App', geometry: str = '800x600', *args, **kwargs)\n</code></pre> <p>               Bases: <code>ApplicationCommon[TState]</code>, <code>Tk</code>, <code>Generic[TState]</code></p> <p>Tk \u30d9\u30fc\u30b9\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u521d\u671f\u5316\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>state_cls</code> <code>Type[TState]</code> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u72b6\u614b\u30e2\u30c7\u30eb\u306e\u578b\u3002</p> required <code>title</code> <code>str</code> <p>\u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb\u3002</p> <code>'Tk App'</code> <code>geometry</code> <code>str</code> <p><code>WIDTHxHEIGHT</code> \u5f62\u5f0f\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3002</p> <code>'800x600'</code> Source code in <code>src/pubsubtk/app/application_base.py</code> <pre><code>def __init__(\n    self,\n    state_cls: Type[TState],\n    title: str = \"Tk App\",\n    geometry: str = \"800x600\",\n    *args,\n    **kwargs,\n):\n    \"\"\"Tk \u30d9\u30fc\u30b9\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n    Args:\n        state_cls: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u72b6\u614b\u30e2\u30c7\u30eb\u306e\u578b\u3002\n        title: \u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb\u3002\n        geometry: ``WIDTHxHEIGHT`` \u5f62\u5f0f\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3002\n    \"\"\"\n\n    # **first** initialize the actual Tk\n    tk.Tk.__init__(self, *args, **kwargs)\n    # **then** initialize the PubSub mixin\n    ApplicationCommon.__init__(self, state_cls)\n    # now do your common window setup\n    self.init_common(title, geometry)\n</code></pre>"},{"location":"api/pubsubtk/app/application_base/#pubsubtk.app.application_base.ThemedApplication","title":"ThemedApplication","text":"<pre><code>ThemedApplication(state_cls: Type[TState], theme: str = 'arc', title: str = 'Themed App', geometry: str = '800x600', *args, **kwargs)\n</code></pre> <p>               Bases: <code>ApplicationCommon[TState]</code>, <code>ThemedTk</code>, <code>Generic[TState]</code></p> <p>\u30c6\u30fc\u30de\u5bfe\u5fdc\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u521d\u671f\u5316\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>state_cls</code> <code>Type[TState]</code> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u72b6\u614b\u30e2\u30c7\u30eb\u306e\u578b\u3002</p> required <code>theme</code> <code>str</code> <p>\u9069\u7528\u3059\u308b ttk \u30c6\u30fc\u30de\u540d\u3002</p> <code>'arc'</code> <code>title</code> <code>str</code> <p>\u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb\u3002</p> <code>'Themed App'</code> <code>geometry</code> <code>str</code> <p><code>WIDTHxHEIGHT</code> \u5f62\u5f0f\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3002</p> <code>'800x600'</code> Source code in <code>src/pubsubtk/app/application_base.py</code> <pre><code>def __init__(\n    self,\n    state_cls: Type[TState],\n    theme: str = \"arc\",\n    title: str = \"Themed App\",\n    geometry: str = \"800x600\",\n    *args,\n    **kwargs,\n):\n    \"\"\"\u30c6\u30fc\u30de\u5bfe\u5fdc\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n    Args:\n        state_cls: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u72b6\u614b\u30e2\u30c7\u30eb\u306e\u578b\u3002\n        theme: \u9069\u7528\u3059\u308b ttk \u30c6\u30fc\u30de\u540d\u3002\n        title: \u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb\u3002\n        geometry: ``WIDTHxHEIGHT`` \u5f62\u5f0f\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\u3002\n    \"\"\"\n\n    # initialize the themed\u2010Tk\n    ThemedTk.__init__(self, theme=theme, *args, **kwargs)\n    # mixin init\n    ApplicationCommon.__init__(self, state_cls)\n    # then common setup\n    self.init_common(title, geometry)\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/","title":"pubsubtk.core.default_topic_base","text":""},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base","title":"pubsubtk.core.default_topic_base","text":"<p>src/pubsubtk/core/default_topic_base.py</p> <p>\u4e3b\u8981\u306a PubSub \u30c8\u30d4\u30c3\u30af\u306b\u5bfe\u3059\u308b\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase","title":"PubSubDefaultTopicBase","text":"<pre><code>PubSubDefaultTopicBase(*args, **kwargs)\n</code></pre> <p>               Bases: <code>PubSubBase</code></p> <p>Built-in convenience methods for common PubSub operations.</p> <p>IMPORTANT: Container and Processor components should use these built-in methods instead of manually publishing to DefaultTopics. These methods are designed for ease of use and provide better IDE support.</p> Source code in <code>src/pubsubtk/core/pubsub_base.py</code> <pre><code>def __init__(self, *args, **kwargs):\n    self._subscriptions: List[Dict[str, Any]] = []\n    self.setup_subscriptions()\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.pub_switch_container","title":"pub_switch_container","text":"<pre><code>pub_switch_container(cls: ContainerComponentType, kwargs: dict = None) -&gt; None\n</code></pre> <p>\u30b3\u30f3\u30c6\u30ca\u3092\u5207\u308a\u66ff\u3048\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>cls</code> <code>ContainerComponentType</code> <p>\u5207\u308a\u66ff\u3048\u5148\u306e\u30b3\u30f3\u30c6\u30ca\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9</p> required <code>kwargs</code> <code>dict</code> <p>\u30b3\u30f3\u30c6\u30ca\u306b\u6e21\u3059\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u7528\u8f9e\u66f8</p> <code>None</code> Note <p>\u30b3\u30f3\u30c6\u30ca\u306f\u3001TkApplication\u307e\u305f\u306fTtkApplication\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u6307\u5b9a\u3055\u308c\u305f \u89aa\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306e\u5b50\u3068\u3057\u3066\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002</p> Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def pub_switch_container(\n    self,\n    cls: ContainerComponentType,\n    kwargs: dict = None,\n) -&gt; None:\n    \"\"\"\u30b3\u30f3\u30c6\u30ca\u3092\u5207\u308a\u66ff\u3048\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n    Args:\n        cls (ContainerComponentType): \u5207\u308a\u66ff\u3048\u5148\u306e\u30b3\u30f3\u30c6\u30ca\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9\n        kwargs: \u30b3\u30f3\u30c6\u30ca\u306b\u6e21\u3059\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u7528\u8f9e\u66f8\n\n    Note:\n        \u30b3\u30f3\u30c6\u30ca\u306f\u3001TkApplication\u307e\u305f\u306fTtkApplication\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u6307\u5b9a\u3055\u308c\u305f\n        \u89aa\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306e\u5b50\u3068\u3057\u3066\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002\n    \"\"\"\n    self.publish(DefaultNavigateTopic.SWITCH_CONTAINER, cls=cls, kwargs=kwargs)\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.pub_switch_slot","title":"pub_switch_slot","text":"<pre><code>pub_switch_slot(slot_name: str, cls: ComponentType, kwargs: dict = None) -&gt; None\n</code></pre> <p>\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u7279\u5b9a\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u5207\u308a\u66ff\u3048\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>slot_name</code> <code>str</code> <p>\u30b9\u30ed\u30c3\u30c8\u540d</p> required <code>cls</code> <code>ComponentType</code> <p>\u30b3\u30f3\u30c6\u30ca\u307e\u305f\u306f\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30ca\u30eb\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9</p> required <code>kwargs</code> <code>dict</code> <p>\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u6e21\u3059\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u7528\u8f9e\u66f8</p> <code>None</code> Note <p>ContainerComponent\u3068PresentationalComponent\u306e\u4e21\u65b9\u306b\u5bfe\u5fdc\u3002 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002</p> Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def pub_switch_slot(\n    self,\n    slot_name: str,\n    cls: ComponentType,\n    kwargs: dict = None,\n) -&gt; None:\n    \"\"\"\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u7279\u5b9a\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u5207\u308a\u66ff\u3048\u308b\u3002\n\n    Args:\n        slot_name (str): \u30b9\u30ed\u30c3\u30c8\u540d\n        cls (ComponentType): \u30b3\u30f3\u30c6\u30ca\u307e\u305f\u306f\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30ca\u30eb\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9\n        kwargs: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u6e21\u3059\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u7528\u8f9e\u66f8\n\n    Note:\n        ContainerComponent\u3068PresentationalComponent\u306e\u4e21\u65b9\u306b\u5bfe\u5fdc\u3002\n        \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n    \"\"\"\n    self.publish(\n        DefaultNavigateTopic.SWITCH_SLOT,\n        slot_name=slot_name,\n        cls=cls,\n        kwargs=kwargs,\n    )\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.pub_open_subwindow","title":"pub_open_subwindow","text":"<pre><code>pub_open_subwindow(cls: ComponentType, win_id: Optional[str] = None, kwargs: dict = None) -&gt; None\n</code></pre> <p>\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304fPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>cls</code> <code>ComponentType</code> <p>\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u8868\u793a\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9</p> required <code>win_id</code> <code>Optional[str]</code> <p>\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306eID\u3002 \u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\u3002 \u540c\u3058ID\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u65e2\u5b58\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u518d\u5229\u7528\u3055\u308c\u308b\u3002</p> <code>None</code> <code>kwargs</code> <code>dict</code> <p>\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u6e21\u3059\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u7528\u8f9e\u66f8</p> <code>None</code> Note <p>\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306f\u3001Toplevel \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3068\u3057\u3066\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002</p> Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def pub_open_subwindow(\n    self,\n    cls: ComponentType,\n    win_id: Optional[str] = None,\n    kwargs: dict = None,\n) -&gt; None:\n    \"\"\"\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304fPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n    Args:\n        cls (ComponentType): \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u8868\u793a\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9\n        win_id (Optional[str], optional): \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306eID\u3002\n            \u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\u3002\n            \u540c\u3058ID\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u65e2\u5b58\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u518d\u5229\u7528\u3055\u308c\u308b\u3002\n        kwargs: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u6e21\u3059\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u7528\u8f9e\u66f8\n\n    Note:\n        \u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306f\u3001Toplevel \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3068\u3057\u3066\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n    \"\"\"\n    self.publish(\n        DefaultNavigateTopic.OPEN_SUBWINDOW, cls=cls, win_id=win_id, kwargs=kwargs\n    )\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.pub_close_subwindow","title":"pub_close_subwindow","text":"<pre><code>pub_close_subwindow(win_id: str) -&gt; None\n</code></pre> <p>\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>win_id</code> <code>str</code> <p>\u9589\u3058\u308b\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306eID</p> required Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def pub_close_subwindow(self, win_id: str) -&gt; None:\n    \"\"\"\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n    Args:\n        win_id (str): \u9589\u3058\u308b\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306eID\n    \"\"\"\n    self.publish(DefaultNavigateTopic.CLOSE_SUBWINDOW, win_id=win_id)\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.pub_close_all_subwindows","title":"pub_close_all_subwindows","text":"<pre><code>pub_close_all_subwindows() -&gt; None\n</code></pre> <p>\u3059\u3079\u3066\u306e\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002</p> Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def pub_close_all_subwindows(self) -&gt; None:\n    \"\"\"\u3059\u3079\u3066\u306e\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\"\"\"\n    self.publish(DefaultNavigateTopic.CLOSE_ALL_SUBWINDOWS)\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.pub_replace_state","title":"pub_replace_state","text":"<pre><code>pub_replace_state(new_state: Any) -&gt; None\n</code></pre> <p>\u72b6\u614b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5168\u4f53\u3092\u7f6e\u304d\u63db\u3048\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>new_state</code> <code>Any</code> <p>\u65b0\u3057\u3044\u72b6\u614b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002</p> required Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def pub_replace_state(self, new_state: Any) -&gt; None:\n    \"\"\"\u72b6\u614b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5168\u4f53\u3092\u7f6e\u304d\u63db\u3048\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n    Args:\n        new_state: \u65b0\u3057\u3044\u72b6\u614b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\n    \"\"\"\n    self.publish(DefaultUpdateTopic.REPLACE_STATE, new_state=new_state)\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.pub_update_state","title":"pub_update_state","text":"<pre><code>pub_update_state(state_path: str, new_value: Any) -&gt; None\n</code></pre> <p>Store\u306e\u72b6\u614b\u3092\u66f4\u65b0\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>state_path</code> <code>str</code> <p>\u66f4\u65b0\u3059\u308b\u72b6\u614b\u306e\u30d1\u30b9\uff08\u4f8b: \"user.name\", \"items[2].value\"\uff09</p> required <code>new_value</code> <code>Any</code> <p>\u65b0\u3057\u3044\u5024</p> required Note <p>RECOMMENDED: Use store.state proxy for type-safe paths with IDE support: <code>self.pub_update_state(str(self.store.state.user.name), \"\u65b0\u3057\u3044\u540d\u524d\")</code> The state proxy provides autocomplete and \"Go to Definition\" functionality.</p> Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def pub_update_state(self, state_path: str, new_value: Any) -&gt; None:\n    \"\"\"\n    Store\u306e\u72b6\u614b\u3092\u66f4\u65b0\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n    Args:\n        state_path (str): \u66f4\u65b0\u3059\u308b\u72b6\u614b\u306e\u30d1\u30b9\uff08\u4f8b: \"user.name\", \"items[2].value\"\uff09\n        new_value (Any): \u65b0\u3057\u3044\u5024\n\n    Note:\n        **RECOMMENDED**: Use store.state proxy for type-safe paths with IDE support:\n        `self.pub_update_state(str(self.store.state.user.name), \"\u65b0\u3057\u3044\u540d\u524d\")`\n        The state proxy provides autocomplete and \"Go to Definition\" functionality.\n    \"\"\"\n    self.publish(\n        DefaultUpdateTopic.UPDATE_STATE,\n        state_path=str(state_path),\n        new_value=new_value,\n    )\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.pub_add_to_list","title":"pub_add_to_list","text":"<pre><code>pub_add_to_list(state_path: str, item: Any) -&gt; None\n</code></pre> <p>Store\u306e\u72b6\u614b\uff08\u30ea\u30b9\u30c8\uff09\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>state_path</code> <code>str</code> <p>\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u30ea\u30b9\u30c8\u306e\u72b6\u614b\u30d1\u30b9\uff08\u4f8b: \"items\", \"user.tasks\"\uff09</p> required <code>item</code> <code>Any</code> <p>\u8ffd\u52a0\u3059\u308b\u8981\u7d20</p> required Note <p>RECOMMENDED: Use store.state proxy for type-safe paths with IDE support: <code>self.pub_add_to_list(str(self.store.state.items), new_item)</code> The state proxy provides autocomplete and \"Go to Definition\" functionality.</p> Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def pub_add_to_list(self, state_path: str, item: Any) -&gt; None:\n    \"\"\"\n    Store\u306e\u72b6\u614b\uff08\u30ea\u30b9\u30c8\uff09\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n    Args:\n        state_path (str): \u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u30ea\u30b9\u30c8\u306e\u72b6\u614b\u30d1\u30b9\uff08\u4f8b: \"items\", \"user.tasks\"\uff09\n        item (Any): \u8ffd\u52a0\u3059\u308b\u8981\u7d20\n\n    Note:\n        **RECOMMENDED**: Use store.state proxy for type-safe paths with IDE support:\n        `self.pub_add_to_list(str(self.store.state.items), new_item)`\n        The state proxy provides autocomplete and \"Go to Definition\" functionality.\n    \"\"\"\n    self.publish(\n        DefaultUpdateTopic.ADD_TO_LIST, state_path=str(state_path), item=item\n    )\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.pub_add_to_dict","title":"pub_add_to_dict","text":"<pre><code>pub_add_to_dict(state_path: str, key: str, value: Any) -&gt; None\n</code></pre> <p>Store\u306e\u72b6\u614b(\u8f9e\u66f8)\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>state_path</code> <code>str</code> <p>\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u8f9e\u66f8\u306e\u72b6\u614b\u30d1\u30b9\u3002</p> required <code>key</code> <code>str</code> <p>\u8ffd\u52a0\u3059\u308b\u30ad\u30fc\u3002</p> required <code>value</code> <code>Any</code> <p>\u8ffd\u52a0\u3059\u308b\u5024\u3002</p> required Note <p>RECOMMENDED: Use store.state proxy for type-safe paths with IDE support: <code>self.pub_add_to_dict(str(self.store.state.mapping), \"k\", v)</code></p> Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def pub_add_to_dict(self, state_path: str, key: str, value: Any) -&gt; None:\n    \"\"\"Store\u306e\u72b6\u614b(\u8f9e\u66f8)\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n    Args:\n        state_path: \u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u8f9e\u66f8\u306e\u72b6\u614b\u30d1\u30b9\u3002\n        key: \u8ffd\u52a0\u3059\u308b\u30ad\u30fc\u3002\n        value: \u8ffd\u52a0\u3059\u308b\u5024\u3002\n\n    Note:\n        **RECOMMENDED**: Use store.state proxy for type-safe paths with IDE support:\n        `self.pub_add_to_dict(str(self.store.state.mapping), \"k\", v)`\n    \"\"\"\n    self.publish(\n        DefaultUpdateTopic.ADD_TO_DICT,\n        state_path=str(state_path),\n        key=key,\n        value=value,\n    )\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.pub_register_processor","title":"pub_register_processor","text":"<pre><code>pub_register_processor(proc: Type[ProcessorBase], name: Optional[str] = None) -&gt; None\n</code></pre> <p>Processor\u3092\u767b\u9332\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>proc</code> <code>Type[ProcessorBase]</code> <p>\u767b\u9332\u3059\u308bProcessor\u30af\u30e9\u30b9</p> required <code>name</code> <code>Optional[str]</code> <p>Processor\u306e\u540d\u524d\u3002 \u7701\u7565\u3057\u305f\u5834\u5408\u306f\u30af\u30e9\u30b9\u540d\u304c\u4f7f\u7528\u3055\u308c\u308b\u3002Defaults to None.</p> <code>None</code> Note <p>\u767b\u9332\u3055\u308c\u305fProcessor\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u901a\u3058\u3066\u6709\u52b9\u3067\u3059\u3002</p> Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def pub_register_processor(\n    self,\n    proc: Type[ProcessorBase],\n    name: Optional[str] = None,\n) -&gt; None:\n    \"\"\"Processor\u3092\u767b\u9332\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n    Args:\n        proc (Type[ProcessorBase]): \u767b\u9332\u3059\u308bProcessor\u30af\u30e9\u30b9\n        name (Optional[str], optional): Processor\u306e\u540d\u524d\u3002\n            \u7701\u7565\u3057\u305f\u5834\u5408\u306f\u30af\u30e9\u30b9\u540d\u304c\u4f7f\u7528\u3055\u308c\u308b\u3002Defaults to None.\n\n    Note:\n        \u767b\u9332\u3055\u308c\u305fProcessor\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u901a\u3058\u3066\u6709\u52b9\u3067\u3059\u3002\n    \"\"\"\n    self.publish(DefaultProcessorTopic.REGISTER_PROCESSOR, proc=proc, name=name)\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.pub_delete_processor","title":"pub_delete_processor","text":"<pre><code>pub_delete_processor(name: str) -&gt; None\n</code></pre> <p>\u6307\u5b9a\u3057\u305f\u540d\u524d\u306eProcessor\u3092\u524a\u9664\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>\u524a\u9664\u3059\u308bProcessor\u306e\u540d\u524d</p> required Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def pub_delete_processor(self, name: str) -&gt; None:\n    \"\"\"\u6307\u5b9a\u3057\u305f\u540d\u524d\u306eProcessor\u3092\u524a\u9664\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n    Args:\n        name (str): \u524a\u9664\u3059\u308bProcessor\u306e\u540d\u524d\n    \"\"\"\n    self.publish(DefaultProcessorTopic.DELETE_PROCESSOR, name=name)\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.pub_enable_undo_redo","title":"pub_enable_undo_redo","text":"<pre><code>pub_enable_undo_redo(state_path: str, max_history: int = 10) -&gt; None\n</code></pre> <p>\u6307\u5b9a\u3057\u305fstate path\u306b\u5bfe\u3057\u3066Undo/Redo\u6a5f\u80fd\u3092\u6709\u52b9\u5316\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>state_path</code> <code>str</code> <p>Undo/Redo\u5bfe\u8c61\u306e\u72b6\u614b\u30d1\u30b9\uff08\u4f8b: \"counter\", \"user.name\"\uff09</p> required <code>max_history</code> <code>int</code> <p>\u4fdd\u6301\u3059\u308b\u5c65\u6b74\u306e\u6700\u5927\u6570\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f10\u3002 \u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u3092\u5236\u5fa1\u3057\u305f\u3044\u5834\u5408\u306b\u8abf\u6574\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <code>10</code> Note <p>RECOMMENDED: Use store.state proxy for type-safe paths with IDE support: <code>self.pub_enable_undo_redo(str(self.store.state.counter), max_history=50)</code> The state proxy provides autocomplete and \"Go to Definition\" functionality.</p> <p>\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u6307\u5b9a\u3055\u308c\u305f\u30d1\u30b9\u306e\u73fe\u5728\u306e\u5024\u304c\u521d\u671f\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3068\u3057\u3066 \u5c65\u6b74\u306b\u8a18\u9332\u3055\u308c\u3001\u4ee5\u964d\u306e\u5909\u66f4\u304c\u8ffd\u8de1\u3055\u308c\u307e\u3059\u3002</p> Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def pub_enable_undo_redo(self, state_path: str, max_history: int = 10) -&gt; None:\n    \"\"\"\u6307\u5b9a\u3057\u305fstate path\u306b\u5bfe\u3057\u3066Undo/Redo\u6a5f\u80fd\u3092\u6709\u52b9\u5316\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n    Args:\n        state_path (str): Undo/Redo\u5bfe\u8c61\u306e\u72b6\u614b\u30d1\u30b9\uff08\u4f8b: \"counter\", \"user.name\"\uff09\n        max_history (int, optional): \u4fdd\u6301\u3059\u308b\u5c65\u6b74\u306e\u6700\u5927\u6570\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f10\u3002\n            \u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u3092\u5236\u5fa1\u3057\u305f\u3044\u5834\u5408\u306b\u8abf\u6574\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n    Note:\n        **RECOMMENDED**: Use store.state proxy for type-safe paths with IDE support:\n        `self.pub_enable_undo_redo(str(self.store.state.counter), max_history=50)`\n        The state proxy provides autocomplete and \"Go to Definition\" functionality.\n\n        \u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u6307\u5b9a\u3055\u308c\u305f\u30d1\u30b9\u306e\u73fe\u5728\u306e\u5024\u304c\u521d\u671f\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3068\u3057\u3066\n        \u5c65\u6b74\u306b\u8a18\u9332\u3055\u308c\u3001\u4ee5\u964d\u306e\u5909\u66f4\u304c\u8ffd\u8de1\u3055\u308c\u307e\u3059\u3002\n    \"\"\"\n    self.publish(\n        DefaultUndoTopic.ENABLE_UNDO_REDO,\n        state_path=str(state_path),\n        max_history=max_history,\n    )\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.pub_disable_undo_redo","title":"pub_disable_undo_redo","text":"<pre><code>pub_disable_undo_redo(state_path: str) -&gt; None\n</code></pre> <p>\u6307\u5b9a\u3057\u305fstate path\u306eUndo/Redo\u6a5f\u80fd\u3092\u7121\u52b9\u5316\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>state_path</code> <code>str</code> <p>\u7121\u52b9\u5316\u3059\u308b\u72b6\u614b\u30d1\u30b9</p> required Note <p>RECOMMENDED: Use store.state proxy for type-safe paths with IDE support: <code>self.pub_disable_undo_redo(str(self.store.state.counter))</code></p> <p>\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u6307\u5b9a\u3055\u308c\u305f\u30d1\u30b9\u306e\u5c65\u6b74\u30c7\u30fc\u30bf\u304c\u5b8c\u5168\u306b\u524a\u9664\u3055\u308c\u3001 \u30e1\u30e2\u30ea\u304c\u89e3\u653e\u3055\u308c\u307e\u3059\u3002\u518d\u5ea6\u6709\u52b9\u5316\u3057\u305f\u3044\u5834\u5408\u306fpub_enable_undo_redo\u3092 \u547c\u3073\u51fa\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def pub_disable_undo_redo(self, state_path: str) -&gt; None:\n    \"\"\"\u6307\u5b9a\u3057\u305fstate path\u306eUndo/Redo\u6a5f\u80fd\u3092\u7121\u52b9\u5316\u3059\u308bPubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n    Args:\n        state_path (str): \u7121\u52b9\u5316\u3059\u308b\u72b6\u614b\u30d1\u30b9\n\n    Note:\n        **RECOMMENDED**: Use store.state proxy for type-safe paths with IDE support:\n        `self.pub_disable_undo_redo(str(self.store.state.counter))`\n\n        \u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u6307\u5b9a\u3055\u308c\u305f\u30d1\u30b9\u306e\u5c65\u6b74\u30c7\u30fc\u30bf\u304c\u5b8c\u5168\u306b\u524a\u9664\u3055\u308c\u3001\n        \u30e1\u30e2\u30ea\u304c\u89e3\u653e\u3055\u308c\u307e\u3059\u3002\u518d\u5ea6\u6709\u52b9\u5316\u3057\u305f\u3044\u5834\u5408\u306fpub_enable_undo_redo\u3092\n        \u547c\u3073\u51fa\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n    \"\"\"\n    self.publish(DefaultUndoTopic.DISABLE_UNDO_REDO, state_path=str(state_path))\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.pub_undo","title":"pub_undo","text":"<pre><code>pub_undo(state_path: str) -&gt; None\n</code></pre> <p>\u6307\u5b9a\u3057\u305fstate path\u306e\u72b6\u614b\u30921\u3064\u524d\u306e\u5024\u306b\u623b\u3059PubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>state_path</code> <code>str</code> <p>Undo\u3092\u5b9f\u884c\u3059\u308b\u72b6\u614b\u30d1\u30b9</p> required Note <p>RECOMMENDED: Use store.state proxy for type-safe paths with IDE support: <code>self.pub_undo(str(self.store.state.counter))</code></p> <p>\u5c65\u6b74\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3084\u3001\u65e2\u306b\u6700\u521d\u306e\u72b6\u614b\u306e\u5834\u5408\u306f\u4f55\u3082\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002 Undo\u3055\u308c\u305f\u5909\u66f4\u306fRedo\u3067\u5143\u306b\u623b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def pub_undo(self, state_path: str) -&gt; None:\n    \"\"\"\u6307\u5b9a\u3057\u305fstate path\u306e\u72b6\u614b\u30921\u3064\u524d\u306e\u5024\u306b\u623b\u3059PubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n    Args:\n        state_path (str): Undo\u3092\u5b9f\u884c\u3059\u308b\u72b6\u614b\u30d1\u30b9\n\n    Note:\n        **RECOMMENDED**: Use store.state proxy for type-safe paths with IDE support:\n        `self.pub_undo(str(self.store.state.counter))`\n\n        \u5c65\u6b74\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3084\u3001\u65e2\u306b\u6700\u521d\u306e\u72b6\u614b\u306e\u5834\u5408\u306f\u4f55\u3082\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002\n        Undo\u3055\u308c\u305f\u5909\u66f4\u306fRedo\u3067\u5143\u306b\u623b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n    \"\"\"\n    self.publish(DefaultUndoTopic.UNDO, state_path=str(state_path))\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.pub_redo","title":"pub_redo","text":"<pre><code>pub_redo(state_path: str) -&gt; None\n</code></pre> <p>\u6307\u5b9a\u3057\u305fstate path\u306eUndo\u3092\u53d6\u308a\u6d88\u3059PubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>state_path</code> <code>str</code> <p>Redo\u3092\u5b9f\u884c\u3059\u308b\u72b6\u614b\u30d1\u30b9</p> required Note <p>RECOMMENDED: Use store.state proxy for type-safe paths with IDE support: <code>self.pub_redo(str(self.store.state.counter))</code></p> <p>Redo\u53ef\u80fd\u306a\u5c65\u6b74\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u4f55\u3082\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002 \u65b0\u3057\u3044\u5909\u66f4\u304c\u884c\u308f\u308c\u308b\u3068Redo\u5c65\u6b74\u306f\u30af\u30ea\u30a2\u3055\u308c\u307e\u3059\u3002</p> Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def pub_redo(self, state_path: str) -&gt; None:\n    \"\"\"\u6307\u5b9a\u3057\u305fstate path\u306eUndo\u3092\u53d6\u308a\u6d88\u3059PubSub\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n    Args:\n        state_path (str): Redo\u3092\u5b9f\u884c\u3059\u308b\u72b6\u614b\u30d1\u30b9\n\n    Note:\n        **RECOMMENDED**: Use store.state proxy for type-safe paths with IDE support:\n        `self.pub_redo(str(self.store.state.counter))`\n\n        Redo\u53ef\u80fd\u306a\u5c65\u6b74\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u4f55\u3082\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002\n        \u65b0\u3057\u3044\u5909\u66f4\u304c\u884c\u308f\u308c\u308b\u3068Redo\u5c65\u6b74\u306f\u30af\u30ea\u30a2\u3055\u308c\u307e\u3059\u3002\n    \"\"\"\n    self.publish(DefaultUndoTopic.REDO, state_path=str(state_path))\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.sub_undo_status","title":"sub_undo_status","text":"<pre><code>sub_undo_status(state_path: str, handler: Callable[[bool, bool, int, int], None]) -&gt; None\n</code></pre> <p>\u6307\u5b9a\u3057\u305f state path \u306e Undo/Redo \u72b6\u614b\u5909\u5316\u3092\u8cfc\u8aad\u3059\u308b\u3002</p> <p>\u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u5f15\u6570\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\uff1a     - can_undo (bool): Undo \u5b9f\u884c\u53ef\u80fd\u304b\u3069\u3046\u304b     - can_redo (bool): Redo \u5b9f\u884c\u53ef\u80fd\u304b\u3069\u3046\u304b     - undo_count (int): \u5b9f\u884c\u53ef\u80fd\u306a Undo \u56de\u6570     - redo_count (int): \u5b9f\u884c\u53ef\u80fd\u306a Redo \u56de\u6570</p> <p>Parameters:</p> Name Type Description Default <code>state_path</code> <code>str</code> <p>\u76e3\u8996\u3059\u308b\u72b6\u614b\u30d1\u30b9</p> required <code>handler</code> <code>Callable[[bool, bool, int, int], None]</code> <p>\u72b6\u614b\u5909\u5316\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570</p> required Note <p>\u63a8\u5968: store.state \u30d7\u30ed\u30ad\u30b7\u3092\u5229\u7528\u3059\u308b\u3068 IDE \u88dc\u5b8c\u3084\u4e00\u8cab\u3057\u305f\u30d1\u30b9\u6307\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002 \u4f8b: <code>self.sub_undo_status(self.store.state.counter, self.on_undo_status_changed)</code></p> Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def sub_undo_status(\n    self, state_path: str, handler: Callable[[bool, bool, int, int], None]\n) -&gt; None:\n    \"\"\"\n    \u6307\u5b9a\u3057\u305f state path \u306e Undo/Redo \u72b6\u614b\u5909\u5316\u3092\u8cfc\u8aad\u3059\u308b\u3002\n\n    \u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u5f15\u6570\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\uff1a\n        - can_undo (bool): Undo \u5b9f\u884c\u53ef\u80fd\u304b\u3069\u3046\u304b\n        - can_redo (bool): Redo \u5b9f\u884c\u53ef\u80fd\u304b\u3069\u3046\u304b\n        - undo_count (int): \u5b9f\u884c\u53ef\u80fd\u306a Undo \u56de\u6570\n        - redo_count (int): \u5b9f\u884c\u53ef\u80fd\u306a Redo \u56de\u6570\n\n    Args:\n        state_path (str): \u76e3\u8996\u3059\u308b\u72b6\u614b\u30d1\u30b9\n        handler (Callable[[bool, bool, int, int], None]): \u72b6\u614b\u5909\u5316\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n\n    Note:\n        \u63a8\u5968: store.state \u30d7\u30ed\u30ad\u30b7\u3092\u5229\u7528\u3059\u308b\u3068 IDE \u88dc\u5b8c\u3084\u4e00\u8cab\u3057\u305f\u30d1\u30b9\u6307\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002\n        \u4f8b: `self.sub_undo_status(self.store.state.counter, self.on_undo_status_changed)`\n    \"\"\"\n\n    self.subscribe(f\"{DefaultUndoTopic.STATUS_CHANGED}.{str(state_path)}\", handler)\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.sub_state_changed","title":"sub_state_changed","text":"<pre><code>sub_state_changed(state_path: str, handler: Callable[[Any, Any], None]) -&gt; None\n</code></pre> <p>\u72b6\u614b\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306e\u901a\u77e5\u3092\u8cfc\u8aad\u3059\u308b\u3002</p> <p>\u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u5f15\u6570\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\uff1a     - old_value (Any): \u5909\u66f4\u524d\u306e\u5024     - new_value (Any): \u5909\u66f4\u5f8c\u306e\u5024</p> <p>Parameters:</p> Name Type Description Default <code>state_path</code> <code>str</code> <p>\u76e3\u8996\u3059\u308b\u72b6\u614b\u306e\u30d1\u30b9\uff08\u4f8b: \"user.name\", \"items[2].value\"\uff09</p> required <code>handler</code> <code>Callable[[Any, Any], None]</code> <p>\u5909\u66f4\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570</p> required Note <p>\u63a8\u5968: store.state \u30d7\u30ed\u30ad\u30b7\u3092\u5229\u7528\u3057\u3066\u4e00\u8cab\u3057\u305f\u30d1\u30b9\u6307\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002 \u4f8b: <code>self.sub_state_changed(self.store.state.user.name, self.on_name_changed)</code></p> Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def sub_state_changed(\n    self, state_path: str, handler: Callable[[Any, Any], None]\n) -&gt; None:\n    \"\"\"\n    \u72b6\u614b\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306e\u901a\u77e5\u3092\u8cfc\u8aad\u3059\u308b\u3002\n\n    \u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u5f15\u6570\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\uff1a\n        - old_value (Any): \u5909\u66f4\u524d\u306e\u5024\n        - new_value (Any): \u5909\u66f4\u5f8c\u306e\u5024\n\n    Args:\n        state_path (str): \u76e3\u8996\u3059\u308b\u72b6\u614b\u306e\u30d1\u30b9\uff08\u4f8b: \"user.name\", \"items[2].value\"\uff09\n        handler (Callable[[Any, Any], None]): \u5909\u66f4\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n\n    Note:\n        \u63a8\u5968: store.state \u30d7\u30ed\u30ad\u30b7\u3092\u5229\u7528\u3057\u3066\u4e00\u8cab\u3057\u305f\u30d1\u30b9\u6307\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002\n        \u4f8b: `self.sub_state_changed(self.store.state.user.name, self.on_name_changed)`\n    \"\"\"\n\n    self.subscribe(f\"{DefaultUpdateTopic.STATE_CHANGED}.{str(state_path)}\", handler)\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.sub_for_refresh","title":"sub_for_refresh","text":"<pre><code>sub_for_refresh(state_path: str, handler: Callable[[], None]) -&gt; None\n</code></pre> <p>\u72b6\u614b\u304c\u66f4\u65b0\u3055\u308c\u305f\u3068\u304d\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u901a\u77e5\uff08UI\u518d\u63cf\u753b\u7528\uff09\u3092\u8cfc\u8aad\u3059\u308b\u3002</p> <p>\u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u5f15\u6570\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\uff1a     - \u306a\u3057</p> <p>Parameters:</p> Name Type Description Default <code>state_path</code> <code>str</code> <p>\u76e3\u8996\u3059\u308b\u72b6\u614b\u306e\u30d1\u30b9</p> required <code>handler</code> <code>Callable[[], None]</code> <p>\u66f4\u65b0\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u5f15\u6570\u306a\u3057\u306e\u95a2\u6570</p> required Note <p>\u63a8\u5968: store.state \u30d7\u30ed\u30ad\u30b7\u3092\u5229\u7528\u3057\u3066\u4e00\u8cab\u3057\u305f\u30d1\u30b9\u6307\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002 \u4f8b: <code>self.sub_for_refresh(self.store.state.user.name, self.refresh_ui)</code></p> Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def sub_for_refresh(self, state_path: str, handler: Callable[[], None]) -&gt; None:\n    \"\"\"\n    \u72b6\u614b\u304c\u66f4\u65b0\u3055\u308c\u305f\u3068\u304d\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u901a\u77e5\uff08UI\u518d\u63cf\u753b\u7528\uff09\u3092\u8cfc\u8aad\u3059\u308b\u3002\n\n    \u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u5f15\u6570\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\uff1a\n        - \u306a\u3057\n\n    Args:\n        state_path (str): \u76e3\u8996\u3059\u308b\u72b6\u614b\u306e\u30d1\u30b9\n        handler (Callable[[], None]): \u66f4\u65b0\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u5f15\u6570\u306a\u3057\u306e\u95a2\u6570\n\n    Note:\n        \u63a8\u5968: store.state \u30d7\u30ed\u30ad\u30b7\u3092\u5229\u7528\u3057\u3066\u4e00\u8cab\u3057\u305f\u30d1\u30b9\u6307\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002\n        \u4f8b: `self.sub_for_refresh(self.store.state.user.name, self.refresh_ui)`\n    \"\"\"\n\n    self.subscribe(f\"{DefaultUpdateTopic.STATE_UPDATED}.{str(state_path)}\", handler)\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.sub_state_added","title":"sub_state_added","text":"<pre><code>sub_state_added(state_path: str, handler: Callable[[Any, int], None]) -&gt; None\n</code></pre> <p>\u30ea\u30b9\u30c8\u306b\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c\u305f\u3068\u304d\u306e\u901a\u77e5\u3092\u8cfc\u8aad\u3059\u308b\u3002</p> <p>\u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u5f15\u6570\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\uff1a     - item (Any): \u8ffd\u52a0\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0     - index (int): \u8ffd\u52a0\u3055\u308c\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9</p> <p>Parameters:</p> Name Type Description Default <code>state_path</code> <code>str</code> <p>\u76e3\u8996\u3059\u308b\u30ea\u30b9\u30c8\u72b6\u614b\u306e\u30d1\u30b9</p> required <code>handler</code> <code>Callable[[Any, int], None]</code> <p>\u8981\u7d20\u8ffd\u52a0\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570</p> required Note <p>\u63a8\u5968: store.state \u30d7\u30ed\u30ad\u30b7\u3092\u5229\u7528\u3057\u3066\u4e00\u8cab\u3057\u305f\u30d1\u30b9\u6307\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002 \u4f8b: <code>self.sub_state_added(self.store.state.items, self.on_item_added)</code></p> Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def sub_state_added(\n    self, state_path: str, handler: Callable[[Any, int], None]\n) -&gt; None:\n    \"\"\"\n    \u30ea\u30b9\u30c8\u306b\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c\u305f\u3068\u304d\u306e\u901a\u77e5\u3092\u8cfc\u8aad\u3059\u308b\u3002\n\n    \u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u5f15\u6570\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\uff1a\n        - item (Any): \u8ffd\u52a0\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0\n        - index (int): \u8ffd\u52a0\u3055\u308c\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n\n    Args:\n        state_path (str): \u76e3\u8996\u3059\u308b\u30ea\u30b9\u30c8\u72b6\u614b\u306e\u30d1\u30b9\n        handler (Callable[[Any, int], None]): \u8981\u7d20\u8ffd\u52a0\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\n\n    Note:\n        \u63a8\u5968: store.state \u30d7\u30ed\u30ad\u30b7\u3092\u5229\u7528\u3057\u3066\u4e00\u8cab\u3057\u305f\u30d1\u30b9\u6307\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002\n        \u4f8b: `self.sub_state_added(self.store.state.items, self.on_item_added)`\n    \"\"\"\n\n    self.subscribe(f\"{DefaultUpdateTopic.STATE_ADDED}.{str(state_path)}\", handler)\n</code></pre>"},{"location":"api/pubsubtk/core/default_topic_base/#pubsubtk.core.default_topic_base.PubSubDefaultTopicBase.sub_dict_item_added","title":"sub_dict_item_added","text":"<pre><code>sub_dict_item_added(state_path: str, handler: Callable[[str, Any], None]) -&gt; None\n</code></pre> <p>\u8f9e\u66f8\u306b\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c\u305f\u3068\u304d\u306e\u901a\u77e5\u3092\u8cfc\u8aad\u3059\u308b\u3002</p> <p>\u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u5f15\u6570\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\uff1a     - key (str): \u8ffd\u52a0\u3055\u308c\u305f\u30ad\u30fc     - value (Any): \u8ffd\u52a0\u3055\u308c\u305f\u5024</p> <p>Parameters:</p> Name Type Description Default <code>state_path</code> <code>str</code> <p>\u76e3\u8996\u3059\u308b\u8f9e\u66f8\u72b6\u614b\u306e\u30d1\u30b9</p> required <code>handler</code> <code>Callable[[str, Any], None]</code> <p>\u8ffd\u52a0\u3055\u308c\u305f\u30ad\u30fc\u3068\u5024\u3092\u5f15\u6570\u306b\u53d6\u308b\u95a2\u6570</p> required Note <p>\u63a8\u5968: store.state \u30d7\u30ed\u30ad\u30b7\u3092\u5229\u7528\u3057\u3066\u4e00\u8cab\u3057\u305f\u30d1\u30b9\u6307\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002 \u4f8b: <code>self.sub_dict_item_added(self.store.state.mapping, self.on_added)</code></p> Source code in <code>src/pubsubtk/core/default_topic_base.py</code> <pre><code>def sub_dict_item_added(\n    self, state_path: str, handler: Callable[[str, Any], None]\n) -&gt; None:\n    \"\"\"\n    \u8f9e\u66f8\u306b\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c\u305f\u3068\u304d\u306e\u901a\u77e5\u3092\u8cfc\u8aad\u3059\u308b\u3002\n\n    \u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u5f15\u6570\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\uff1a\n        - key (str): \u8ffd\u52a0\u3055\u308c\u305f\u30ad\u30fc\n        - value (Any): \u8ffd\u52a0\u3055\u308c\u305f\u5024\n\n    Args:\n        state_path (str): \u76e3\u8996\u3059\u308b\u8f9e\u66f8\u72b6\u614b\u306e\u30d1\u30b9\n        handler (Callable[[str, Any], None]): \u8ffd\u52a0\u3055\u308c\u305f\u30ad\u30fc\u3068\u5024\u3092\u5f15\u6570\u306b\u53d6\u308b\u95a2\u6570\n\n    Note:\n        \u63a8\u5968: store.state \u30d7\u30ed\u30ad\u30b7\u3092\u5229\u7528\u3057\u3066\u4e00\u8cab\u3057\u305f\u30d1\u30b9\u6307\u5b9a\u304c\u53ef\u80fd\u3067\u3059\u3002\n        \u4f8b: `self.sub_dict_item_added(self.store.state.mapping, self.on_added)`\n    \"\"\"\n\n    self.subscribe(\n        f\"{DefaultUpdateTopic.DICT_ADDED}.{str(state_path)}\",\n        handler,\n    )\n</code></pre>"},{"location":"api/pubsubtk/core/pubsub_base/","title":"pubsubtk.core.pubsub_base","text":""},{"location":"api/pubsubtk/core/pubsub_base/#pubsubtk.core.pubsub_base","title":"pubsubtk.core.pubsub_base","text":"<p>Pub/Sub \u30d1\u30bf\u30fc\u30f3\u306e\u5171\u901a\u6a5f\u80fd\u3092\u307e\u3068\u3081\u305f\u62bd\u8c61\u57fa\u5e95\u30af\u30e9\u30b9\u3002</p>"},{"location":"api/pubsubtk/core/pubsub_base/#pubsubtk.core.pubsub_base.PubSubBase","title":"PubSubBase","text":"<pre><code>PubSubBase(*args, **kwargs)\n</code></pre> <p>               Bases: <code>ABC</code></p> <p>PubSub\u30d1\u30bf\u30fc\u30f3\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3002</p> <ul> <li>setup_subscriptions()\u3067\u8cfc\u8aad\u8a2d\u5b9a\u3092\u884c\u3046\u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b</li> <li>subscribe()/send_message()/unsubscribe()/unsubscribe_all()\u3067\u8cfc\u8aad\u7ba1\u7406</li> <li>teardown()\u3067\u5168\u8cfc\u8aad\u89e3\u9664</li> <li>\u7d99\u627f\u5148\u3067\u8cfc\u8aad\u8a2d\u5b9a\u3092\u7c21\u6f54\u306b\u8a18\u8ff0\u53ef\u80fd</li> <li>DEBUG\u30ec\u30d9\u30eb\u3067PubSub\u64cd\u4f5c\u3092\u30ed\u30b0\u51fa\u529b</li> </ul> Source code in <code>src/pubsubtk/core/pubsub_base.py</code> <pre><code>def __init__(self, *args, **kwargs):\n    self._subscriptions: List[Dict[str, Any]] = []\n    self.setup_subscriptions()\n</code></pre>"},{"location":"api/pubsubtk/core/pubsub_base/#pubsubtk.core.pubsub_base.PubSubBase.setup_subscriptions","title":"setup_subscriptions  <code>abstractmethod</code>","text":"<pre><code>setup_subscriptions() -&gt; None\n</code></pre> <p>\u7d99\u627f\u5148\u3067\u8cfc\u8aad\u8a2d\u5b9a\u3092\u884c\u3046\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u3002</p> \u4f8b <p>class MyPS(PubSubBase):     def setup_subscriptions(self):         self.subscribe(TopicEnum.STATE_CHANGED, self.on_change)</p> Source code in <code>src/pubsubtk/core/pubsub_base.py</code> <pre><code>@abstractmethod\ndef setup_subscriptions(self) -&gt; None:\n    \"\"\"\n    \u7d99\u627f\u5148\u3067\u8cfc\u8aad\u8a2d\u5b9a\u3092\u884c\u3046\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u3002\n\n    \u4f8b:\n        class MyPS(PubSubBase):\n            def setup_subscriptions(self):\n                self.subscribe(TopicEnum.STATE_CHANGED, self.on_change)\n    \"\"\"\n    pass\n</code></pre>"},{"location":"api/pubsubtk/core/pubsub_base/#pubsubtk.core.pubsub_base.PubSubBase.teardown","title":"teardown","text":"<pre><code>teardown() -&gt; None\n</code></pre> <p>\u5168\u3066\u306e\u8cfc\u8aad\u3092\u89e3\u9664\u3059\u308b\u3002</p> Source code in <code>src/pubsubtk/core/pubsub_base.py</code> <pre><code>def teardown(self) -&gt; None:\n    \"\"\"\n    \u5168\u3066\u306e\u8cfc\u8aad\u3092\u89e3\u9664\u3059\u308b\u3002\n    \"\"\"\n    self.unsubscribe_all()\n</code></pre>"},{"location":"api/pubsubtk/core/pubsub_base/#pubsubtk.core.pubsub_base.enable_pubsub_debug_logging","title":"enable_pubsub_debug_logging","text":"<pre><code>enable_pubsub_debug_logging(level: int = DEBUG) -&gt; None\n</code></pre> <p>PubSub\u306e\u30c7\u30d0\u30c3\u30b0\u30ed\u30b0\u3092\u6709\u52b9\u5316\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>level</code> <code>int</code> <p>\u30ed\u30b0\u30ec\u30d9\u30eb\uff08\u30c7\u30d5\u30a9\u30eb\u30c8: DEBUG\uff09</p> <code>DEBUG</code> \u4f7f\u7528\u4f8b <p>from pubsubtk.core.pubsub_base import enable_pubsub_debug_logging enable_pubsub_debug_logging()</p> Source code in <code>src/pubsubtk/core/pubsub_base.py</code> <pre><code>def enable_pubsub_debug_logging(level: int = logging.DEBUG) -&gt; None:\n    \"\"\"\n    PubSub\u306e\u30c7\u30d0\u30c3\u30b0\u30ed\u30b0\u3092\u6709\u52b9\u5316\u3059\u308b\u3002\n\n    Args:\n        level: \u30ed\u30b0\u30ec\u30d9\u30eb\uff08\u30c7\u30d5\u30a9\u30eb\u30c8: DEBUG\uff09\n\n    \u4f7f\u7528\u4f8b:\n        from pubsubtk.core.pubsub_base import enable_pubsub_debug_logging\n        enable_pubsub_debug_logging()\n    \"\"\"\n    _pubsub_logger.setLevel(level)\n\n    # \u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u672a\u8a2d\u5b9a\u306e\u5834\u5408\u306f\u30b3\u30f3\u30bd\u30fc\u30eb\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u8ffd\u52a0\n    if not _pubsub_logger.handlers:\n        handler = logging.StreamHandler()\n        formatter = logging.Formatter(\n            \"[%(asctime)s] %(name)s - %(levelname)s - %(message)s\", datefmt=\"%H:%M:%S\"\n        )\n        handler.setFormatter(formatter)\n        _pubsub_logger.addHandler(handler)\n\n    _pubsub_logger.debug(\"PubSub debug logging enabled\")\n</code></pre>"},{"location":"api/pubsubtk/core/pubsub_base/#pubsubtk.core.pubsub_base.disable_pubsub_debug_logging","title":"disable_pubsub_debug_logging","text":"<pre><code>disable_pubsub_debug_logging() -&gt; None\n</code></pre> <p>PubSub\u306e\u30c7\u30d0\u30c3\u30b0\u30ed\u30b0\u3092\u7121\u52b9\u5316\u3059\u308b\u3002</p> Source code in <code>src/pubsubtk/core/pubsub_base.py</code> <pre><code>def disable_pubsub_debug_logging() -&gt; None:\n    \"\"\"\n    PubSub\u306e\u30c7\u30d0\u30c3\u30b0\u30ed\u30b0\u3092\u7121\u52b9\u5316\u3059\u308b\u3002\n    \"\"\"\n    _pubsub_logger.setLevel(logging.WARNING)\n    _pubsub_logger.debug(\"PubSub debug logging disabled\")\n</code></pre>"},{"location":"api/pubsubtk/processor/processor_base/","title":"pubsubtk.processor.processor_base","text":""},{"location":"api/pubsubtk/processor/processor_base/#pubsubtk.processor.processor_base","title":"pubsubtk.processor.processor_base","text":"<p>\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u62c5\u3046 Processor \u7528\u306e\u62bd\u8c61\u57fa\u5e95\u30af\u30e9\u30b9\u3002</p>"},{"location":"api/pubsubtk/processor/processor_base/#pubsubtk.processor.processor_base.ProcessorBase","title":"ProcessorBase","text":"<pre><code>ProcessorBase(store: Store[TState], *args, **kwargs)\n</code></pre> <p>               Bases: <code>PubSubDefaultTopicBase</code>, <code>Generic[TState]</code></p> <p>Processor \u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3002</p> <p>Store \u3092\u53d7\u3051\u53d6\u3063\u3066\u521d\u671f\u5316\u3057\u307e\u3059\u3002</p> Source code in <code>src/pubsubtk/processor/processor_base.py</code> <pre><code>def __init__(self, store: Store[TState], *args, **kwargs) -&gt; None:\n    \"\"\"Store \u3092\u53d7\u3051\u53d6\u3063\u3066\u521d\u671f\u5316\u3057\u307e\u3059\u3002\"\"\"\n\n    # \u578b\u5f15\u6570\u4ed8\u304d\u306e Store[TState] \u3092\u53d6\u5f97\n    self.store: Store[TState] = store\n\n    super().__init__(*args, **kwargs)\n</code></pre>"},{"location":"api/pubsubtk/store/store/","title":"pubsubtk.store.store","text":""},{"location":"api/pubsubtk/store/store/#pubsubtk.store.store","title":"pubsubtk.store.store","text":"<p>src/pubsubtk/store/store.py</p> <p>Pydantic \u30e2\u30c7\u30eb\u3092\u7528\u3044\u305f\u578b\u5b89\u5168\u306a\u72b6\u614b\u7ba1\u7406\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p>"},{"location":"api/pubsubtk/store/store/#pubsubtk.store.store.StateProxy","title":"StateProxy","text":"<pre><code>StateProxy(store: Store[TState], path: str = '')\n</code></pre> <p>               Bases: <code>Generic[TState]</code></p> <p>Store\u306estate\u5c5e\u6027\u306b\u5bfe\u3059\u308b\u52d5\u7684\u306a\u30d1\u30b9\u30a2\u30af\u30bb\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u30d7\u30ed\u30ad\u30b7\u3002</p> <ul> <li>store.state.foo.bar \u306e\u3088\u3046\u306a\u30c9\u30c3\u30c8\u8a18\u6cd5\u3067\u30cd\u30b9\u30c8\u5c5e\u6027\u3078\u30a2\u30af\u30bb\u30b9\u53ef\u80fd</li> <li>\u5b58\u5728\u3057\u306a\u3044\u5c5e\u6027\u30a2\u30af\u30bb\u30b9\u6642\u306f AttributeError \u3092\u9001\u51fa</li> <li>repr \u3067\u30d1\u30b9\u6587\u5b57\u5217\u3092\u8fd4\u3059</li> </ul> <p>StateProxy \u3092\u521d\u671f\u5316\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>store</code> <code>Store[TState]</code> <p>\u5024\u3092\u53c2\u7167\u3059\u308b\u5bfe\u8c61 <code>Store</code>\u3002</p> required <code>path</code> <code>str</code> <p>\u73fe\u5728\u306e\u30d1\u30b9\u6587\u5b57\u5217\u3002</p> <code>''</code> Source code in <code>src/pubsubtk/store/store.py</code> <pre><code>def __init__(self, store: \"Store[TState]\", path: str = \"\"):\n    \"\"\"StateProxy \u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n    Args:\n        store: \u5024\u3092\u53c2\u7167\u3059\u308b\u5bfe\u8c61 ``Store``\u3002\n        path: \u73fe\u5728\u306e\u30d1\u30b9\u6587\u5b57\u5217\u3002\n    \"\"\"\n\n    self._store = store\n    self._path = path\n</code></pre>"},{"location":"api/pubsubtk/store/store/#pubsubtk.store.store.StateProxy.__getattr__","title":"__getattr__","text":"<pre><code>__getattr__(name: str) -&gt; StateProxy[TState]\n</code></pre> <p>\u5c5e\u6027\u30a2\u30af\u30bb\u30b9\u3092\u9023\u7d50\u3057\u305f <code>StateProxy</code> \u3092\u8fd4\u3059\u3002</p> Source code in <code>src/pubsubtk/store/store.py</code> <pre><code>def __getattr__(self, name: str) -&gt; \"StateProxy[TState]\":\n    \"\"\"\u5c5e\u6027\u30a2\u30af\u30bb\u30b9\u3092\u9023\u7d50\u3057\u305f ``StateProxy`` \u3092\u8fd4\u3059\u3002\"\"\"\n\n    new_path = f\"{self._path}.{name}\" if self._path else name\n\n    # \u5b58\u5728\u30c1\u30a7\u30c3\u30af\uff1aTState \u30e2\u30c7\u30eb\u306b new_path \u304c\u901a\u308b\u304b\u78ba\u8a8d\n    cur = self._store.get_current_state()\n    for seg in new_path.split(\".\"):\n        if hasattr(cur, seg):\n            cur = getattr(cur, seg)\n        else:\n            raise AttributeError(f\"No such property: store.state.{new_path}\")\n\n    return StateProxy(self._store, new_path)\n</code></pre>"},{"location":"api/pubsubtk/store/store/#pubsubtk.store.store.StateProxy.__repr__","title":"__repr__","text":"<pre><code>__repr__() -&gt; str\n</code></pre> <p>State\u578b\u540d\u3092\u542b\u3080\u30d1\u30b9\u6587\u5b57\u5217\u3092\u8fd4\u3059\u3002</p> Source code in <code>src/pubsubtk/store/store.py</code> <pre><code>def __repr__(self) -&gt; str:\n    \"\"\"State\u578b\u540d\u3092\u542b\u3080\u30d1\u30b9\u6587\u5b57\u5217\u3092\u8fd4\u3059\u3002\"\"\"\n\n    prefix = self._store._state_class.__name__\n    return f\"{prefix}.{self._path}\" if self._path else prefix\n</code></pre>"},{"location":"api/pubsubtk/store/store/#pubsubtk.store.store.Store","title":"Store","text":"<pre><code>Store(initial_state_class: Type[TState])\n</code></pre> <p>               Bases: <code>PubSubBase</code>, <code>Generic[TState]</code></p> <p>\u578b\u5b89\u5168\u306a\u72b6\u614b\u7ba1\u7406\u3092\u63d0\u4f9b\u3059\u308b\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306aStore\u30af\u30e9\u30b9\u3002</p> <ul> <li>Pydantic\u30e2\u30c7\u30eb\u3092\u72b6\u614b\u3068\u3057\u3066\u4fdd\u6301\u3057\u3001\u72b6\u614b\u64cd\u4f5c\u3092\u63d0\u4f9b</li> <li>get_current_state()\u3067\u72b6\u614b\u306e\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u3092\u53d6\u5f97</li> <li>update_state()/add_to_list()/add_to_dict()\u3067\u72b6\u614b\u3092\u66f4\u65b0\u3057\u3001PubSub\u3067\u901a\u77e5</li> <li><code>store.state.count</code> \u306e\u3088\u3046\u306a\u30d1\u30b9\u30d7\u30ed\u30ad\u30b7\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001   <code>store.update_state(store.state.count, 1)</code> \u306e\u3088\u3046\u306bIDE\u306e\u300c\u5b9a\u7fa9\u3078\u79fb\u52d5\u300d\u3084\u88dc\u5b8c\u6a5f\u80fd\u3092\u6d3b\u7528\u3057\u3064\u3064\u3001   \u72b6\u614b\u66f4\u65b0\u306e\u30d1\u30b9\u3092\u5b89\u5168\u30fb\u660e\u793a\u7684\u306b\u6307\u5b9a\u3067\u304d\u308b\uff08\u5f93\u6765\u306e\u6587\u5b57\u5217\u30d1\u30b9\u6307\u5b9a\u306e\u5f31\u70b9\u3092\u89e3\u6d88\uff09</li> </ul> <p>Store \u3092\u521d\u671f\u5316\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>initial_state_class</code> <code>Type[TState]</code> <p>\u7ba1\u7406\u5bfe\u8c61\u3068\u306a\u308b <code>BaseModel</code> \u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3002</p> required Source code in <code>src/pubsubtk/store/store.py</code> <pre><code>def __init__(self, initial_state_class: Type[TState]):\n    \"\"\"Store \u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n    Args:\n        initial_state_class: \u7ba1\u7406\u5bfe\u8c61\u3068\u306a\u308b ``BaseModel`` \u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3002\n    \"\"\"\n    self._state_class = initial_state_class\n    self._state = initial_state_class()\n\n    # Undo/Redo \u5c65\u6b74\u7ba1\u7406\u7528\u30d5\u30a3\u30fc\u30eb\u30c9\n    self._undo_enabled: set[str] = set()  # \u8ffd\u8de1\u5bfe\u8c61\u30d1\u30b9\n    self._undo_stacks: dict[str, list] = defaultdict(list)  # \u30d1\u30b9\u5225Undo\u30b9\u30bf\u30c3\u30af\n    self._redo_stacks: dict[str, list] = defaultdict(list)  # \u30d1\u30b9\u5225Redo\u30b9\u30bf\u30c3\u30af\n    self._max_histories: dict[str, int] = {}  # \u30d1\u30b9\u5225\u5c65\u6b74\u4e0a\u9650\n    self._during_ur_op: bool = False  # Undo/Redo\u64cd\u4f5c\u4e2d\u306e\u518d\u5e30\u6291\u5236\u30d5\u30e9\u30b0\n\n    # PubSubBase.__init__()\u3092\u547c\u3073\u51fa\u3057\u3066\u8cfc\u8aad\u8a2d\u5b9a\u3092\u6709\u52b9\u5316\n    super().__init__()\n</code></pre>"},{"location":"api/pubsubtk/store/store/#pubsubtk.store.store.Store.state","title":"state  <code>property</code>","text":"<pre><code>state: TState\n</code></pre> <p>\u72b6\u614b\u3078\u306e\u52d5\u7684\u30d1\u30b9\u30a2\u30af\u30bb\u30b9\u7528\u30d7\u30ed\u30ad\u30b7\u3092\u8fd4\u3059\u3002</p>"},{"location":"api/pubsubtk/store/store/#pubsubtk.store.store.Store.get_current_state","title":"get_current_state","text":"<pre><code>get_current_state() -&gt; TState\n</code></pre> <p>\u73fe\u5728\u306e\u72b6\u614b\u306e\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u3092\u8fd4\u3059\u3002</p> Source code in <code>src/pubsubtk/store/store.py</code> <pre><code>def get_current_state(self) -&gt; TState:\n    \"\"\"\n    \u73fe\u5728\u306e\u72b6\u614b\u306e\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u3092\u8fd4\u3059\u3002\n    \"\"\"\n    return self._state.model_copy(deep=True)\n</code></pre>"},{"location":"api/pubsubtk/store/store/#pubsubtk.store.store.Store.replace_state","title":"replace_state","text":"<pre><code>replace_state(new_state: TState) -&gt; None\n</code></pre> <p>\u72b6\u614b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5168\u4f53\u3092\u7f6e\u304d\u63db\u3048\u3001\u5168\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5909\u66f4\u901a\u77e5\u3092\u9001\u4fe1\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>new_state</code> <code>TState</code> <p>\u65b0\u3057\u3044\u72b6\u614b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002</p> required Source code in <code>src/pubsubtk/store/store.py</code> <pre><code>def replace_state(self, new_state: TState) -&gt; None:\n    \"\"\"\u72b6\u614b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5168\u4f53\u3092\u7f6e\u304d\u63db\u3048\u3001\u5168\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5909\u66f4\u901a\u77e5\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n    Args:\n        new_state: \u65b0\u3057\u3044\u72b6\u614b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\n    \"\"\"\n    if not isinstance(new_state, self._state_class):\n        raise TypeError(f\"new_state must be an instance of {self._state_class}\")\n\n    old_state = self._state\n    self._state = new_state.model_copy(deep=True)\n\n    # \u5168\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5909\u66f4\u901a\u77e5\u3092\u9001\u4fe1\n    for field_name in self._state_class.model_fields.keys():\n        old_value = getattr(old_state, field_name)\n        new_value = getattr(self._state, field_name)\n\n        self.publish(\n            f\"{DefaultUpdateTopic.STATE_CHANGED}.{field_name}\",\n            old_value=old_value,\n            new_value=new_value,\n        )\n        self.publish(f\"{DefaultUpdateTopic.STATE_UPDATED}.{field_name}\")\n</code></pre>"},{"location":"api/pubsubtk/store/store/#pubsubtk.store.store.Store.update_state","title":"update_state","text":"<pre><code>update_state(state_path: str, new_value: Any) -&gt; None\n</code></pre> <p>\u6307\u5b9a\u30d1\u30b9\u306e\u5c5e\u6027\u3092\u66f4\u65b0\u3057\u3001\u5909\u66f4\u901a\u77e5\u3092\u9001\u4fe1\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>state_path</code> <code>str</code> <p>\u5909\u66f4\u5bfe\u8c61\u306e\u5c5e\u6027\u30d1\u30b9\uff08\u4f8b: <code>\"foo.bar\"</code>\uff09\u3002</p> required <code>new_value</code> <code>Any</code> <p>\u65b0\u3057\u304f\u8a2d\u5b9a\u3059\u308b\u5024\u3002</p> required Source code in <code>src/pubsubtk/store/store.py</code> <pre><code>def update_state(self, state_path: str, new_value: Any) -&gt; None:\n    \"\"\"\u6307\u5b9a\u30d1\u30b9\u306e\u5c5e\u6027\u3092\u66f4\u65b0\u3057\u3001\u5909\u66f4\u901a\u77e5\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n    Args:\n        state_path: \u5909\u66f4\u5bfe\u8c61\u306e\u5c5e\u6027\u30d1\u30b9\uff08\u4f8b: ``\"foo.bar\"``\uff09\u3002\n        new_value: \u65b0\u3057\u304f\u8a2d\u5b9a\u3059\u308b\u5024\u3002\n    \"\"\"\n    try:\n        target_obj, attr_name, old_value = self._resolve_path(str(state_path))\n    except ValueError:\n        return\n\n    # Undo\u5c65\u6b74\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\uff08\u65e2\u5b58\u306e\u5024\u3092\u8a18\u9332\uff09\n    self._capture_for_undo(str(state_path), old_value)\n\n    # \u65b0\u3057\u3044\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u524d\u306b\u578b\u30c1\u30a7\u30c3\u30af\n    self._validate_and_set_value(target_obj, attr_name, new_value)\n\n    # \u8a73\u7d30\u306a\u5909\u66f4\u901a\u77e5\uff08old_value, new_value\u3092\u542b\u3080\uff09\n    self.publish(\n        f\"{DefaultUpdateTopic.STATE_CHANGED}.{state_path}\",\n        old_value=old_value,\n        new_value=new_value,\n    )\n\n    # \u30b7\u30f3\u30d7\u30eb\u306a\u66f4\u65b0\u901a\u77e5\uff08\u5f15\u6570\u306a\u3057\uff09\n    self.publish(f\"{DefaultUpdateTopic.STATE_UPDATED}.{state_path}\")\n</code></pre>"},{"location":"api/pubsubtk/store/store/#pubsubtk.store.store.Store.add_to_list","title":"add_to_list","text":"<pre><code>add_to_list(state_path: str, item: Any) -&gt; None\n</code></pre> <p>\u30ea\u30b9\u30c8\u5c5e\u6027\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u3001\u8ffd\u52a0\u901a\u77e5\u3092\u9001\u4fe1\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>state_path</code> <code>str</code> <p>\u8ffd\u52a0\u5148\u3068\u306a\u308b\u30ea\u30b9\u30c8\u306e\u5c5e\u6027\u30d1\u30b9\u3002</p> required <code>item</code> <code>Any</code> <p>\u8ffd\u52a0\u3059\u308b\u8981\u7d20\u3002</p> required Source code in <code>src/pubsubtk/store/store.py</code> <pre><code>def add_to_list(self, state_path: str, item: Any) -&gt; None:\n    \"\"\"\u30ea\u30b9\u30c8\u5c5e\u6027\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u3001\u8ffd\u52a0\u901a\u77e5\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n    Args:\n        state_path: \u8ffd\u52a0\u5148\u3068\u306a\u308b\u30ea\u30b9\u30c8\u306e\u5c5e\u6027\u30d1\u30b9\u3002\n        item: \u8ffd\u52a0\u3059\u308b\u8981\u7d20\u3002\n    \"\"\"\n    try:\n        target_obj, attr_name, current_list = self._resolve_path(str(state_path))\n    except ValueError:\n        return\n\n    if not isinstance(current_list, list):\n        raise TypeError(f\"Property at '{state_path}' is not a list\")\n\n    # Undo\u5c65\u6b74\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\uff08\u65e2\u5b58\u306e\u30ea\u30b9\u30c8\u3092\u8a18\u9332\uff09\n    self._capture_for_undo(str(state_path), current_list)\n\n    # \u30ea\u30b9\u30c8\u3092\u30b3\u30d4\u30fc\u3057\u3066\u65b0\u3057\u3044\u8981\u7d20\u3092\u8ffd\u52a0\n    new_list = current_list.copy()\n    new_list.append(item)\n\n    # \u65b0\u3057\u3044\u30ea\u30b9\u30c8\u3067\u66f4\u65b0\n    self._validate_and_set_value(target_obj, attr_name, new_list)\n\n    index = len(new_list) - 1\n\n    self.publish(\n        f\"{DefaultUpdateTopic.STATE_ADDED}.{state_path}\",\n        item=item,\n        index=index,\n    )\n\n    # \u30ea\u30b9\u30c8\u8ffd\u52a0\u3067\u3082\u66f4\u65b0\u901a\u77e5\u3092\u9001\u4fe1\n    self.publish(f\"{DefaultUpdateTopic.STATE_UPDATED}.{state_path}\")\n</code></pre>"},{"location":"api/pubsubtk/store/store/#pubsubtk.store.store.Store.add_to_dict","title":"add_to_dict","text":"<pre><code>add_to_dict(state_path: str, key: str, value: Any) -&gt; None\n</code></pre> <p>\u8f9e\u66f8\u5c5e\u6027\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u3001\u8ffd\u52a0\u901a\u77e5\u3092\u9001\u4fe1\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>state_path</code> <code>str</code> <p>\u8ffd\u52a0\u5148\u3068\u306a\u308b\u8f9e\u66f8\u306e\u5c5e\u6027\u30d1\u30b9\u3002</p> required <code>key</code> <code>str</code> <p>\u8ffd\u52a0\u3059\u308b\u30ad\u30fc\u3002</p> required <code>value</code> <code>Any</code> <p>\u8ffd\u52a0\u3059\u308b\u5024\u3002</p> required Source code in <code>src/pubsubtk/store/store.py</code> <pre><code>def add_to_dict(self, state_path: str, key: str, value: Any) -&gt; None:\n    \"\"\"\u8f9e\u66f8\u5c5e\u6027\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u3001\u8ffd\u52a0\u901a\u77e5\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n    Args:\n        state_path: \u8ffd\u52a0\u5148\u3068\u306a\u308b\u8f9e\u66f8\u306e\u5c5e\u6027\u30d1\u30b9\u3002\n        key: \u8ffd\u52a0\u3059\u308b\u30ad\u30fc\u3002\n        value: \u8ffd\u52a0\u3059\u308b\u5024\u3002\n    \"\"\"\n    try:\n        target_obj, attr_name, current_dict = self._resolve_path(str(state_path))\n    except ValueError:\n        return\n\n    if not isinstance(current_dict, dict):\n        raise TypeError(f\"Property at '{state_path}' is not a dict\")\n\n    # Undo\u5c65\u6b74\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\uff08\u65e2\u5b58\u306e\u8f9e\u66f8\u3092\u8a18\u9332\uff09\n    self._capture_for_undo(str(state_path), current_dict)\n\n    new_dict = current_dict.copy()\n    new_dict[key] = value\n\n    self._validate_and_set_value(target_obj, attr_name, new_dict)\n\n    self.publish(\n        f\"{DefaultUpdateTopic.DICT_ADDED}.{state_path}\",\n        key=key,\n        value=value,\n    )\n\n    # \u8f9e\u66f8\u8ffd\u52a0\u3067\u3082\u66f4\u65b0\u901a\u77e5\u3092\u9001\u4fe1\n    self.publish(f\"{DefaultUpdateTopic.STATE_UPDATED}.{state_path}\")\n</code></pre>"},{"location":"api/pubsubtk/store/store/#pubsubtk.store.store.get_store","title":"get_store","text":"<pre><code>get_store(state_cls: Type[TState]) -&gt; Store[TState]\n</code></pre> <p>\u6307\u5b9a\u3055\u308c\u305f <code>state_cls</code> \u7528\u306e <code>Store</code> \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\u3002</p> <p>\u540c\u3058 <code>state_cls</code> \u306b\u5bfe\u3057\u3066\u306f\u5e38\u306b\u540c\u3058 <code>Store</code> \u3092\u8fd4\u3057\u3001 \u521d\u56de\u547c\u3073\u51fa\u3057\u6642\u306e\u307f\u751f\u6210\u3057\u3066\u5185\u90e8\u3067\u4fdd\u6301\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>state_cls</code> <code>Type[TState]</code> <p><code>Store</code> \u751f\u6210\u306b\u4f7f\u7528\u3059\u308b\u72b6\u614b\u30e2\u30c7\u30eb\u306e\u578b\u3002</p> required <p>Returns:</p> Type Description <code>Store[TState]</code> <p><code>state_cls</code> \u306b\u5bfe\u5fdc\u3059\u308b <code>Store</code> \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002</p> Source code in <code>src/pubsubtk/store/store.py</code> <pre><code>def get_store(state_cls: Type[TState]) -&gt; Store[TState]:\n    \"\"\"\u6307\u5b9a\u3055\u308c\u305f ``state_cls`` \u7528\u306e ``Store`` \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\u3002\n\n    \u540c\u3058 ``state_cls`` \u306b\u5bfe\u3057\u3066\u306f\u5e38\u306b\u540c\u3058 ``Store`` \u3092\u8fd4\u3057\u3001\n    \u521d\u56de\u547c\u3073\u51fa\u3057\u6642\u306e\u307f\u751f\u6210\u3057\u3066\u5185\u90e8\u3067\u4fdd\u6301\u3059\u308b\u3002\n\n    Args:\n        state_cls: ``Store`` \u751f\u6210\u306b\u4f7f\u7528\u3059\u308b\u72b6\u614b\u30e2\u30c7\u30eb\u306e\u578b\u3002\n\n    Returns:\n        ``state_cls`` \u306b\u5bfe\u5fdc\u3059\u308b ``Store`` \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002\n    \"\"\"\n    if state_cls not in _stores:\n        _stores[state_cls] = Store(state_cls)\n    return cast(Store[TState], _stores[state_cls])\n</code></pre>"},{"location":"api/pubsubtk/storybook/app/","title":"pubsubtk.storybook.app","text":""},{"location":"api/pubsubtk/storybook/app/#pubsubtk.storybook.app","title":"pubsubtk.storybook.app","text":"<p>ThemedApplication\u30d9\u30fc\u30b9\u306eStorybookApplication\u3002</p>"},{"location":"api/pubsubtk/storybook/app/#pubsubtk.storybook.app.StorybookApplication","title":"StorybookApplication","text":"<pre><code>StorybookApplication(theme: str = 'arc', title: str = 'PubSubTk Storybook', geometry: str = '1200x800', auto_setup: bool = True, *args, **kwargs)\n</code></pre> <p>               Bases: <code>ThemedApplication[StorybookState]</code></p> <p>\u30c6\u30fc\u30de\u5bfe\u5fdcStorybook\u5c02\u7528\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30af\u30e9\u30b9</p> <p>Storybook\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u521d\u671f\u5316\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>theme</code> <code>str</code> <p>ttk\u30c6\u30fc\u30de\u540d\uff08arc, clam, alt, default, classic\u7b49\uff09</p> <code>'arc'</code> <code>title</code> <code>str</code> <p>\u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb</p> <code>'PubSubTk Storybook'</code> <code>geometry</code> <code>str</code> <p>\u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba</p> <code>'1200x800'</code> <code>auto_setup</code> <code>bool</code> <p>\u81ea\u52d5\u3067Storybook\u30b3\u30f3\u30c6\u30ca\u3092\u914d\u7f6e\u3059\u308b\u304b</p> <code>True</code> Source code in <code>src/pubsubtk/storybook/app.py</code> <pre><code>def __init__(\n    self,\n    theme: str = \"arc\",\n    title: str = \"PubSubTk Storybook\",\n    geometry: str = \"1200x800\",\n    auto_setup: bool = True,\n    *args,\n    **kwargs,\n):\n    \"\"\"Storybook\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n    Args:\n        theme: ttk\u30c6\u30fc\u30de\u540d\uff08arc, clam, alt, default, classic\u7b49\uff09\n        title: \u30a6\u30a3\u30f3\u30c9\u30a6\u30bf\u30a4\u30c8\u30eb\n        geometry: \u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\n        auto_setup: \u81ea\u52d5\u3067Storybook\u30b3\u30f3\u30c6\u30ca\u3092\u914d\u7f6e\u3059\u308b\u304b\n    \"\"\"\n    super().__init__(\n        StorybookState, theme=theme, title=title, geometry=geometry, *args, **kwargs\n    )\n\n    if auto_setup:\n        self._setup_storybook()\n</code></pre>"},{"location":"api/pubsubtk/storybook/core/auto_discover/","title":"pubsubtk.storybook.core.auto_discover","text":""},{"location":"api/pubsubtk/storybook/core/auto_discover/#pubsubtk.storybook.core.auto_discover","title":"pubsubtk.storybook.core.auto_discover","text":"<p>AST \u89e3\u6790\u3067 @story \u3092\u542b\u3080\u30e2\u30b8\u30e5\u30fc\u30eb\u3060\u3051 import \u3059\u308b\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3.</p>"},{"location":"api/pubsubtk/storybook/core/auto_discover/#pubsubtk.storybook.core.auto_discover.discover_stories","title":"discover_stories","text":"<pre><code>discover_stories(src_dir: str | Path = 'src') -&gt; List[ModuleType]\n</code></pre> <p>src_dir \u4ee5\u4e0b\u3067 <code>@story</code> \u3092\u542b\u3080\u30d5\u30a1\u30a4\u30eb\u3060\u3051 import \u3057\u3066\u767b\u9332\u3092\u8d70\u3089\u305b\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>src_dir</code> <code>str | Path</code> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30bd\u30fc\u30b9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea</p> <code>'src'</code> <p>Returns:     \u5b9f\u969b\u306b import \u3055\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30ea\u30b9\u30c8</p> Source code in <code>src/pubsubtk/storybook/core/auto_discover.py</code> <pre><code>def discover_stories(src_dir: str | Path = \"src\") -&gt; List[ModuleType]:\n    \"\"\"src_dir \u4ee5\u4e0b\u3067 `@story` \u3092\u542b\u3080\u30d5\u30a1\u30a4\u30eb\u3060\u3051 import \u3057\u3066\u767b\u9332\u3092\u8d70\u3089\u305b\u308b\u3002\n\n    Args:\n        src_dir: \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30bd\u30fc\u30b9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n    Returns:\n        \u5b9f\u969b\u306b import \u3055\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30ea\u30b9\u30c8\n    \"\"\"\n    src_root = Path(src_dir).resolve()\n    if str(src_root) not in sys.path:\n        sys.path.insert(0, str(src_root))\n\n    imported: List[ModuleType] = []\n    py_files: Iterable[Path] = src_root.rglob(\"*.py\")\n\n    for py_file in py_files:\n        # \u7121\u8996\u3057\u305f\u3044\u30d1\u30b9\u306f\u3053\u3053\u3067 continue\n        if any(part in (\"tests\", \"__pycache__\", \".venv\") for part in py_file.parts):\n            continue\n        if not _contains_story_decorator(py_file):\n            continue\n\n        module_name = _to_module_name(py_file, src_root)\n        try:\n            mod = importlib.import_module(module_name)\n            imported.append(mod)\n        except Exception as exc:\n            print(f\"[Storybook] Import error: {module_name} -&gt; {exc}\")\n\n    return imported\n</code></pre>"},{"location":"api/pubsubtk/storybook/core/context/","title":"pubsubtk.storybook.core.context","text":""},{"location":"api/pubsubtk/storybook/core/context/#pubsubtk.storybook.core.context","title":"pubsubtk.storybook.core.context","text":"<p>StoryFactory \u306b\u6e21\u3059\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002</p>"},{"location":"api/pubsubtk/storybook/core/context/#pubsubtk.storybook.core.context.StoryContext","title":"StoryContext","text":"<p>               Bases: <code>BaseModel</code></p> <p>\u30b9\u30c8\u30fc\u30ea\u30fc\u5b9f\u884c\u6642\u306b\u6e21\u3055\u308c\u308b\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8</p>"},{"location":"api/pubsubtk/storybook/core/context/#pubsubtk.storybook.core.context.StoryContext.knob_values","title":"knob_values  <code>property</code>","text":"<pre><code>knob_values: Dict[str, KnobValue]\n</code></pre> <p>\u767b\u9332\u6e08\u307fKnobValue\u4e00\u89a7</p>"},{"location":"api/pubsubtk/storybook/core/context/#pubsubtk.storybook.core.context.StoryContext.set_publish_callback","title":"set_publish_callback","text":"<pre><code>set_publish_callback(callback: Callable[[str, dict], None]) -&gt; None\n</code></pre> <p>PubSub\u767a\u884c\u7528\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u8a2d\u5b9a</p> Source code in <code>src/pubsubtk/storybook/core/context.py</code> <pre><code>def set_publish_callback(self, callback: Callable[[str, dict], None]) -&gt; None:\n    \"\"\"PubSub\u767a\u884c\u7528\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u8a2d\u5b9a\"\"\"\n    self._publish_callback = callback\n</code></pre>"},{"location":"api/pubsubtk/storybook/core/context/#pubsubtk.storybook.core.context.StoryContext.set_story_id","title":"set_story_id","text":"<pre><code>set_story_id(story_id: str) -&gt; None\n</code></pre> <p>\u30b9\u30c8\u30fc\u30ea\u30fcID\u3092\u8a2d\u5b9a\uff08\u5024\u306e\u6c38\u7d9a\u5316\u7528\uff09</p> Source code in <code>src/pubsubtk/storybook/core/context.py</code> <pre><code>def set_story_id(self, story_id: str) -&gt; None:\n    \"\"\"\u30b9\u30c8\u30fc\u30ea\u30fcID\u3092\u8a2d\u5b9a\uff08\u5024\u306e\u6c38\u7d9a\u5316\u7528\uff09\"\"\"\n    self._story_id = story_id\n</code></pre>"},{"location":"api/pubsubtk/storybook/core/context/#pubsubtk.storybook.core.context.StoryContext.knob","title":"knob","text":"<pre><code>knob(name: str, type_: Type, default: Any, desc: str = '', range_: Optional[tuple] = None, choices: Optional[List[str]] = None, multiline: bool = False) -&gt; KnobValue\n</code></pre> <p>Knob\u3092\u5ba3\u8a00\u3057\u3066KnobValue\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\uff08\u5024\u306e\u6c38\u7d9a\u5316\u3042\u308a\uff09</p> Source code in <code>src/pubsubtk/storybook/core/context.py</code> <pre><code>def knob(\n    self,\n    name: str,\n    type_: Type,\n    default: Any,\n    desc: str = \"\",\n    range_: Optional[tuple] = None,\n    choices: Optional[List[str]] = None,\n    multiline: bool = False,\n) -&gt; KnobValue:\n    \"\"\"Knob\u3092\u5ba3\u8a00\u3057\u3066KnobValue\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\uff08\u5024\u306e\u6c38\u7d9a\u5316\u3042\u308a\uff09\"\"\"\n\n    store = get_knob_store()\n    story_id = self._story_id or \"default\"\n\n    # \u30b0\u30ed\u30fc\u30d0\u30eb\u30b9\u30c8\u30a2\u304b\u3089\u65e2\u5b58\u306eKnobValue\u3092\u53d6\u5f97\n    existing_knob = store.get_knob_instance(story_id, name)\n    if existing_knob:\n        self._knob_values[name] = existing_knob\n        return existing_knob\n\n    # \u65b0\u3057\u3044KnobSpec\u4f5c\u6210\n    spec = KnobSpec(\n        name=name,\n        type=type_,\n        default=default,\n        desc=desc,\n        range=range_,\n        choices=choices,\n        multiline=multiline,\n    )\n\n    # \u4fdd\u5b58\u3055\u308c\u305f\u5024\u304c\u3042\u308c\u3070\u4f7f\u7528\u3001\u306a\u3051\u308c\u3070\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n    saved_value = store.get_value(story_id, name, default)\n\n    # KnobValue\u4f5c\u6210\n    knob_value = KnobValue(spec, saved_value)\n\n    # \u5024\u5909\u66f4\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u8ffd\u52a0\uff08\u30b0\u30ed\u30fc\u30d0\u30eb\u30b9\u30c8\u30a2\u306b\u4fdd\u5b58\uff09\n    knob_value.add_change_callback(\n        lambda value: store.set_value(story_id, name, value)\n    )\n\n    # \u30ed\u30fc\u30ab\u30eb\u304a\u3088\u3073\u30b0\u30ed\u30fc\u30d0\u30eb\u30b9\u30c8\u30a2\u306b\u4fdd\u5b58\n    self._knob_values[name] = knob_value\n    store.set_knob_instance(story_id, name, knob_value)\n\n    return knob_value\n</code></pre>"},{"location":"api/pubsubtk/storybook/core/context/#pubsubtk.storybook.core.context.StoryContext.clear_knobs","title":"clear_knobs","text":"<pre><code>clear_knobs()\n</code></pre> <p>Knob\u3092\u30af\u30ea\u30a2\uff08\u30b9\u30c8\u30fc\u30ea\u30fc\u5207\u308a\u66ff\u3048\u6642\uff09</p> Source code in <code>src/pubsubtk/storybook/core/context.py</code> <pre><code>def clear_knobs(self):\n    \"\"\"Knob\u3092\u30af\u30ea\u30a2\uff08\u30b9\u30c8\u30fc\u30ea\u30fc\u5207\u308a\u66ff\u3048\u6642\uff09\"\"\"\n    self._knob_values.clear()\n</code></pre>"},{"location":"api/pubsubtk/storybook/core/context/#pubsubtk.storybook.core.context.StoryContext.publish","title":"publish","text":"<pre><code>publish(topic: str, **kwargs: Any) -&gt; None\n</code></pre> <p>Story \u7a7a\u9593\u5411\u3051 PubSub \u767a\u706b\uff08\u540d\u524d\u7a7a\u9593\u524d\u7f6e\u304d\uff09\u3002</p> Source code in <code>src/pubsubtk/storybook/core/context.py</code> <pre><code>def publish(self, topic: str, **kwargs: Any) -&gt; None:\n    \"\"\"Story \u7a7a\u9593\u5411\u3051 PubSub \u767a\u706b\uff08\u540d\u524d\u7a7a\u9593\u524d\u7f6e\u304d\uff09\u3002\"\"\"\n    if self._publish_callback:\n        self._publish_callback(f\"storybook.{topic}\", kwargs)\n</code></pre>"},{"location":"api/pubsubtk/storybook/core/context/#pubsubtk.storybook.core.context.StoryContext.on_change","title":"on_change","text":"<pre><code>on_change(var: Variable, cb: Callable[[Any], None]) -&gt; None\n</code></pre> <p>tk.Variable \u306b\u30c8\u30ec\u30fc\u30b5\u3092\u5f35\u3063\u3066\u5909\u66f4\u3092\u30d5\u30c3\u30af\u3002</p> Source code in <code>src/pubsubtk/storybook/core/context.py</code> <pre><code>def on_change(self, var: tk.Variable, cb: Callable[[Any], None]) -&gt; None:\n    \"\"\"tk.Variable \u306b\u30c8\u30ec\u30fc\u30b5\u3092\u5f35\u3063\u3066\u5909\u66f4\u3092\u30d5\u30c3\u30af\u3002\"\"\"\n\n    def _update(*_):\n        cb(var.get())\n\n    var.trace_add(\"write\", _update)\n</code></pre>"},{"location":"api/pubsubtk/storybook/core/decorator/","title":"pubsubtk.storybook.core.decorator","text":""},{"location":"api/pubsubtk/storybook/core/decorator/#pubsubtk.storybook.core.decorator","title":"pubsubtk.storybook.core.decorator","text":"<p>\u30b9\u30c8\u30fc\u30ea\u30fc\u3092\u767b\u9332\u3059\u308b\u305f\u3081\u306e\u30c7\u30b3\u30ec\u30fc\u30bf\u3002</p>"},{"location":"api/pubsubtk/storybook/core/decorator/#pubsubtk.storybook.core.decorator.story","title":"story","text":"<pre><code>story(path: str | None = None, title: str | None = None)\n</code></pre> <p>Story \u767b\u9332\u7528\u30c7\u30b3\u30ec\u30fc\u30bf\u3002</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str | None</code> <p>\"Button.Primary\" \u306e\u3088\u3046\u306a\u30c9\u30c3\u30c8\u533a\u5207\u308a\u968e\u5c64\u3002</p> <code>None</code> <code>title</code> <code>str | None</code> <p>\u8449\u30ce\u30fc\u30c9\u540d\u3002\u7701\u7565\u6642\u306f path \u306e\u672b\u5c3e\u304c\u4f7f\u308f\u308c\u308b\u3002</p> <code>None</code> Source code in <code>src/pubsubtk/storybook/core/decorator.py</code> <pre><code>def story(path: str | None = None, title: str | None = None):\n    \"\"\"Story \u767b\u9332\u7528\u30c7\u30b3\u30ec\u30fc\u30bf\u3002\n\n    Args:\n        path: \"Button.Primary\" \u306e\u3088\u3046\u306a\u30c9\u30c3\u30c8\u533a\u5207\u308a\u968e\u5c64\u3002\n        title: \u8449\u30ce\u30fc\u30c9\u540d\u3002\u7701\u7565\u6642\u306f path \u306e\u672b\u5c3e\u304c\u4f7f\u308f\u308c\u308b\u3002\n    \"\"\"\n\n    def decorator(factory: Callable):\n        # \u30c7\u30d5\u30a9\u30eb\u30c8\u30d1\u30b9 = &lt;ReturnClass&gt;.&lt;func_name&gt;\n        comp_name = getattr(factory, \"__name__\", \"Component\")\n        default_path = f\"{comp_name}.{factory.__name__}\"\n\n        full_path = (path or default_path).strip(\".\")\n        segments = full_path.split(\".\")\n        leaf_title = title or segments[-1]\n\n        meta = StoryMeta(\n            id=_slugify(full_path),\n            path=segments[:-1],\n            title=leaf_title,\n            factory=factory,\n        )\n        StoryRegistry.register(meta)\n        return factory\n\n    return decorator\n</code></pre>"},{"location":"api/pubsubtk/storybook/core/meta/","title":"pubsubtk.storybook.core.meta","text":""},{"location":"api/pubsubtk/storybook/core/meta/#pubsubtk.storybook.core.meta","title":"pubsubtk.storybook.core.meta","text":"<p>StoryMeta \u3092\u5b9a\u7fa9\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3002</p>"},{"location":"api/pubsubtk/storybook/core/meta/#pubsubtk.storybook.core.meta.StoryMeta","title":"StoryMeta","text":"<p>               Bases: <code>BaseModel</code></p> <p>Story \u306e\u30e1\u30bf\u60c5\u5831</p>"},{"location":"api/pubsubtk/storybook/core/registry/","title":"pubsubtk.storybook.core.registry","text":""},{"location":"api/pubsubtk/storybook/core/registry/#pubsubtk.storybook.core.registry","title":"pubsubtk.storybook.core.registry","text":"<p>Story \u3092\u4fdd\u7ba1\u30fb\u5217\u6319\u3059\u308b\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30ec\u30b8\u30b9\u30c8\u30ea\u3002</p>"},{"location":"api/pubsubtk/storybook/core/registry/#pubsubtk.storybook.core.registry.StoryRegistry","title":"StoryRegistry","text":"<p>\u30b9\u30c8\u30fc\u30ea\u30fc\u30e1\u30bf\u3092\u7ba1\u7406\u3059\u308b\u30ec\u30b8\u30b9\u30c8\u30ea</p>"},{"location":"api/pubsubtk/storybook/core/registry/#pubsubtk.storybook.core.registry.StoryRegistry.clear","title":"clear  <code>classmethod</code>","text":"<pre><code>clear() -&gt; None\n</code></pre> <p>\u30c6\u30b9\u30c8\u7528\u306a\u3069\u3067\u30ec\u30b8\u30b9\u30c8\u30ea\u3092\u30af\u30ea\u30a2</p> Source code in <code>src/pubsubtk/storybook/core/registry.py</code> <pre><code>@classmethod\ndef clear(cls) -&gt; None:\n    \"\"\"\u30c6\u30b9\u30c8\u7528\u306a\u3069\u3067\u30ec\u30b8\u30b9\u30c8\u30ea\u3092\u30af\u30ea\u30a2\"\"\"\n    cls._stories.clear()\n</code></pre>"},{"location":"api/pubsubtk/storybook/core/state/","title":"pubsubtk.storybook.core.state","text":""},{"location":"api/pubsubtk/storybook/core/state/#pubsubtk.storybook.core.state","title":"pubsubtk.storybook.core.state","text":"<p>Storybook \u7528\u306e\u72b6\u614b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002</p>"},{"location":"api/pubsubtk/storybook/core/state/#pubsubtk.storybook.core.state.StorybookState","title":"StorybookState","text":"<p>               Bases: <code>BaseModel</code></p> <p>Storybook \u306e\u72b6\u614b\u3092\u4e00\u5143\u7ba1\u7406\u3059\u308b\u30e2\u30c7\u30eb</p>"},{"location":"api/pubsubtk/storybook/knobs/controls/","title":"pubsubtk.storybook.knobs.controls","text":""},{"location":"api/pubsubtk/storybook/knobs/controls/#pubsubtk.storybook.knobs.controls","title":"pubsubtk.storybook.knobs.controls","text":"<p>\u500b\u5225\u306eKnob UI\u5236\u5fa1\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8</p>"},{"location":"api/pubsubtk/storybook/knobs/controls/#pubsubtk.storybook.knobs.controls.KnobControlBase","title":"KnobControlBase","text":"<pre><code>KnobControlBase(parent: Widget, knob_value: KnobValue, on_change: Callable[[Any], None])\n</code></pre> <p>Knob\u5236\u5fa1\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306e\u57fa\u5e95\u30af\u30e9\u30b9</p> Source code in <code>src/pubsubtk/storybook/knobs/controls.py</code> <pre><code>def __init__(\n    self, parent: tk.Widget, knob_value: KnobValue, on_change: Callable[[Any], None]\n):\n    self.parent = parent\n    self.knob_value = knob_value\n    self.on_change = on_change\n    self.frame = ttk.Frame(parent)\n    self._setup_ui()\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/controls/#pubsubtk.storybook.knobs.controls.KnobControlBase.pack","title":"pack","text":"<pre><code>pack(**kwargs)\n</code></pre> <p>\u30d5\u30ec\u30fc\u30e0\u3092pack</p> Source code in <code>src/pubsubtk/storybook/knobs/controls.py</code> <pre><code>def pack(self, **kwargs):\n    \"\"\"\u30d5\u30ec\u30fc\u30e0\u3092pack\"\"\"\n    self.frame.pack(**kwargs)\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/controls/#pubsubtk.storybook.knobs.controls.TextKnobControl","title":"TextKnobControl","text":"<pre><code>TextKnobControl(parent, knob_value, on_change)\n</code></pre> <p>               Bases: <code>KnobControlBase</code></p> <p>\u30c6\u30ad\u30b9\u30c8\u5165\u529bKnob</p> Source code in <code>src/pubsubtk/storybook/knobs/controls.py</code> <pre><code>def __init__(self, parent, knob_value, on_change):\n    super().__init__(parent, knob_value, on_change)\n    self._debounce_timer = None\n    self._debounce_delay = 300  # 300ms\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/controls/#pubsubtk.storybook.knobs.controls.NumberKnobControl","title":"NumberKnobControl","text":"<pre><code>NumberKnobControl(parent, knob_value, on_change)\n</code></pre> <p>               Bases: <code>KnobControlBase</code></p> <p>\u6570\u5024\u5165\u529bKnob\uff08\u30b9\u30e9\u30a4\u30c0\u30fc\u4ed8\u304d\uff09</p> Source code in <code>src/pubsubtk/storybook/knobs/controls.py</code> <pre><code>def __init__(self, parent, knob_value, on_change):\n    super().__init__(parent, knob_value, on_change)\n    self._is_sliding = False  # \u30b9\u30e9\u30a4\u30c0\u30fc\u64cd\u4f5c\u4e2d\u30d5\u30e9\u30b0\n    self._pending_value = None  # \u4fdd\u7559\u4e2d\u306e\u5024\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/controls/#pubsubtk.storybook.knobs.controls.BooleanKnobControl","title":"BooleanKnobControl","text":"<pre><code>BooleanKnobControl(parent, knob_value, on_change)\n</code></pre> <p>               Bases: <code>KnobControlBase</code></p> <p>\u30d6\u30fc\u30eb\u5024\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9</p> Source code in <code>src/pubsubtk/storybook/knobs/controls.py</code> <pre><code>def __init__(self, parent, knob_value, on_change):\n    super().__init__(parent, knob_value, on_change)\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/controls/#pubsubtk.storybook.knobs.controls.SelectKnobControl","title":"SelectKnobControl","text":"<pre><code>SelectKnobControl(parent, knob_value, on_change)\n</code></pre> <p>               Bases: <code>KnobControlBase</code></p> <p>\u9078\u629e\u80a2\u30c9\u30ed\u30c3\u30d7\u30c0\u30a6\u30f3</p> Source code in <code>src/pubsubtk/storybook/knobs/controls.py</code> <pre><code>def __init__(self, parent, knob_value, on_change):\n    super().__init__(parent, knob_value, on_change)\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/controls/#pubsubtk.storybook.knobs.controls.create_knob_control","title":"create_knob_control","text":"<pre><code>create_knob_control(parent: Widget, knob_value: KnobValue, on_change: Callable[[Any], None]) -&gt; KnobControlBase\n</code></pre> <p>KnobSpec\u306b\u5fdc\u3058\u305f\u9069\u5207\u306a\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3092\u4f5c\u6210</p> Source code in <code>src/pubsubtk/storybook/knobs/controls.py</code> <pre><code>def create_knob_control(\n    parent: tk.Widget, knob_value: KnobValue, on_change: Callable[[Any], None]\n) -&gt; KnobControlBase:\n    \"\"\"KnobSpec\u306b\u5fdc\u3058\u305f\u9069\u5207\u306a\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3092\u4f5c\u6210\"\"\"\n    spec = knob_value.spec\n\n    if spec.type_ == bool:\n        return BooleanKnobControl(parent, knob_value, on_change)\n    elif spec.choices:\n        return SelectKnobControl(parent, knob_value, on_change)\n    elif spec.type_ in (int, float):\n        return NumberKnobControl(parent, knob_value, on_change)\n    else:  # str or others\n        return TextKnobControl(parent, knob_value, on_change)\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/panel/","title":"pubsubtk.storybook.knobs.panel","text":""},{"location":"api/pubsubtk/storybook/knobs/panel/#pubsubtk.storybook.knobs.panel","title":"pubsubtk.storybook.knobs.panel","text":"<p>Knob\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30d1\u30cd\u30eb\u306e\u30e1\u30a4\u30f3UI</p>"},{"location":"api/pubsubtk/storybook/knobs/panel/#pubsubtk.storybook.knobs.panel.KnobPanel","title":"KnobPanel","text":"<pre><code>KnobPanel(parent, store)\n</code></pre> <p>               Bases: <code>ContainerComponentTtk[StorybookState]</code></p> <p>Knob\u5236\u5fa1\u30d1\u30cd\u30eb</p> Source code in <code>src/pubsubtk/storybook/knobs/panel.py</code> <pre><code>def __init__(self, parent, store):\n    super().__init__(parent=parent, store=store)\n    self.knob_controls: Dict[str, any] = {}\n    self.knob_values: Dict[str, KnobValue] = {}\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/panel/#pubsubtk.storybook.knobs.panel.KnobPanel.update_knobs","title":"update_knobs","text":"<pre><code>update_knobs(knob_values: Dict[str, KnobValue])\n</code></pre> <p>Knob\u30ea\u30b9\u30c8\u3092\u66f4\u65b0</p> Source code in <code>src/pubsubtk/storybook/knobs/panel.py</code> <pre><code>def update_knobs(self, knob_values: Dict[str, KnobValue]):\n    \"\"\"Knob\u30ea\u30b9\u30c8\u3092\u66f4\u65b0\"\"\"\n    self.knob_values = knob_values\n    self._rebuild_knob_ui()\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/store/","title":"pubsubtk.storybook.knobs.store","text":""},{"location":"api/pubsubtk/storybook/knobs/store/#pubsubtk.storybook.knobs.store","title":"pubsubtk.storybook.knobs.store","text":"<p>Knob\u5024\u306e\u30b0\u30ed\u30fc\u30d0\u30eb\u4fdd\u5b58\u30b9\u30c8\u30a2</p>"},{"location":"api/pubsubtk/storybook/knobs/store/#pubsubtk.storybook.knobs.store.KnobStore","title":"KnobStore","text":"<pre><code>KnobStore()\n</code></pre> <p>Knob\u5024\u3092\u30b9\u30c8\u30fc\u30ea\u30fc\u9593\u3067\u6c38\u7d9a\u5316\u3059\u308b\u30b0\u30ed\u30fc\u30d0\u30eb\u30b9\u30c8\u30a2</p> Source code in <code>src/pubsubtk/storybook/knobs/store.py</code> <pre><code>def __init__(self):\n    # {story_id: {knob_name: value}}\n    self._values: Dict[str, Dict[str, Any]] = {}\n    # {story_id: {knob_name: KnobValue}}\n    self._knob_instances: Dict[str, Dict[str, \"KnobValue\"]] = {}\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/store/#pubsubtk.storybook.knobs.store.KnobStore.get_value","title":"get_value","text":"<pre><code>get_value(story_id: str, knob_name: str, default: Any = None) -&gt; Any\n</code></pre> <p>\u4fdd\u5b58\u3055\u308c\u305fknob\u5024\u3092\u53d6\u5f97</p> Source code in <code>src/pubsubtk/storybook/knobs/store.py</code> <pre><code>def get_value(self, story_id: str, knob_name: str, default: Any = None) -&gt; Any:\n    \"\"\"\u4fdd\u5b58\u3055\u308c\u305fknob\u5024\u3092\u53d6\u5f97\"\"\"\n    return self._values.get(story_id, {}).get(knob_name, default)\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/store/#pubsubtk.storybook.knobs.store.KnobStore.set_value","title":"set_value","text":"<pre><code>set_value(story_id: str, knob_name: str, value: Any) -&gt; None\n</code></pre> <p>knob\u5024\u3092\u4fdd\u5b58</p> Source code in <code>src/pubsubtk/storybook/knobs/store.py</code> <pre><code>def set_value(self, story_id: str, knob_name: str, value: Any) -&gt; None:\n    \"\"\"knob\u5024\u3092\u4fdd\u5b58\"\"\"\n    if story_id not in self._values:\n        self._values[story_id] = {}\n    self._values[story_id][knob_name] = value\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/store/#pubsubtk.storybook.knobs.store.KnobStore.get_knob_instance","title":"get_knob_instance","text":"<pre><code>get_knob_instance(story_id: str, knob_name: str) -&gt; Optional[KnobValue]\n</code></pre> <p>KnobValue\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97</p> Source code in <code>src/pubsubtk/storybook/knobs/store.py</code> <pre><code>def get_knob_instance(self, story_id: str, knob_name: str) -&gt; Optional[\"KnobValue\"]:\n    \"\"\"KnobValue\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\"\"\"\n    return self._knob_instances.get(story_id, {}).get(knob_name)\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/store/#pubsubtk.storybook.knobs.store.KnobStore.set_knob_instance","title":"set_knob_instance","text":"<pre><code>set_knob_instance(story_id: str, knob_name: str, knob_value: KnobValue) -&gt; None\n</code></pre> <p>KnobValue\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4fdd\u5b58</p> Source code in <code>src/pubsubtk/storybook/knobs/store.py</code> <pre><code>def set_knob_instance(\n    self, story_id: str, knob_name: str, knob_value: \"KnobValue\"\n) -&gt; None:\n    \"\"\"KnobValue\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4fdd\u5b58\"\"\"\n    if story_id not in self._knob_instances:\n        self._knob_instances[story_id] = {}\n    self._knob_instances[story_id][knob_name] = knob_value\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/store/#pubsubtk.storybook.knobs.store.KnobStore.get_all_knobs","title":"get_all_knobs","text":"<pre><code>get_all_knobs(story_id: str) -&gt; Dict[str, KnobValue]\n</code></pre> <p>\u6307\u5b9a\u30b9\u30c8\u30fc\u30ea\u30fc\u306e\u5168KnobValue\u3092\u53d6\u5f97</p> Source code in <code>src/pubsubtk/storybook/knobs/store.py</code> <pre><code>def get_all_knobs(self, story_id: str) -&gt; Dict[str, \"KnobValue\"]:\n    \"\"\"\u6307\u5b9a\u30b9\u30c8\u30fc\u30ea\u30fc\u306e\u5168KnobValue\u3092\u53d6\u5f97\"\"\"\n    return self._knob_instances.get(story_id, {})\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/store/#pubsubtk.storybook.knobs.store.KnobStore.clear_story","title":"clear_story","text":"<pre><code>clear_story(story_id: str) -&gt; None\n</code></pre> <p>\u6307\u5b9a\u30b9\u30c8\u30fc\u30ea\u30fc\u306eknob\u5024\u3092\u30af\u30ea\u30a2</p> Source code in <code>src/pubsubtk/storybook/knobs/store.py</code> <pre><code>def clear_story(self, story_id: str) -&gt; None:\n    \"\"\"\u6307\u5b9a\u30b9\u30c8\u30fc\u30ea\u30fc\u306eknob\u5024\u3092\u30af\u30ea\u30a2\"\"\"\n    self._values.pop(story_id, None)\n    self._knob_instances.pop(story_id, None)\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/store/#pubsubtk.storybook.knobs.store.get_knob_store","title":"get_knob_store","text":"<pre><code>get_knob_store() -&gt; KnobStore\n</code></pre> <p>\u30b0\u30ed\u30fc\u30d0\u30ebKnobStore\u3092\u53d6\u5f97</p> Source code in <code>src/pubsubtk/storybook/knobs/store.py</code> <pre><code>def get_knob_store() -&gt; KnobStore:\n    \"\"\"\u30b0\u30ed\u30fc\u30d0\u30ebKnobStore\u3092\u53d6\u5f97\"\"\"\n    return _knob_store\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/types/","title":"pubsubtk.storybook.knobs.types","text":""},{"location":"api/pubsubtk/storybook/knobs/types/#pubsubtk.storybook.knobs.types","title":"pubsubtk.storybook.knobs.types","text":"<p>Knob\u306e\u578b\u5b9a\u7fa9\u3068\u30c7\u30fc\u30bf\u30af\u30e9\u30b9</p>"},{"location":"api/pubsubtk/storybook/knobs/types/#pubsubtk.storybook.knobs.types.KnobSpec","title":"KnobSpec","text":"<p>               Bases: <code>BaseModel</code></p> <p>Knob\u306e\u4ed5\u69d8\u5b9a\u7fa9</p>"},{"location":"api/pubsubtk/storybook/knobs/types/#pubsubtk.storybook.knobs.types.KnobValue","title":"KnobValue","text":"<pre><code>KnobValue(spec: KnobSpec, initial_value: Any = None)\n</code></pre> <p>Knob\u5024\u306e\u52d5\u7684\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08Story\u5185\u3067\u4f7f\u7528\uff09</p> Source code in <code>src/pubsubtk/storybook/knobs/types.py</code> <pre><code>def __init__(self, spec: KnobSpec, initial_value: Any = None):\n    self.spec = spec\n    self._value = initial_value if initial_value is not None else spec.default\n    self._callbacks: List[callable] = []\n</code></pre>"},{"location":"api/pubsubtk/storybook/knobs/types/#pubsubtk.storybook.knobs.types.KnobValue.value","title":"value  <code>property</code> <code>writable</code>","text":"<pre><code>value: Any\n</code></pre> <p>\u73fe\u5728\u306e\u5024\u3092\u53d6\u5f97</p>"},{"location":"api/pubsubtk/storybook/knobs/types/#pubsubtk.storybook.knobs.types.KnobValue.add_change_callback","title":"add_change_callback","text":"<pre><code>add_change_callback(callback: callable) -&gt; None\n</code></pre> <p>\u5024\u5909\u66f4\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u8ffd\u52a0</p> Source code in <code>src/pubsubtk/storybook/knobs/types.py</code> <pre><code>def add_change_callback(self, callback: callable) -&gt; None:\n    \"\"\"\u5024\u5909\u66f4\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u8ffd\u52a0\"\"\"\n    self._callbacks.append(callback)\n</code></pre>"},{"location":"api/pubsubtk/storybook/processors/processor/","title":"pubsubtk.storybook.processors.processor","text":""},{"location":"api/pubsubtk/storybook/processors/processor/#pubsubtk.storybook.processors.processor","title":"pubsubtk.storybook.processors.processor","text":"<p>PubSubTk Processor: Story \u9078\u629e\u30fb\u30ec\u30a4\u30a2\u30a6\u30c8\u5207\u66ff\u3092\u7ba1\u7406\u3002</p>"},{"location":"api/pubsubtk/storybook/processors/processor/#pubsubtk.storybook.processors.processor.StorybookProcessor","title":"StorybookProcessor","text":"<pre><code>StorybookProcessor(store: Store[TState], *args, **kwargs)\n</code></pre> <p>               Bases: <code>ProcessorBase[StorybookState]</code></p> <p>Storybook \u7528\u306e\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u307e\u3068\u3081\u308b Processor</p> Source code in <code>src/pubsubtk/processor/processor_base.py</code> <pre><code>def __init__(self, store: Store[TState], *args, **kwargs) -&gt; None:\n    \"\"\"Store \u3092\u53d7\u3051\u53d6\u3063\u3066\u521d\u671f\u5316\u3057\u307e\u3059\u3002\"\"\"\n\n    # \u578b\u5f15\u6570\u4ed8\u304d\u306e Store[TState] \u3092\u53d6\u5f97\n    self.store: Store[TState] = store\n\n    super().__init__(*args, **kwargs)\n</code></pre>"},{"location":"api/pubsubtk/storybook/processors/topics/","title":"pubsubtk.storybook.processors.topics","text":""},{"location":"api/pubsubtk/storybook/processors/topics/#pubsubtk.storybook.processors.topics","title":"pubsubtk.storybook.processors.topics","text":"<p>Storybook \u5185\u90e8\u3067\u4f7f\u3046 PubSub \u30c8\u30d4\u30c3\u30af\u5217\u6319\u578b\u3002</p>"},{"location":"api/pubsubtk/storybook/ui/container/","title":"pubsubtk.storybook.ui.container","text":""},{"location":"api/pubsubtk/storybook/ui/container/#pubsubtk.storybook.ui.container","title":"pubsubtk.storybook.ui.container","text":"<p>Storybook \u3092\u69cb\u6210\u3059\u308b\u6700\u4e0a\u4f4d Container\u3002</p>"},{"location":"api/pubsubtk/storybook/ui/container/#pubsubtk.storybook.ui.container.StorybookContainer","title":"StorybookContainer","text":"<pre><code>StorybookContainer(parent: Widget, store: Store[TState], *args, **kwargs: Any)\n</code></pre> <p>               Bases: <code>ContainerComponentTtk[StorybookState]</code></p> <p>Storybook \u5168\u4f53\u3092\u7ba1\u7406\u3059\u308b\u30b3\u30f3\u30c6\u30ca\uff08\u30c6\u30fc\u30de\u5bfe\u5fdc\uff09</p> Source code in <code>src/pubsubtk/ui/base/container_base.py</code> <pre><code>def __init__(self, parent: tk.Widget, store: Store[TState], *args, **kwargs: Any):\n    \"\"\"ttk.Frame \u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n    Args:\n        parent: \u89aa\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3002\n        store: \u4f7f\u7528\u3059\u308b ``Store`` \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002\n    \"\"\"\n\n    ttk.Frame.__init__(self, master=parent)\n    ContainerMixin.__init__(self, store=store, *args, **kwargs)\n</code></pre>"},{"location":"api/pubsubtk/storybook/ui/preview/","title":"pubsubtk.storybook.ui.preview","text":""},{"location":"api/pubsubtk/storybook/ui/preview/#pubsubtk.storybook.ui.preview","title":"pubsubtk.storybook.ui.preview","text":"<p>\u9078\u629e\u3055\u308c\u305f Story \u3092\u5b9f\u969b\u306b\u63cf\u753b\u3059\u308b\u30d7\u30ec\u30d3\u30e5\u30fc\u30d5\u30ec\u30fc\u30e0\u3002</p>"},{"location":"api/pubsubtk/storybook/ui/preview/#pubsubtk.storybook.ui.preview.PreviewFrame","title":"PreviewFrame","text":"<pre><code>PreviewFrame(parent: Widget, store: Store[TState], *args, **kwargs: Any)\n</code></pre> <p>               Bases: <code>ContainerComponentTtk[StorybookState]</code></p> <p>\u4e2d\u592e\u306e\u30d7\u30ec\u30d3\u30e5\u30fc\u30a8\u30ea\u30a2\uff08\u30c6\u30fc\u30de\u5bfe\u5fdc\uff09</p> Source code in <code>src/pubsubtk/ui/base/container_base.py</code> <pre><code>def __init__(self, parent: tk.Widget, store: Store[TState], *args, **kwargs: Any):\n    \"\"\"ttk.Frame \u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n    Args:\n        parent: \u89aa\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3002\n        store: \u4f7f\u7528\u3059\u308b ``Store`` \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002\n    \"\"\"\n\n    ttk.Frame.__init__(self, master=parent)\n    ContainerMixin.__init__(self, store=store, *args, **kwargs)\n</code></pre>"},{"location":"api/pubsubtk/storybook/ui/sidebar/","title":"pubsubtk.storybook.ui.sidebar","text":""},{"location":"api/pubsubtk/storybook/ui/sidebar/#pubsubtk.storybook.ui.sidebar","title":"pubsubtk.storybook.ui.sidebar","text":"<p>Story \u30c4\u30ea\u30fc\u3092\u8868\u793a\u3059\u308b\u30b5\u30a4\u30c9\u30d0\u30fc\u3002</p>"},{"location":"api/pubsubtk/storybook/ui/sidebar/#pubsubtk.storybook.ui.sidebar.SidebarView","title":"SidebarView","text":"<pre><code>SidebarView(parent: Widget, store: Store[TState], *args, **kwargs: Any)\n</code></pre> <p>               Bases: <code>ContainerComponentTtk[StorybookState]</code></p> <p>\u5de6\u5074\u306e\u30c4\u30ea\u30fc\u30b5\u30a4\u30c9\u30d0\u30fc\uff08\u30c6\u30fc\u30de\u5bfe\u5fdc\uff09</p> Source code in <code>src/pubsubtk/ui/base/container_base.py</code> <pre><code>def __init__(self, parent: tk.Widget, store: Store[TState], *args, **kwargs: Any):\n    \"\"\"ttk.Frame \u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n    Args:\n        parent: \u89aa\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3002\n        store: \u4f7f\u7528\u3059\u308b ``Store`` \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002\n    \"\"\"\n\n    ttk.Frame.__init__(self, master=parent)\n    ContainerMixin.__init__(self, store=store, *args, **kwargs)\n</code></pre>"},{"location":"api/pubsubtk/storybook/ui/template/","title":"pubsubtk.storybook.ui.template","text":""},{"location":"api/pubsubtk/storybook/ui/template/#pubsubtk.storybook.ui.template","title":"pubsubtk.storybook.ui.template","text":"<p>3 \u30b9\u30ed\u30c3\u30c8 (sidebar / preview / knobs) \u3092\u6301\u3064\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3002</p>"},{"location":"api/pubsubtk/storybook/ui/template/#pubsubtk.storybook.ui.template.StorybookTemplate","title":"StorybookTemplate","text":"<pre><code>StorybookTemplate(parent: Widget, store: Store[TState], *args, **kwargs)\n</code></pre> <p>               Bases: <code>TemplateComponentTtk[StorybookState]</code></p> <p>Storybook \u306e\u57fa\u672c\u30ec\u30a4\u30a2\u30a6\u30c8\uff08\u30c6\u30fc\u30de\u5bfe\u5fdc\uff09</p> Source code in <code>src/pubsubtk/ui/base/template_base.py</code> <pre><code>def __init__(self, parent: tk.Widget, store: Store[TState], *args, **kwargs):\n    \"\"\"ttk.Frame \u30d9\u30fc\u30b9\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\u3002\"\"\"\n\n    ttk.Frame.__init__(self, master=parent)\n    TemplateMixin.__init__(self, store=store, *args, **kwargs)\n</code></pre>"},{"location":"api/pubsubtk/topic/topics/","title":"pubsubtk.topic.topics","text":""},{"location":"api/pubsubtk/topic/topics/#pubsubtk.topic.topics","title":"pubsubtk.topic.topics","text":"<p>src/pubsubtk/topic/topics.py</p> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u4f7f\u7528\u3059\u308b PubSub \u30c8\u30d4\u30c3\u30af\u5217\u6319\u578b\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p>"},{"location":"api/pubsubtk/topic/topics/#pubsubtk.topic.topics.AutoNamedTopic","title":"AutoNamedTopic","text":"<p>               Bases: <code>StrEnum</code></p> <p>Enum\u30e1\u30f3\u30d0\u30fc\u540d\u3092\u81ea\u52d5\u3067\u5c0f\u6587\u5b57\u5316\u3057\u3001\u30af\u30e9\u30b9\u540d\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u4ed8\u304d\u6587\u5b57\u5217\u3092\u5024\u3068\u3059\u308b\u5217\u6319\u578b\u3002</p> <ul> <li>\u30e1\u30f3\u30d0\u30fc\u5024\u306f \"ClassName.member\" \u5f62\u5f0f\u306e\u6587\u5b57\u5217</li> <li>str()\u3084\u6bd4\u8f03\u3067\u305d\u306e\u307e\u307e\u5229\u7528\u53ef\u80fd</li> </ul>"},{"location":"api/pubsubtk/topic/topics/#pubsubtk.topic.topics.DefaultNavigateTopic","title":"DefaultNavigateTopic","text":"<p>               Bases: <code>AutoNamedTopic</code></p> <p>\u6a19\u6e96\u7684\u306a\u753b\u9762\u9077\u79fb\u30fb\u30a6\u30a3\u30f3\u30c9\u30a6\u64cd\u4f5c\u7528\u306ePubSub\u30c8\u30d4\u30c3\u30af\u5217\u6319\u578b\u3002</p>"},{"location":"api/pubsubtk/topic/topics/#pubsubtk.topic.topics.DefaultUpdateTopic","title":"DefaultUpdateTopic","text":"<p>               Bases: <code>AutoNamedTopic</code></p> <p>\u6a19\u6e96\u7684\u306a\u72b6\u614b\u66f4\u65b0\u901a\u77e5\u7528\u306ePubSub\u30c8\u30d4\u30c3\u30af\u5217\u6319\u578b\u3002</p>"},{"location":"api/pubsubtk/topic/topics/#pubsubtk.topic.topics.DefaultProcessorTopic","title":"DefaultProcessorTopic","text":"<p>               Bases: <code>AutoNamedTopic</code></p> <p>\u6a19\u6e96\u7684\u306a\u30d7\u30ed\u30bb\u30c3\u30b5\u7ba1\u7406\u306ePubSub\u30c8\u30d4\u30c3\u30af\u5217\u6319\u578b\u3002</p>"},{"location":"api/pubsubtk/topic/topics/#pubsubtk.topic.topics.DefaultUndoTopic","title":"DefaultUndoTopic","text":"<p>               Bases: <code>AutoNamedTopic</code></p> <p>Undo/Redo\u6a5f\u80fd\u7528\u306ePubSub\u30c8\u30d4\u30c3\u30af\u5217\u6319\u578b\u3002</p>"},{"location":"api/pubsubtk/ui/types/","title":"pubsubtk.ui.types","text":""},{"location":"api/pubsubtk/ui/types/#pubsubtk.ui.types","title":"pubsubtk.ui.types","text":""},{"location":"api/pubsubtk/ui/base/container_base/","title":"pubsubtk.ui.base.container_base","text":""},{"location":"api/pubsubtk/ui/base/container_base/#pubsubtk.ui.base.container_base","title":"pubsubtk.ui.base.container_base","text":"<p>src/pubsubtk/ui/base/container_base.py</p> <p>\u72b6\u614b\u9023\u643a\u53ef\u80fd\u306a UI \u30b3\u30f3\u30c6\u30ca\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</p>"},{"location":"api/pubsubtk/ui/base/container_base/#pubsubtk.ui.base.container_base.ContainerMixin","title":"ContainerMixin","text":"<pre><code>ContainerMixin(store: Store[TState], *args, **kwargs: Any)\n</code></pre> <p>               Bases: <code>PubSubDefaultTopicBase</code>, <code>ABC</code>, <code>Generic[TState]</code></p> <p>PubSub\u9023\u643a\u7528\u306e\u30b3\u30f3\u30c6\u30ca\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8Mixin\u3002</p> <ul> <li>Store\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3057\u3001\u8cfc\u8aad\u8a2d\u5b9a\u30fb\u72b6\u614b\u53cd\u6620\u3092\u81ea\u52d5\u5b9f\u884c</li> <li>setup_subscriptions()/refresh_from_state()\u3092\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u5b9f\u88c5</li> <li>destroy\u6642\u306b\u8cfc\u8aad\u89e3\u9664(teardown)\u3082\u81ea\u52d5</li> </ul> <p>IMPORTANT: Use built-in pub_* methods for state updates instead of manually publishing to topics. This provides better IDE support and consistency.</p> <p>\u30b3\u30f3\u30c6\u30ca\u306e\u521d\u671f\u5316\u3092\u884c\u3046\u3002</p> <p>Parameters:</p> Name Type Description Default <code>store</code> <code>Store[TState]</code> <p>\u4f7f\u7528\u3059\u308b <code>Store</code> \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002</p> required Notes <p>\u6e21\u3055\u308c\u305f <code>*args</code> \u3068 <code>**kwargs</code> \u306f <code>self.args</code> / <code>self.kwargs</code> \u3068\u3057\u3066\u4fdd\u6301\u3055\u308c\u307e\u3059\u3002\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092 <code>open_subwindow</code> \u3067\u958b\u304f\u5834\u5408\u306f <code>win_id</code> \u304c <code>self.kwargs</code> \u306b\u81ea\u52d5\u8ffd\u52a0\u3055\u308c\u3001 <code>pub_close_subwindow(self.kwargs[\"win_id\"])</code> \u3068\u3057\u3066\u81ea\u8eab\u3092\u9589\u3058\u308b\u3053\u3068\u304c \u3067\u304d\u307e\u3059\u3002\u5c06\u6765\u7684\u306b\u540c\u69d8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u304c\u5897\u3048\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002</p> Source code in <code>src/pubsubtk/ui/base/container_base.py</code> <pre><code>def __init__(self, store: Store[TState], *args, **kwargs: Any):\n    \"\"\"\u30b3\u30f3\u30c6\u30ca\u306e\u521d\u671f\u5316\u3092\u884c\u3046\u3002\n\n    Args:\n        store: \u4f7f\u7528\u3059\u308b ``Store`` \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002\n\n    Notes:\n        \u6e21\u3055\u308c\u305f ``*args`` \u3068 ``**kwargs`` \u306f ``self.args`` / ``self.kwargs``\n        \u3068\u3057\u3066\u4fdd\u6301\u3055\u308c\u307e\u3059\u3002\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092 ``open_subwindow`` \u3067\u958b\u304f\u5834\u5408\u306f\n        ``win_id`` \u304c ``self.kwargs`` \u306b\u81ea\u52d5\u8ffd\u52a0\u3055\u308c\u3001\n        ``pub_close_subwindow(self.kwargs[\"win_id\"])`` \u3068\u3057\u3066\u81ea\u8eab\u3092\u9589\u3058\u308b\u3053\u3068\u304c\n        \u3067\u304d\u307e\u3059\u3002\u5c06\u6765\u7684\u306b\u540c\u69d8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u304c\u5897\u3048\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n    \"\"\"\n    self.args = args\n    self.kwargs = kwargs\n\n    # \u578b\u5f15\u6570\u4ed8\u304d\u306e Store[TState] \u3092\u53d6\u5f97\n    self.store: Store[TState] = store\n\n    super().__init__(*args, **kwargs)\n\n    self.setup_ui()\n    self.refresh_from_state()\n</code></pre>"},{"location":"api/pubsubtk/ui/base/container_base/#pubsubtk.ui.base.container_base.ContainerMixin.setup_ui","title":"setup_ui  <code>abstractmethod</code>","text":"<pre><code>setup_ui() -&gt; None\n</code></pre> <p>\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u69cb\u7bc9\u3068\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u884c\u3046\u30e1\u30bd\u30c3\u30c9\u3002 \u30b5\u30d6\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3059\u308b\u3002</p> Source code in <code>src/pubsubtk/ui/base/container_base.py</code> <pre><code>@abstractmethod\ndef setup_ui(self) -&gt; None:\n    \"\"\"\n    \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u69cb\u7bc9\u3068\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u884c\u3046\u30e1\u30bd\u30c3\u30c9\u3002\n    \u30b5\u30d6\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3059\u308b\u3002\n    \"\"\"\n    ...\n</code></pre>"},{"location":"api/pubsubtk/ui/base/container_base/#pubsubtk.ui.base.container_base.ContainerMixin.refresh_from_state","title":"refresh_from_state  <code>abstractmethod</code>","text":"<pre><code>refresh_from_state() -&gt; None\n</code></pre> <p>\u8cfc\u8aad\u901a\u77e5\u307e\u305f\u306f\u521d\u671f\u5316\u6642\u306bUI\u3092\u72b6\u614b\u3067\u66f4\u65b0\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3002 \u30b5\u30d6\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3059\u308b\u3002</p> Source code in <code>src/pubsubtk/ui/base/container_base.py</code> <pre><code>@abstractmethod\ndef refresh_from_state(self) -&gt; None:\n    \"\"\"\n    \u8cfc\u8aad\u901a\u77e5\u307e\u305f\u306f\u521d\u671f\u5316\u6642\u306bUI\u3092\u72b6\u614b\u3067\u66f4\u65b0\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3002\n    \u30b5\u30d6\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3059\u308b\u3002\n    \"\"\"\n    ...\n</code></pre>"},{"location":"api/pubsubtk/ui/base/container_base/#pubsubtk.ui.base.container_base.ContainerMixin.destroy","title":"destroy","text":"<pre><code>destroy() -&gt; None\n</code></pre> <p>\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u7834\u68c4\u6642\u306b\u8cfc\u8aad\u3092\u89e3\u9664\u3057\u3066\u304b\u3089\u7834\u68c4\u51e6\u7406\u3092\u884c\u3046\u3002</p> Source code in <code>src/pubsubtk/ui/base/container_base.py</code> <pre><code>def destroy(self) -&gt; None:\n    \"\"\"\n    \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u7834\u68c4\u6642\u306b\u8cfc\u8aad\u3092\u89e3\u9664\u3057\u3066\u304b\u3089\u7834\u68c4\u51e6\u7406\u3092\u884c\u3046\u3002\n    \"\"\"\n    self.teardown()\n    super().destroy()\n</code></pre>"},{"location":"api/pubsubtk/ui/base/container_base/#pubsubtk.ui.base.container_base.ContainerComponentTk","title":"ContainerComponentTk","text":"<pre><code>ContainerComponentTk(parent: Widget, store: Store[TState], *args, **kwargs: Any)\n</code></pre> <p>               Bases: <code>ContainerMixin[TState]</code>, <code>Frame</code>, <code>Generic[TState]</code></p> <p>\u6a19\u6e96tk.Frame\u30d9\u30fc\u30b9\u306ePubSub\u9023\u643a\u30b3\u30f3\u30c6\u30ca\u3002</p> <p>tk.Frame \u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u521d\u671f\u5316\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>parent</code> <code>Widget</code> <p>\u89aa\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3002</p> required <code>store</code> <code>Store[TState]</code> <p>\u4f7f\u7528\u3059\u308b <code>Store</code> \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002</p> required Source code in <code>src/pubsubtk/ui/base/container_base.py</code> <pre><code>def __init__(self, parent: tk.Widget, store: Store[TState], *args, **kwargs: Any):\n    \"\"\"tk.Frame \u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n    Args:\n        parent: \u89aa\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3002\n        store: \u4f7f\u7528\u3059\u308b ``Store`` \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002\n    \"\"\"\n\n    tk.Frame.__init__(self, master=parent)\n    ContainerMixin.__init__(self, store=store, *args, **kwargs)\n</code></pre>"},{"location":"api/pubsubtk/ui/base/container_base/#pubsubtk.ui.base.container_base.ContainerComponentTtk","title":"ContainerComponentTtk","text":"<pre><code>ContainerComponentTtk(parent: Widget, store: Store[TState], *args, **kwargs: Any)\n</code></pre> <p>               Bases: <code>ContainerMixin[TState]</code>, <code>Frame</code>, <code>Generic[TState]</code></p> <p>\u30c6\u30fc\u30de\u5bfe\u5fdcttk.Frame\u30d9\u30fc\u30b9\u306ePubSub\u9023\u643a\u30b3\u30f3\u30c6\u30ca\u3002</p> <p>ttk.Frame \u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u521d\u671f\u5316\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>parent</code> <code>Widget</code> <p>\u89aa\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3002</p> required <code>store</code> <code>Store[TState]</code> <p>\u4f7f\u7528\u3059\u308b <code>Store</code> \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002</p> required Source code in <code>src/pubsubtk/ui/base/container_base.py</code> <pre><code>def __init__(self, parent: tk.Widget, store: Store[TState], *args, **kwargs: Any):\n    \"\"\"ttk.Frame \u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n    Args:\n        parent: \u89aa\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3002\n        store: \u4f7f\u7528\u3059\u308b ``Store`` \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002\n    \"\"\"\n\n    ttk.Frame.__init__(self, master=parent)\n    ContainerMixin.__init__(self, store=store, *args, **kwargs)\n</code></pre>"},{"location":"api/pubsubtk/ui/base/presentational_base/","title":"pubsubtk.ui.base.presentational_base","text":""},{"location":"api/pubsubtk/ui/base/presentational_base/#pubsubtk.ui.base.presentational_base","title":"pubsubtk.ui.base.presentational_base","text":"<p>src/pubsubtk/ui/base/presentational_base.py</p> <p>\u30a4\u30d9\u30f3\u30c8\u767a\u706b\u6a5f\u80fd\u3092\u5099\u3048\u305f\u8868\u793a\u5c02\u7528 UI \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u7528\u57fa\u5e95\u30af\u30e9\u30b9\u3002</p>"},{"location":"api/pubsubtk/ui/base/presentational_base/#pubsubtk.ui.base.presentational_base.PresentationalMixin","title":"PresentationalMixin","text":"<pre><code>PresentationalMixin(*args, **kwargs)\n</code></pre> <p>               Bases: <code>ABC</code></p> <p>\u8868\u793a\u5c02\u7528\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u7528\u306eMixin\u3002</p> <ul> <li>\u4efb\u610f\u306e\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u767b\u9332\u30fb\u767a\u706b\u6a5f\u80fd\u3092\u6301\u3064</li> </ul> <p>Mixin \u306e\u521d\u671f\u5316\u51e6\u7406\u3002</p> Notes <p>\u6e21\u3055\u308c\u305f <code>*args</code> \u3068 <code>**kwargs</code> \u306f <code>self.args</code> / <code>self.kwargs</code> \u3068\u3057\u3066\u4fdd\u6301\u3055\u308c\u307e\u3059\u3002\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f <code>open_subwindow</code> \u304c <code>win_id</code> \u3092\u81ea\u52d5\u4ed8\u4e0e\u3059\u308b\u305f\u3081\u3001 <code>self.kwargs[\"win_id\"]</code> \u3092\u5229\u7528\u3057\u3066 \u81ea\u8eab\u3092\u9589\u3058\u3089\u308c\u307e\u3059\u3002\u4eca\u5f8c\u540c\u69d8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u304c\u8ffd\u52a0\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p> Source code in <code>src/pubsubtk/ui/base/presentational_base.py</code> <pre><code>def __init__(self, *args, **kwargs):\n    \"\"\"Mixin \u306e\u521d\u671f\u5316\u51e6\u7406\u3002\n\n    Notes:\n        \u6e21\u3055\u308c\u305f ``*args`` \u3068 ``**kwargs`` \u306f ``self.args`` / ``self.kwargs``\n        \u3068\u3057\u3066\u4fdd\u6301\u3055\u308c\u307e\u3059\u3002\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f ``open_subwindow``\n        \u304c ``win_id`` \u3092\u81ea\u52d5\u4ed8\u4e0e\u3059\u308b\u305f\u3081\u3001 ``self.kwargs[\"win_id\"]`` \u3092\u5229\u7528\u3057\u3066\n        \u81ea\u8eab\u3092\u9589\u3058\u3089\u308c\u307e\u3059\u3002\u4eca\u5f8c\u540c\u69d8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u304c\u8ffd\u52a0\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n    \"\"\"\n\n    self.args = args\n    self.kwargs = kwargs\n\n    self._handlers: Dict[str, Callable[..., Any]] = {}\n    self.setup_ui()\n</code></pre>"},{"location":"api/pubsubtk/ui/base/presentational_base/#pubsubtk.ui.base.presentational_base.PresentationalMixin.setup_ui","title":"setup_ui  <code>abstractmethod</code>","text":"<pre><code>setup_ui() -&gt; None\n</code></pre> <p>\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u69cb\u7bc9\u3068\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u884c\u3046\u30e1\u30bd\u30c3\u30c9\u3002 \u30b5\u30d6\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3059\u308b\u3002</p> Source code in <code>src/pubsubtk/ui/base/presentational_base.py</code> <pre><code>@abstractmethod\ndef setup_ui(self) -&gt; None:\n    \"\"\"\n    \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u69cb\u7bc9\u3068\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u884c\u3046\u30e1\u30bd\u30c3\u30c9\u3002\n    \u30b5\u30d6\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3059\u308b\u3002\n    \"\"\"\n    pass\n</code></pre>"},{"location":"api/pubsubtk/ui/base/presentational_base/#pubsubtk.ui.base.presentational_base.PresentationalComponentTk","title":"PresentationalComponentTk","text":"<pre><code>PresentationalComponentTk(parent: Widget, *args, **kwargs)\n</code></pre> <p>               Bases: <code>PresentationalMixin</code>, <code>Frame</code></p> <p>\u6a19\u6e96tk.Frame\u30d9\u30fc\u30b9\u306e\u8868\u793a\u5c02\u7528\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3002</p> <p>tk.Frame \u30d9\u30fc\u30b9\u306e\u8868\u793a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\u3002</p> Source code in <code>src/pubsubtk/ui/base/presentational_base.py</code> <pre><code>def __init__(self, parent: tk.Widget, *args, **kwargs):\n    \"\"\"tk.Frame \u30d9\u30fc\u30b9\u306e\u8868\u793a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\u3002\"\"\"\n\n    tk.Frame.__init__(self, master=parent)\n    PresentationalMixin.__init__(self, *args, **kwargs)\n</code></pre>"},{"location":"api/pubsubtk/ui/base/presentational_base/#pubsubtk.ui.base.presentational_base.PresentationalComponentTtk","title":"PresentationalComponentTtk","text":"<pre><code>PresentationalComponentTtk(parent: Widget, *args, **kwargs)\n</code></pre> <p>               Bases: <code>PresentationalMixin</code>, <code>Frame</code></p> <p>\u30c6\u30fc\u30de\u5bfe\u5fdcttk.Frame\u30d9\u30fc\u30b9\u306e\u8868\u793a\u5c02\u7528\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3002</p> <p>ttk.Frame \u30d9\u30fc\u30b9\u306e\u8868\u793a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\u3002</p> Source code in <code>src/pubsubtk/ui/base/presentational_base.py</code> <pre><code>def __init__(self, parent: tk.Widget, *args, **kwargs):\n    \"\"\"ttk.Frame \u30d9\u30fc\u30b9\u306e\u8868\u793a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\u3002\"\"\"\n\n    ttk.Frame.__init__(self, master=parent)\n    PresentationalMixin.__init__(self, *args, **kwargs)\n</code></pre>"},{"location":"api/pubsubtk/ui/base/template_base/","title":"pubsubtk.ui.base.template_base","text":""},{"location":"api/pubsubtk/ui/base/template_base/#pubsubtk.ui.base.template_base","title":"pubsubtk.ui.base.template_base","text":"<p>\u8907\u6570\u30b9\u30ed\u30c3\u30c8\u3092\u6301\u3064\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 UI \u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3002</p>"},{"location":"api/pubsubtk/ui/base/template_base/#pubsubtk.ui.base.template_base.TemplateMixin","title":"TemplateMixin","text":"<pre><code>TemplateMixin(store: Store[TState], *args, **kwargs)\n</code></pre> <p>               Bases: <code>ABC</code>, <code>Generic[TState]</code></p> <p>\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u7528\u306eMixin\u3002</p> <p>\u8907\u6570\u306e\u30b9\u30ed\u30c3\u30c8\uff08\u533a\u753b\uff09\u3092\u5b9a\u7fa9\u3057\u3001\u5404\u30b9\u30ed\u30c3\u30c8\u306b\u72ec\u7acb\u3057\u3066\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u914d\u7f6e\u3067\u304d\u308b\u3002 \u30d8\u30c3\u30c0\u30fc\u30fb\u30d5\u30c3\u30bf\u30fc\u306a\u3069\u56fa\u5b9a\u90e8\u5206\u3068\u53ef\u5909\u90e8\u5206\u3092\u5206\u96e2\u3057\u305f\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u5b9f\u73fe\u3002</p> Note <p>\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u81ea\u4f53\u306f\u72b6\u614b\u3092\u6301\u305f\u305a\u3001\u30ec\u30a4\u30a2\u30a6\u30c8\u5b9a\u7fa9\u3068\u30b9\u30ed\u30c3\u30c8\u7ba1\u7406\u306e\u307f\u3092\u884c\u3046\u3002 \u5404\u30b9\u30ed\u30c3\u30c8\u306b\u914d\u7f6e\u3055\u308c\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u72ec\u81ea\u306b\u72b6\u614b\u7ba1\u7406\u3092\u884c\u3046\u3002</p> <p>Mixin \u306e\u521d\u671f\u5316\u51e6\u7406\u3002</p> Source code in <code>src/pubsubtk/ui/base/template_base.py</code> <pre><code>def __init__(self, store: Store[TState], *args, **kwargs):\n    \"\"\"Mixin \u306e\u521d\u671f\u5316\u51e6\u7406\u3002\"\"\"\n\n    self.store = store\n    self._slots: Dict[str, tk.Widget] = {}\n    self._slot_contents: Dict[str, tk.Widget] = {}\n\n    # \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n    self.setup_template()\n    self._slots = self.define_slots()\n</code></pre>"},{"location":"api/pubsubtk/ui/base/template_base/#pubsubtk.ui.base.template_base.TemplateMixin.setup_template","title":"setup_template","text":"<pre><code>setup_template() -&gt; None\n</code></pre> <p>\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u56fa\u6709\u306e\u521d\u671f\u5316\u51e6\u7406\uff08\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\uff09\u3002 define_slots()\u306e\u524d\u306b\u547c\u3070\u308c\u308b\u3002</p> Source code in <code>src/pubsubtk/ui/base/template_base.py</code> <pre><code>def setup_template(self) -&gt; None:\n    \"\"\"\n    \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u56fa\u6709\u306e\u521d\u671f\u5316\u51e6\u7406\uff08\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\uff09\u3002\n    define_slots()\u306e\u524d\u306b\u547c\u3070\u308c\u308b\u3002\n    \"\"\"\n    pass\n</code></pre>"},{"location":"api/pubsubtk/ui/base/template_base/#pubsubtk.ui.base.template_base.TemplateMixin.define_slots","title":"define_slots  <code>abstractmethod</code>","text":"<pre><code>define_slots() -&gt; Dict[str, Widget]\n</code></pre> <p>\u30b9\u30ed\u30c3\u30c8\uff08\u533a\u753b\uff09\u3092\u5b9a\u7fa9\u3059\u308b\u3002</p> <p>Returns:</p> Type Description <code>Dict[str, Widget]</code> <p>Dict[str, tk.Widget]: {\"\u30b9\u30ed\u30c3\u30c8\u540d\": \u30d5\u30ec\u30fc\u30e0Widget} \u306e\u8f9e\u66f8</p> Example Source code in <code>src/pubsubtk/ui/base/template_base.py</code> <pre><code>@abstractmethod\ndef define_slots(self) -&gt; Dict[str, tk.Widget]:\n    \"\"\"\n    \u30b9\u30ed\u30c3\u30c8\uff08\u533a\u753b\uff09\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n    Returns:\n        Dict[str, tk.Widget]: {\"\u30b9\u30ed\u30c3\u30c8\u540d\": \u30d5\u30ec\u30fc\u30e0Widget} \u306e\u8f9e\u66f8\n\n    Example:\n        # \u30d8\u30c3\u30c0\u30fc\n        self.header_frame = tk.Frame(self, height=60, bg='navy')\n        self.header_frame.pack(fill=tk.X)\n\n        # \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30f3\u30c4\n        self.main_frame = tk.Frame(self)\n        self.main_frame.pack(fill=tk.BOTH, expand=True)\n\n        # \u30d5\u30c3\u30bf\u30fc\n        self.footer_frame = tk.Frame(self, height=30, bg='gray')\n        self.footer_frame.pack(fill=tk.X)\n\n        return {\n            \"header\": self.header_frame,\n            \"main\": self.main_frame,\n            \"footer\": self.footer_frame\n        }\n    \"\"\"\n    pass\n</code></pre>"},{"location":"api/pubsubtk/ui/base/template_base/#pubsubtk.ui.base.template_base.TemplateMixin.define_slots--_1","title":"\u30d8\u30c3\u30c0\u30fc","text":"<p>self.header_frame = tk.Frame(self, height=60, bg='navy') self.header_frame.pack(fill=tk.X)</p>"},{"location":"api/pubsubtk/ui/base/template_base/#pubsubtk.ui.base.template_base.TemplateMixin.define_slots--_2","title":"\u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30f3\u30c4","text":"<p>self.main_frame = tk.Frame(self) self.main_frame.pack(fill=tk.BOTH, expand=True)</p>"},{"location":"api/pubsubtk/ui/base/template_base/#pubsubtk.ui.base.template_base.TemplateMixin.define_slots--_3","title":"\u30d5\u30c3\u30bf\u30fc","text":"<p>self.footer_frame = tk.Frame(self, height=30, bg='gray') self.footer_frame.pack(fill=tk.X)</p> <p>return {     \"header\": self.header_frame,     \"main\": self.main_frame,     \"footer\": self.footer_frame }</p>"},{"location":"api/pubsubtk/ui/base/template_base/#pubsubtk.ui.base.template_base.TemplateMixin.switch_slot_content","title":"switch_slot_content","text":"<pre><code>switch_slot_content(slot_name: str, cls: ComponentType, kwargs: dict = None) -&gt; None\n</code></pre> <p>\u6307\u5b9a\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u5207\u308a\u66ff\u3048\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>slot_name</code> <code>str</code> <p>\u30b9\u30ed\u30c3\u30c8\u540d</p> required <code>cls</code> <code>ComponentType</code> <p>\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9\uff08Container/Presentational\u4e21\u5bfe\u5fdc\uff09</p> required <code>kwargs</code> <code>dict</code> <p>\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u6e21\u3059\u5f15\u6570</p> <code>None</code> Source code in <code>src/pubsubtk/ui/base/template_base.py</code> <pre><code>def switch_slot_content(\n    self, slot_name: str, cls: ComponentType, kwargs: dict = None\n) -&gt; None:\n    \"\"\"\n    \u6307\u5b9a\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u5207\u308a\u66ff\u3048\u308b\u3002\n\n    Args:\n        slot_name: \u30b9\u30ed\u30c3\u30c8\u540d\n        cls: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30af\u30e9\u30b9\uff08Container/Presentational\u4e21\u5bfe\u5fdc\uff09\n        kwargs: \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u6e21\u3059\u5f15\u6570\n    \"\"\"\n    if slot_name not in self._slots:\n        raise ValueError(f\"Unknown slot: {slot_name}\")\n\n    # \u65e2\u5b58\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7834\u68c4\n    if slot_name in self._slot_contents:\n        self._slot_contents[slot_name].destroy()\n\n    # \u65b0\u3057\u3044\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u4f5c\u6210\n    parent_frame = self._slots[slot_name]\n    content = self._create_component_for_slot(cls, parent_frame, kwargs)\n    content.pack(fill=tk.BOTH, expand=True)\n\n    self._slot_contents[slot_name] = content\n</code></pre>"},{"location":"api/pubsubtk/ui/base/template_base/#pubsubtk.ui.base.template_base.TemplateMixin.get_slots","title":"get_slots","text":"<pre><code>get_slots() -&gt; Dict[str, Widget]\n</code></pre> <p>\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30b9\u30ed\u30c3\u30c8\u306e\u8f9e\u66f8\u3092\u8fd4\u3059</p> Source code in <code>src/pubsubtk/ui/base/template_base.py</code> <pre><code>def get_slots(self) -&gt; Dict[str, tk.Widget]:\n    \"\"\"\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30b9\u30ed\u30c3\u30c8\u306e\u8f9e\u66f8\u3092\u8fd4\u3059\"\"\"\n    return self._slots.copy()\n</code></pre>"},{"location":"api/pubsubtk/ui/base/template_base/#pubsubtk.ui.base.template_base.TemplateMixin.get_slot_content","title":"get_slot_content","text":"<pre><code>get_slot_content(slot_name: str) -&gt; Widget | None\n</code></pre> <p>\u6307\u5b9a\u30b9\u30ed\u30c3\u30c8\u306e\u73fe\u5728\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u8fd4\u3059</p> Source code in <code>src/pubsubtk/ui/base/template_base.py</code> <pre><code>def get_slot_content(self, slot_name: str) -&gt; tk.Widget | None:\n    \"\"\"\u6307\u5b9a\u30b9\u30ed\u30c3\u30c8\u306e\u73fe\u5728\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u8fd4\u3059\"\"\"\n    return self._slot_contents.get(slot_name)\n</code></pre>"},{"location":"api/pubsubtk/ui/base/template_base/#pubsubtk.ui.base.template_base.TemplateMixin.has_slot","title":"has_slot","text":"<pre><code>has_slot(slot_name: str) -&gt; bool\n</code></pre> <p>\u6307\u5b9a\u3057\u305f\u540d\u524d\u306e\u30b9\u30ed\u30c3\u30c8\u304c\u5b58\u5728\u3059\u308b\u304b\u30c1\u30a7\u30c3\u30af</p> Source code in <code>src/pubsubtk/ui/base/template_base.py</code> <pre><code>def has_slot(self, slot_name: str) -&gt; bool:\n    \"\"\"\u6307\u5b9a\u3057\u305f\u540d\u524d\u306e\u30b9\u30ed\u30c3\u30c8\u304c\u5b58\u5728\u3059\u308b\u304b\u30c1\u30a7\u30c3\u30af\"\"\"\n    return slot_name in self._slots\n</code></pre>"},{"location":"api/pubsubtk/ui/base/template_base/#pubsubtk.ui.base.template_base.TemplateMixin.clear_slot","title":"clear_slot","text":"<pre><code>clear_slot(slot_name: str) -&gt; None\n</code></pre> <p>\u6307\u5b9a\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30af\u30ea\u30a2\u3059\u308b</p> Source code in <code>src/pubsubtk/ui/base/template_base.py</code> <pre><code>def clear_slot(self, slot_name: str) -&gt; None:\n    \"\"\"\u6307\u5b9a\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30af\u30ea\u30a2\u3059\u308b\"\"\"\n    if slot_name in self._slot_contents:\n        self._slot_contents[slot_name].destroy()\n        del self._slot_contents[slot_name]\n</code></pre>"},{"location":"api/pubsubtk/ui/base/template_base/#pubsubtk.ui.base.template_base.TemplateMixin.clear_all_slots","title":"clear_all_slots","text":"<pre><code>clear_all_slots() -&gt; None\n</code></pre> <p>\u3059\u3079\u3066\u306e\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30af\u30ea\u30a2\u3059\u308b</p> Source code in <code>src/pubsubtk/ui/base/template_base.py</code> <pre><code>def clear_all_slots(self) -&gt; None:\n    \"\"\"\u3059\u3079\u3066\u306e\u30b9\u30ed\u30c3\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30af\u30ea\u30a2\u3059\u308b\"\"\"\n    for slot_name in list(self._slot_contents.keys()):\n        self.clear_slot(slot_name)\n</code></pre>"},{"location":"api/pubsubtk/ui/base/template_base/#pubsubtk.ui.base.template_base.TemplateComponentTk","title":"TemplateComponentTk","text":"<pre><code>TemplateComponentTk(parent: Widget, store: Store[TState], *args, **kwargs)\n</code></pre> <p>               Bases: <code>TemplateMixin[TState]</code>, <code>Frame</code>, <code>Generic[TState]</code></p> <p>\u6a19\u6e96tk.Frame\u30d9\u30fc\u30b9\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3002</p> <p>tk.Frame \u30d9\u30fc\u30b9\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\u3002</p> Source code in <code>src/pubsubtk/ui/base/template_base.py</code> <pre><code>def __init__(self, parent: tk.Widget, store: Store[TState], *args, **kwargs):\n    \"\"\"tk.Frame \u30d9\u30fc\u30b9\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\u3002\"\"\"\n\n    tk.Frame.__init__(self, master=parent)\n    TemplateMixin.__init__(self, store=store, *args, **kwargs)\n</code></pre>"},{"location":"api/pubsubtk/ui/base/template_base/#pubsubtk.ui.base.template_base.TemplateComponentTtk","title":"TemplateComponentTtk","text":"<pre><code>TemplateComponentTtk(parent: Widget, store: Store[TState], *args, **kwargs)\n</code></pre> <p>               Bases: <code>TemplateMixin[TState]</code>, <code>Frame</code>, <code>Generic[TState]</code></p> <p>\u30c6\u30fc\u30de\u5bfe\u5fdcttk.Frame\u30d9\u30fc\u30b9\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3002</p> <p>ttk.Frame \u30d9\u30fc\u30b9\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\u3002</p> Source code in <code>src/pubsubtk/ui/base/template_base.py</code> <pre><code>def __init__(self, parent: tk.Widget, store: Store[TState], *args, **kwargs):\n    \"\"\"ttk.Frame \u30d9\u30fc\u30b9\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\u3002\"\"\"\n\n    ttk.Frame.__init__(self, master=parent)\n    TemplateMixin.__init__(self, store=store, *args, **kwargs)\n</code></pre>"},{"location":"api/pubsubtk/utils/async_utils/","title":"pubsubtk.utils.async_utils","text":""},{"location":"api/pubsubtk/utils/async_utils/#pubsubtk.utils.async_utils","title":"pubsubtk.utils.async_utils","text":"<p>src/pubsubtk/utils/async_utils.py</p> <p>\u975e\u540c\u671f\u5b9f\u884c\u306b\u95a2\u3059\u308b\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u95a2\u6570\u30fb\u30c7\u30b3\u30ec\u30fc\u30bf\u30fc\u3092\u63d0\u4f9b\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3002</p>"},{"location":"api/pubsubtk/utils/async_utils/#pubsubtk.utils.async_utils.make_async","title":"make_async","text":"<pre><code>make_async(func: Callable) -&gt; Callable\n</code></pre> <p>\u95a2\u6570\u3092\u975e\u540c\u671f\u95a2\u6570\u3068\u3057\u3066\u30e9\u30c3\u30d7\u3059\u308b\u30c7\u30b3\u30ec\u30fc\u30bf\u30fc\u3002</p> <ul> <li>\u540c\u671f\u95a2\u6570\u306e\u5834\u5408: asyncio.run_in_executor\u3092\u5229\u7528\u3057\u3066\u975e\u540c\u671f\u5316</li> <li>\u975e\u540c\u671f\u95a2\u6570\u306e\u5834\u5408: \u305d\u306e\u307e\u307eawait\u53ef\u80fd\u306a\u95a2\u6570\u3068\u3057\u3066\u8fd4\u3059</li> </ul> <p>Parameters:</p> Name Type Description Default <code>func</code> <code>Callable</code> <p>\u4efb\u610f\u306e\u95a2\u6570\uff08\u540c\u671f\u30fb\u975e\u540c\u671f\u3069\u3061\u3089\u3067\u3082\u53ef\uff09</p> required <p>Returns:</p> Name Type Description <code>Callable</code> <code>Callable</code> <p>\u975e\u540c\u671f\u95a2\u6570\u3068\u3057\u3066\u4f7f\u3048\u308b\u95a2\u6570</p> Source code in <code>src/pubsubtk/utils/async_utils.py</code> <pre><code>def make_async(func: Callable) -&gt; Callable:\n    \"\"\"\n    \u95a2\u6570\u3092\u975e\u540c\u671f\u95a2\u6570\u3068\u3057\u3066\u30e9\u30c3\u30d7\u3059\u308b\u30c7\u30b3\u30ec\u30fc\u30bf\u30fc\u3002\n\n    - \u540c\u671f\u95a2\u6570\u306e\u5834\u5408: asyncio.run_in_executor\u3092\u5229\u7528\u3057\u3066\u975e\u540c\u671f\u5316\n    - \u975e\u540c\u671f\u95a2\u6570\u306e\u5834\u5408: \u305d\u306e\u307e\u307eawait\u53ef\u80fd\u306a\u95a2\u6570\u3068\u3057\u3066\u8fd4\u3059\n\n    Args:\n        func (Callable): \u4efb\u610f\u306e\u95a2\u6570\uff08\u540c\u671f\u30fb\u975e\u540c\u671f\u3069\u3061\u3089\u3067\u3082\u53ef\uff09\n\n    Returns:\n        Callable: \u975e\u540c\u671f\u95a2\u6570\u3068\u3057\u3066\u4f7f\u3048\u308b\u95a2\u6570\n    \"\"\"\n    if inspect.iscoroutinefunction(func):\n\n        @wraps(func)\n        async def async_wrapper(*args, **kwargs):\n            return await func(*args, **kwargs)\n\n        return async_wrapper\n    else:\n\n        @wraps(func)\n        async def sync_to_async_wrapper(*args, **kwargs):\n            loop = asyncio.get_running_loop()\n            return await loop.run_in_executor(None, lambda: func(*args, **kwargs))\n\n        return sync_to_async_wrapper\n</code></pre>"},{"location":"api/pubsubtk/utils/async_utils/#pubsubtk.utils.async_utils.make_async_task","title":"make_async_task","text":"<pre><code>make_async_task(func: Callable) -&gt; Callable\n</code></pre> <p>\u95a2\u6570\u3092\u5373\u5ea7\u306bTask\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3059\u308b\u30c7\u30b3\u30ec\u30fc\u30bf\u30fc\u3002</p> <ul> <li>\u975e\u540c\u671f\u95a2\u6570\u306e\u5834\u5408: create_task\u3067\u5373\u30bf\u30b9\u30af\u5316</li> <li>\u540c\u671f\u95a2\u6570\u306e\u5834\u5408: run_in_executor\u3067\u975e\u540c\u671f\u5316\u3057\u3064\u3064\u30bf\u30b9\u30af\u5316</li> </ul> <p>Parameters:</p> Name Type Description Default <code>func</code> <code>Callable</code> <p>\u4efb\u610f\u306e\u95a2\u6570\uff08\u540c\u671f\u30fb\u975e\u540c\u671f\u3069\u3061\u3089\u3067\u3082\u53ef\uff09</p> required <p>Returns:</p> Name Type Description <code>Callable</code> <code>Callable</code> <p>\u547c\u3073\u51fa\u3057\u6642\u306basyncio.Task\u3092\u8fd4\u3059\u95a2\u6570</p> Source code in <code>src/pubsubtk/utils/async_utils.py</code> <pre><code>def make_async_task(func: Callable) -&gt; Callable:\n    \"\"\"\n    \u95a2\u6570\u3092\u5373\u5ea7\u306bTask\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3059\u308b\u30c7\u30b3\u30ec\u30fc\u30bf\u30fc\u3002\n\n    - \u975e\u540c\u671f\u95a2\u6570\u306e\u5834\u5408: create_task\u3067\u5373\u30bf\u30b9\u30af\u5316\n    - \u540c\u671f\u95a2\u6570\u306e\u5834\u5408: run_in_executor\u3067\u975e\u540c\u671f\u5316\u3057\u3064\u3064\u30bf\u30b9\u30af\u5316\n\n    Args:\n        func (Callable): \u4efb\u610f\u306e\u95a2\u6570\uff08\u540c\u671f\u30fb\u975e\u540c\u671f\u3069\u3061\u3089\u3067\u3082\u53ef\uff09\n\n    Returns:\n        Callable: \u547c\u3073\u51fa\u3057\u6642\u306basyncio.Task\u3092\u8fd4\u3059\u95a2\u6570\n    \"\"\"\n    if inspect.iscoroutinefunction(func):\n\n        @wraps(func)\n        def async_task_wrapper(*args, **kwargs):\n            loop = asyncio.get_event_loop()\n            return loop.create_task(func(*args, **kwargs))\n\n        return async_task_wrapper\n    else:\n\n        @wraps(func)\n        def sync_task_wrapper(*args, **kwargs):\n            loop = asyncio.get_event_loop()\n\n            async def _async_func():\n                return await loop.run_in_executor(None, lambda: func(*args, **kwargs))\n\n            return loop.create_task(_async_func())\n\n        return sync_task_wrapper\n</code></pre>"}]}